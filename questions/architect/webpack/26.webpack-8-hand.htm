<!DOCTYPE html>
<!-- saved from url=(0068)http://www.zhufengpeixun.cn/architecture/html/26.webpack-8-hand.html -->
<html lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>珠峰架构师成长计划</title>
    <link rel="stylesheet" type="text/css" href="./26.webpack-8-hand_files/main.css">
<style type="text/css" abt="234"></style><script>//console.log('a')
</script><script>//remove 17173 video ad
doAdblock();
function doAdblock(){
    (function() {
        function A() {}
        A.prototype = {
            rules: {
                '17173_in':{
                    'find':/http:\/\/f\.v\.17173cdn\.com\/(\d+\/)?flash\/PreloaderFile(Customer)?\.swf/,
                    'replace':"http://swf.adtchrome.com/17173_in_20150522.swf"
                },
                '17173_out':{
                    'find':/http:\/\/f\.v\.17173cdn\.com\/(\d+\/)?flash\/PreloaderFileFirstpage\.swf/,
                    'replace':"http://swf.adtchrome.com/17173_out_20150522.swf"
                },
                '17173_live':{
                    'find':/http:\/\/f\.v\.17173cdn\.com\/(\d+\/)?flash\/Player_stream(_firstpage)?\.swf/,
                    'replace':"http://swf.adtchrome.com/17173_stream_20150522.swf"
                },
                '17173_live_out':{
                    'find':/http:\/\/f\.v\.17173cdn\.com\/(\d+\/)?flash\/Player_stream_(custom)?Out\.swf/,
                    'replace':"http://swf.adtchrome.com/17173.out.Live.swf"
                }
            },
            _done: null,
            get done() {
                if(!this._done) {
                    this._done = new Array();
                }
                return this._done;
            },
            addAnimations: function() {
                var style = document.createElement('style');
                style.type = 'text/css';
                style.innerHTML = 'object,embed{\
                -webkit-animation-duration:.001s;-webkit-animation-name:playerInserted;\
                -ms-animation-duration:.001s;-ms-animation-name:playerInserted;\
                -o-animation-duration:.001s;-o-animation-name:playerInserted;\
                animation-duration:.001s;animation-name:playerInserted;}\
                @-webkit-keyframes playerInserted{from{opacity:0.99;}to{opacity:1;}}\
                @-ms-keyframes playerInserted{from{opacity:0.99;}to{opacity:1;}}\
                @-o-keyframes playerInserted{from{opacity:0.99;}to{opacity:1;}}\
                @keyframes playerInserted{from{opacity:0.99;}to{opacity:1;}}';
                document.getElementsByTagName('head')[0].appendChild(style);
            },
            animationsHandler: function(e) {
                if(e.animationName === 'playerInserted') {
                    this.replace(e.target);
                }
            },
            replace: function(elem) {
                if(this.done.indexOf(elem) != -1) return;
                this.done.push(elem);
                var player = elem.data || elem.src;
                if(!player) return;
                var i, find, replace = false;
                for(i in this.rules) {
                    find = this.rules[i]['find'];
                    if(find.test(player)) {
                        replace = this.rules[i]['replace'];
                        if('function' === typeof this.rules[i]['preHandle']) {
                            this.rules[i]['preHandle'].bind(this, elem, find, replace, player)();
                        }else{
                            this.reallyReplace.bind(this, elem, find, replace)();
                        }
                        break;
                    }
                }
            },
            reallyReplace: function(elem, find, replace) {
                elem.data && (elem.data = elem.data.replace(find, replace)) || elem.src && ((elem.src = elem.src.replace(find, replace)) && (elem.style.display = 'block'));
                var b = elem.querySelector("param[name='movie']");
                this.reloadPlugin(elem);
            },
            reloadPlugin: function(elem) {
                var nextSibling = elem.nextSibling;
                var parentNode = elem.parentNode;
                parentNode.removeChild(elem);
                var newElem = elem.cloneNode(true);
                this.done.push(newElem);
                if(nextSibling) {
                    parentNode.insertBefore(newElem, nextSibling);
                } else {
                    parentNode.appendChild(newElem);
                }
            },
            init: function() {
                var handler = this.animationsHandler.bind(this);
                document.body.addEventListener('webkitAnimationStart', handler, false);
                document.body.addEventListener('msAnimationStart', handler, false);
                document.body.addEventListener('oAnimationStart', handler, false);
                document.body.addEventListener('animationstart', handler, false);
                this.addAnimations();
            }
        };
        new A().init();
    })();
}
//remove baidu search ad
if(document.URL.indexOf('www.baidu.com') >= 0){
    if(document && document.getElementsByTagName && document.getElementById && document.body){
        var aa = function(){
            var all = document.body.querySelectorAll("#content_left div,#content_left table");
            for(var i = 0; i < all.length; i++){
                if(/display:\s?(table|block)\s!important/.test(all[i].getAttribute("style"))){all[i].style.display= "none";all[i].style.visibility='hidden';}
            }
            all = document.body.querySelectorAll('.result.c-container[id="1"]');
            //if(all.length == 1) return;
            for(var i = 0; i < all.length; i++){
                if(all[i].innerHTML && all[i].innerHTML.indexOf('广告')>-1){
                    all[i].style.display= "none";all[i].style.visibility='hidden';
                }
            }
        }
        aa();
        document.getElementById('wrapper_wrapper').addEventListener('DOMSubtreeModified',aa)
    };
}
//remove sohu video ad
if (document.URL.indexOf("tv.sohu.com") >= 0){
    if (document.cookie.indexOf("fee_status=true")==-1){document.cookie='fee_status=true'};
}
//remove 56.com video ad
if (document.URL.indexOf("56.com") >= 0){
    if (document.cookie.indexOf("fee_status=true")==-1){document.cookie='fee_status=true'};
}
//fore iqiyi enable html5 player function
if (document.URL.indexOf("iqiyi.com") >= 0){
    if (document.cookie.indexOf("player_forcedType=h5_VOD")==-1){
        document.cookie='player_forcedType=h5_VOD'
        if(localStorage.reloadTime && Date.now() - parseInt(localStorage.reloadTime)<60000){
            console.log('no reload')
        }else{
            location.reload()
            localStorage.reloadTime = Date.now();
        }
    }
}
</script><style type="text/css">object,embed{                -webkit-animation-duration:.001s;-webkit-animation-name:playerInserted;                -ms-animation-duration:.001s;-ms-animation-name:playerInserted;                -o-animation-duration:.001s;-o-animation-name:playerInserted;                animation-duration:.001s;animation-name:playerInserted;}                @-webkit-keyframes playerInserted{from{opacity:0.99;}to{opacity:1;}}                @-ms-keyframes playerInserted{from{opacity:0.99;}to{opacity:1;}}                @-o-keyframes playerInserted{from{opacity:0.99;}to{opacity:1;}}                @keyframes playerInserted{from{opacity:0.99;}to{opacity:1;}}</style></head>
<body>
<div class="nav" style="height: 81px;">
    <div class="logo">
        
            珠峰架构师成长计划
        
    </div>
<ul><li><a href="http://www.zhufengpeixun.cn/architecture/index.html">0.Async</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/0.editor.html">0.editor</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/0.module.html">0.module</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/1.ES2015.html">1.ES2015</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/2.Promise.html">2.Promise</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/3.Node.html">3.Node</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/4.NodeInstall.html">4.NodeInstall</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/5.REPL.html">5.REPL</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/6.NodeCore.html">6.NodeCore</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/7.module&amp;NPM.html">7.module&amp;NPM</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/8.Encoding.html">8.Encoding</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/9.Buffer.html">9.Buffer</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/10.fs.html">10.fs</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/11.Stream-1.html">11.Stream-1</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/11.Stream-2.html">11.Stream-2</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/11.Stream-3.html">11.Stream-3</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/11.Stream-4.html">11.Stream-4</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/12-Network-2.html">12-Network-2</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/12.NetWork-3.html">12.NetWork-3</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/12.Network-1.html">12.Network-1</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/13.tcp.html">13.tcp</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/14.http-1.html">14.http-1</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/14.http-2.html">14.http-2</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/15.compress.html">15.compress</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/16.crypto.html">16.crypto</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/17.process.html">17.process</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/18.yargs.html">18.yargs</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/19.cache.html">19.cache</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/20.action.html">20.action</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/21.https.html">21.https</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/22.cookie.html">22.cookie</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/23.session.html">23.session</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/24.express-1.html">24.express-1</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/24.express-2.html">24.express-2</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/24.express-3.html">24.express-3</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/24.express-4.html">24.express-4</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/25.koa-1.html">25.koa-1</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-1-basic.html">26.webpack-1-basic</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-2-optimize.html">26.webpack-2-optimize</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-3.tapable.html">26.webpack-3.tapable</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-4-AST.html">26.webpack-4-AST</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-5-source.html">26.webpack-5-source</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-6-loader.html">26.webpack-6-loader</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-7-plugin.html">26.webpack-7-plugin</a></li><li class="active"><a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-8-hand.html">26.webpack-8-hand</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/27.react-1.html">27.react-1</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/27.react-2.html">27.react-2</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/27.react-3.html">27.react-3</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/27.react-4-immutable.html">27.react-4-immutable</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/27.react-5-react-dom-diff.html">27.react-5-react-dom-diff</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/27.react-6.html">27.react-6</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/28.react-mobx.html">28.react-mobx</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/28.redux-0.html">28.redux-0</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/28.redux-1.html">28.redux-1</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/28.redux-2-%E4%B8%AD%E9%97%B4%E4%BB%B6.html">28.redux-2-中间件</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/28.redux-jwt-back.html">28.redux-jwt-back</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/28.redux-jwt-front.html">28.redux-jwt-front</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/29.mongodb-1.html">29.mongodb-1</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/29.mongodb-2.html">29.mongodb-2</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/29.mongodb-3.html">29.mongodb-3</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/29.mongodb-4.html">29.mongodb-4</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/29.mongodb-5.html">29.mongodb-5</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/29.mongodb-6.html">29.mongodb-6</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/30.cms-1-mysql.html">30.cms-1-mysql</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/30.cms-2-mysql.html">30.cms-2-mysql</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/30.cms-3-mysql.html">30.cms-3-mysql</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/30.cms-4-nunjucks.html">30.cms-4-nunjucks</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/30.cms-5-mock.html">30.cms-5-mock</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/30.cms-6-egg.html">30.cms-6-egg</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/30.cms-7-api.html">30.cms-7-api</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/30.cms-8-roadhog.html">30.cms-8-roadhog</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/30.cms-9-yaml.html">30.cms-9-yaml</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/30.cms-10-umi.html">30.cms-10-umi</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/30.cms-11-saga.html">30.cms-11-saga</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/30.cms-12-dva.html">30.cms-12-dva</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/30.cms-13-dva-ant.html">30.cms-13-dva-ant</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/30.cms-14-front.html">30.cms-14-front</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/30.cms-15-deploy.html">30.cms-15-deploy</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/31.dva.html">31.dva</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/31.saga.html">31.saga</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/33.redis.html">33.redis</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/34.unittest.html">34.unittest</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/35.jwt.html">35.jwt</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/36.websocket-1.html">36.websocket-1</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/36.websocket-2.html">36.websocket-2</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/38.chat-api-1.html">38.chat-api-1</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/38.chat-api-2.html">38.chat-api-2</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/38.chat-3.html">38.chat-3</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/38.chat-api-3.html">38.chat-api-3</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/38.chat.html">38.chat</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/38.chat2.html">38.chat2</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/38.chat2.html">38.chat2</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/39.crawl-0.html">39.crawl-0</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/39.crawl-1.html">39.crawl-1</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/39.crawl-2.html">39.crawl-2</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/40.deploy.html">40.deploy</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/41.safe.html">41.safe</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/42.test.html">42.test</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/43.nginx.html">43.nginx</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/44.enzyme.html">44.enzyme</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/45.docker.html">45.docker</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/46.elastic.html">46.elastic</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/47.oauth.html">47.oauth</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/48.wxpay.html">48.wxpay</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/index.html">index</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/51.typescript.html">51.typescript</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/52.UML.html">52.UML</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/53.design.html">53.design</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/index.html">index</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/54.linux.html">54.linux</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/57.ts.html">57.ts</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/56.react-ssr.html">56.react-ssr</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/58.ts_react.html">58.ts_react</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/59.ketang.html">59.ketang</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/59.ketang2.html">59.ketang2</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/60.react.html">60.react</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/60.react-1.html">60.react-1</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/61.1.devops-linux.html">61.1.devops-linux</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/61.2.devops-vi.html">61.2.devops-vi</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/61.3.devops-user.html">61.3.devops-user</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/61.4.devops-auth.html">61.4.devops-auth</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/61.5.devops-shell.html">61.5.devops-shell</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/61.6.devops-install.html">61.6.devops-install</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/61.7.devops-system.html">61.7.devops-system</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/61.8.devops-service.html">61.8.devops-service</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/61.9.devops-network.html">61.9.devops-network</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/61.10.devops-nginx.html">61.10.devops-nginx</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/61.11.devops-docker.html">61.11.devops-docker</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/61.12.devops-jekins.html">61.12.devops-jekins</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/61.13.devops-groovy.html">61.13.devops-groovy</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/61.14.devops-php.html">61.14.devops-php</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/61.15.devops-java.html">61.15.devops-java</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/61.16.devops-node.html">61.16.devops-node</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/62.1.react-basic.html">62.1.react-basic</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/62.2.react-state.html">62.2.react-state</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/62.3.react-high.html">62.3.react-high</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/62.4.react-hooks.html">62.4.react-hooks</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/63.1.redux.html">63.1.redux</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/63.2.redux-middleware.html">63.2.redux-middleware</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/63.3.redux-saga.html">63.3.redux-saga</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html">63.4.redux-saga-hand</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/64.1.router.html">64.1.router</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/64.2.router-connected.html">64.2.router-connected</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/65.1.typescript.html">65.1.typescript</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/65.2.typescript.html">65.2.typescript</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html">65.3.typescript</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/65.4.antd.html">65.4.antd</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/66-1.vue-base.html">66-1.vue-base</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/66-2.vue-component.html">66-2.vue-component</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/66-3.vue-cli3.0.html">66-3.vue-cli3.0</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/66-4.$message%E7%BB%84%E4%BB%B6.html">66-4.$message组件</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/66-5.Form%E7%BB%84%E4%BB%B6.html">66-5.Form组件</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/66-6.tree.html">66-6.tree</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/66-7.vue-router-apply.html">66-7.vue-router-apply</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/66-8.axios-apply.html">66-8.axios-apply</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/66-9.vuex-apply.html">66-9.vuex-apply</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/66-10.jwt-vue.html">66-10.jwt-vue</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/66-11.vue-ssr.html">66-11.vue-ssr</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/66-12.nuxt-apply.html">66-12.nuxt-apply</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/66-13.pwa.html">66-13.pwa</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/66-14.vue%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95.html">66-14.vue单元测试</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/66-15.%E6%9D%83%E9%99%90%E6%A0%A1%E9%AA%8C.html">66-15.权限校验</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/67-1-network.html">67-1-network</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/68-2-wireshark.html">68-2-wireshark</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/7.npm2.html">7.npm2</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/31.cms-13-dva-antdesign.html">31.cms-13-dva-antdesign</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/69-hooks.html">69-hooks</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/70-deploy.html">70-deploy</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/61.17.devops-k8s.html">61.17.devops-k8s</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/60.react-2.html">60.react-2</a></li></ul></div>


<div class="warpper">

    <div class="page-toc">
        <ul><li><a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-8-hand.html#t01.%20Webpack%E6%B5%81%E7%A8%8B%E6%A6%82%E6%8B%AC">1. Webpack流程概括</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-8-hand.html#t12.%20%E9%92%A9%E5%AD%90">2. 钩子</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-8-hand.html#t23.%20%E7%BC%96%E5%86%99%E7%A4%BA%E4%BE%8B%E9%A1%B9%E7%9B%AE">3. 编写示例项目</a><ul><li><a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-8-hand.html#t33.1%20%E5%AE%89%E8%A3%85%E4%BE%9D%E8%B5%96%E6%A8%A1%E5%9D%97">3.1 安装依赖模块</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-8-hand.html#t43.2%20%20%E7%BC%96%E5%86%99webpack%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6">3.2  编写webpack配置文件</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-8-hand.html#t53.3%20%E6%BA%90%E6%96%87%E4%BB%B6">3.3 源文件</a><ul><li><a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-8-hand.html#t63.3.1%20src/index.js">3.3.1 src/index.js</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-8-hand.html#t73.3.2%20src/a1.js">3.3.2 src/a1.js</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-8-hand.html#t83.3.3%20src/base/a2.js">3.3.3 src/base/a2.js</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-8-hand.html#t93.3.4%20%E4%BA%A7%E5%87%BAbundle.js">3.3.4 产出bundle.js</a></li></ul></li></ul></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-8-hand.html#t104.%20%E7%BC%96%E5%86%99webpack">4. 编写webpack</a><ul><li><a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-8-hand.html#t114.1%20%20%E5%AE%89%E8%A3%85%E4%BE%9D%E8%B5%96%E5%8C%85">4.1  安装依赖包</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-8-hand.html#t124.2%20%20%E5%88%9B%E5%BB%BA%E9%A1%B9%E7%9B%AE">4.2  创建项目</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-8-hand.html#t134.3%20%20%E5%88%9B%E5%BB%BA%E5%8F%AF%E6%89%A7%E8%A1%8C%E6%96%87%E4%BB%B6">4.3  创建可执行文件</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-8-hand.html#t144.4%20%E5%88%9B%E5%BB%BACompiler%E5%AF%B9%E8%B1%A1">4.4 创建Compiler对象</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-8-hand.html#t154.5%20%E5%85%A5%E5%8F%A3%E6%A8%A1%E6%9D%BF">4.5 入口模板</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-8-hand.html#t164.6%20%E4%BA%A7%E5%87%BA%E6%96%87%E4%BB%B6">4.6 产出文件</a></li></ul></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-8-hand.html#t175.%20%E6%94%AF%E6%8C%81loader">5. 支持loader</a><ul><li><a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-8-hand.html#t185.1%20Compiler">5.1 Compiler</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-8-hand.html#t195.2%20less-loader">5.2 less-loader</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-8-hand.html#t205.3%20style-loader">5.3 style-loader</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-8-hand.html#t215.4%20index.js">5.4 index.js</a></li></ul></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-8-hand.html#t226.%20%20%E6%94%AF%E6%8C%81%E6%8F%92%E4%BB%B6">6.  支持插件</a><ul><li><a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-8-hand.html#t236.1%20webpack.config.js">6.1 webpack.config.js</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-8-hand.html#t246.2%20Compiler">6.2 Compiler</a></li></ul></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-8-hand.html#t257.%E6%94%AF%E6%8C%81%E6%87%92%E5%8A%A0%E8%BD%BD">7.支持懒加载</a><ul><li><a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-8-hand.html#t267.1%20Compiler">7.1 Compiler</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-8-hand.html#t277.2%20chunk.ejs">7.2 chunk.ejs</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-8-hand.html#t287.3%20index.js">7.3 index.js</a></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-8-hand.html#t297.4%20video.js">7.4 video.js</a></li></ul></li><li><a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-8-hand.html#t30%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99">参考资料</a></li></ul>
    </div>
    
    <div class="content markdown-body">
        <h2 id="t01. Webpack流程概括">1. Webpack流程概括 <a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-8-hand.html#t01.%20Webpack%E6%B5%81%E7%A8%8B%E6%A6%82%E6%8B%AC"> # </a></h2>
<ul>
<li>初始化参数：从配置文件和 Shell 语句中读取与合并参数，得出最终的参数；
开始编译：用上一步得到的参数初始化 Compiler 对象，加载所有配置的插件，执行对象的 run 方法开始执行编译；</li>
<li>确定入口：根据配置中的 entry 找出所有的入口文件；</li>
<li>编译模块：从入口文件出发，调用所有配置的 Loader 对模块进行翻译，再找出该模块依赖的模块，再递归本步骤直到所有入口依赖的文件都经过了本步骤的处理；</li>
<li>完成模块编译：在经过第4步使用 Loader 翻译完所有模块后，得到了每个模块被翻译后的最终内容以及它们之间的依赖关系；</li>
<li>输出资源：根据入口和模块之间的依赖关系，组装成一个个包含多个模块的 Chunk，再把每个 Chunk 转换成一个单独的文件加入到输出列表，这步是可以修改输出内容的最后机会；</li>
<li>输出完成：在确定好输出内容后，根据配置确定输出的路径和文件名，把文件内容写入到文件系统。<blockquote>
<p>在以上过程中，Webpack 会在特定的时间点广播出特定的事件，插件在监听到感兴趣的事件后会执行特定的逻辑，并且插件可以调用 Webpack 提供的 API 改变 Webpack 的运行结果。</p>
</blockquote>
</li>
</ul>
<h2 id="t12. 钩子">2. 钩子 <a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-8-hand.html#t12.%20%E9%92%A9%E5%AD%90"> # </a></h2>
<ul>
<li>entryOption 读取配置文件</li>
<li>afterPlugins 加载所有的插件</li>
<li>run 开始执行编译流程</li>
<li>compile 开始编译</li>
<li>afterCompile 编译完成</li>
<li>emit 写入文件</li>
<li>done  完成整体流程</li>
</ul>
<h2 id="t23. 编写示例项目">3. 编写示例项目 <a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-8-hand.html#t23.%20%E7%BC%96%E5%86%99%E7%A4%BA%E4%BE%8B%E9%A1%B9%E7%9B%AE"> # </a></h2>
<h3 id="t33.1 安装依赖模块">3.1 安装依赖模块 <a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-8-hand.html#t33.1%20%E5%AE%89%E8%A3%85%E4%BE%9D%E8%B5%96%E6%A8%A1%E5%9D%97"> # </a></h3>
<pre><code class="lang-js">$ npm init -y
$ yarn add webpack webpack-cli html-webpack-plugin
</code></pre>
<h3 id="t43.2  编写webpack配置文件">3.2  编写webpack配置文件 <a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-8-hand.html#t43.2%20%20%E7%BC%96%E5%86%99webpack%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6"> # </a></h3>
<p>webpack.config.js</p>
<pre><code class="lang-js"><span class="hljs-keyword">const</span> path = <span class="hljs-built_in">require</span>(<span class="hljs-string">'path'</span>);
<span class="hljs-built_in">module</span>.exports = {
    <span class="hljs-attr">mode</span>: <span class="hljs-string">'development'</span>,
    <span class="hljs-attr">entry</span>: <span class="hljs-string">'./src/index.js'</span>,
    <span class="hljs-attr">output</span>: {
        <span class="hljs-attr">path</span>: path.resolve(__dirname, <span class="hljs-string">'dist'</span>),
        <span class="hljs-attr">filename</span>: <span class="hljs-string">'bundle.js'</span>
    },
    <span class="hljs-attr">module</span>: {},
    <span class="hljs-attr">plugins</span>: []
}
</code></pre>
<h3 id="t53.3 源文件">3.3 源文件 <a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-8-hand.html#t53.3%20%E6%BA%90%E6%96%87%E4%BB%B6"> # </a></h3>
<h4 id="t63.3.1 src/index.js">3.3.1 src/index.js <a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-8-hand.html#t63.3.1%20src/index.js"> # </a></h4>
<pre><code class="lang-js"><span class="hljs-keyword">let</span> a1=<span class="hljs-built_in">require</span>(<span class="hljs-string">'./a1'</span>);
<span class="hljs-built_in">console</span>.log(a1);
</code></pre>
<h4 id="t73.3.2 src/a1.js">3.3.2 src/a1.js <a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-8-hand.html#t73.3.2%20src/a1.js"> # </a></h4>
<pre><code class="lang-js"><span class="hljs-keyword">let</span> a2=<span class="hljs-built_in">require</span>(<span class="hljs-string">'./base/a2'</span>);
<span class="hljs-built_in">module</span>.exports=<span class="hljs-string">'a1'</span>+a2;
</code></pre>
<h4 id="t83.3.3 src/base/a2.js">3.3.3 src/base/a2.js <a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-8-hand.html#t83.3.3%20src/base/a2.js"> # </a></h4>
<pre><code class="lang-js"><span class="hljs-built_in">module</span>.exports=<span class="hljs-string">'a2'</span>;
</code></pre>
<h4 id="t93.3.4 产出bundle.js">3.3.4 产出bundle.js <a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-8-hand.html#t93.3.4%20%E4%BA%A7%E5%87%BAbundle.js"> # </a></h4>
<pre><code class="lang-js">(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">modules</span>) </span>{
  <span class="hljs-keyword">var</span> installedModules = {};
  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__webpack_require__</span>(<span class="hljs-params">moduleId</span>) </span>{
    <span class="hljs-keyword">if</span> (installedModules[moduleId]) {
      <span class="hljs-keyword">return</span> installedModules[moduleId].exports;
    }
    <span class="hljs-keyword">var</span> <span class="hljs-built_in">module</span> = installedModules[moduleId] = {
      <span class="hljs-attr">i</span>: moduleId,
      <span class="hljs-attr">l</span>: <span class="hljs-literal">false</span>,
      <span class="hljs-attr">exports</span>: {}
    };

    modules[moduleId].call(<span class="hljs-built_in">module</span>.exports, <span class="hljs-built_in">module</span>, <span class="hljs-built_in">module</span>.exports, __webpack_require__);
    <span class="hljs-built_in">module</span>.l = <span class="hljs-literal">true</span>;
    <span class="hljs-keyword">return</span> <span class="hljs-built_in">module</span>.exports;
  }
  <span class="hljs-keyword">return</span> __webpack_require__(__webpack_require__.s = <span class="hljs-string">"./src/index.js"</span>);
})
  ({

    <span class="hljs-string">"./src/a1.js"</span>:
      (<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">module, exports, __webpack_require__</span>) </span>{
        <span class="hljs-built_in">eval</span>(<span class="hljs-string">"let a2 = __webpack_require__( \"./src/base/a2.js\");\r\nmodule.exports = 'a1' + a2;"</span>);
      }),
    <span class="hljs-string">"./src/base/a2.js"</span>:
      (<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">module, exports</span>) </span>{
        <span class="hljs-built_in">eval</span>(<span class="hljs-string">"module.exports = 'a2';"</span>);
      }),

    <span class="hljs-string">"./src/index.js"</span>:
      (<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">module, exports, __webpack_require__</span>) </span>{
        <span class="hljs-built_in">eval</span>(<span class="hljs-string">"let a1 = __webpack_require__(\"./src/a1.js\");\r\nconsole.log(a1);"</span>);
      })
  });
</code></pre>
<h2 id="t104. 编写webpack">4. 编写webpack <a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-8-hand.html#t104.%20%E7%BC%96%E5%86%99webpack"> # </a></h2>
<h3 id="t114.1  安装依赖包">4.1  安装依赖包 <a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-8-hand.html#t114.1%20%20%E5%AE%89%E8%A3%85%E4%BE%9D%E8%B5%96%E5%8C%85"> # </a></h3>
<pre><code>$ yarn add babel-types babel-generator babel-traverse
</code></pre><h3 id="t124.2  创建项目">4.2  创建项目 <a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-8-hand.html#t124.2%20%20%E5%88%9B%E5%BB%BA%E9%A1%B9%E7%9B%AE"> # </a></h3>
<p>package.json</p>
<pre><code class="lang-json">{
  <span class="hljs-attr">"name"</span>: <span class="hljs-string">"webpackhand"</span>,
  <span class="hljs-attr">"version"</span>: <span class="hljs-string">"1.0.0"</span>,
  <span class="hljs-attr">"description"</span>: <span class="hljs-string">""</span>,
  <span class="hljs-attr">"main"</span>: <span class="hljs-string">"index.js"</span>,
  <span class="hljs-attr">"bin"</span>: {
    <span class="hljs-attr">"webpackhand"</span>: <span class="hljs-string">"./bin/webpackhand.js"</span>
  },
  <span class="hljs-attr">"keywords"</span>: [],
  <span class="hljs-attr">"author"</span>: <span class="hljs-string">""</span>,
  <span class="hljs-attr">"license"</span>: <span class="hljs-string">"ISC"</span>
}
</code></pre>
<h3 id="t134.3  创建可执行文件">4.3  创建可执行文件 <a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-8-hand.html#t134.3%20%20%E5%88%9B%E5%BB%BA%E5%8F%AF%E6%89%A7%E8%A1%8C%E6%96%87%E4%BB%B6"> # </a></h3>
<p>bin\webpackhand.js</p>
<pre><code class="lang-js"><span class="hljs-meta">#! /usr/bin/env node</span>
<span class="hljs-keyword">const</span> path = <span class="hljs-built_in">require</span>(<span class="hljs-string">'path'</span>);
<span class="hljs-keyword">const</span> fs = <span class="hljs-built_in">require</span>(<span class="hljs-string">'fs'</span>);
<span class="hljs-keyword">const</span> Compiler = <span class="hljs-built_in">require</span>(<span class="hljs-string">'../lib/Compiler'</span>);
<span class="hljs-comment">//命令的当前工作目录</span>
<span class="hljs-keyword">const</span> root = process.cwd();
<span class="hljs-comment">//匹配配置文件对象</span>
<span class="hljs-keyword">let</span> options = <span class="hljs-built_in">require</span>(path.resolve(<span class="hljs-string">'webpack.config.js'</span>));
<span class="hljs-keyword">let</span> compiler = <span class="hljs-keyword">new</span> Compiler(options);
compiler.run();
</code></pre>
<h3 id="t144.4 创建Compiler对象">4.4 创建Compiler对象 <a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-8-hand.html#t144.4%20%E5%88%9B%E5%BB%BACompiler%E5%AF%B9%E8%B1%A1"> # </a></h3>
<pre><code class="lang-js"><span class="hljs-keyword">const</span> path = <span class="hljs-built_in">require</span>(<span class="hljs-string">'path'</span>);
<span class="hljs-keyword">const</span> fs = <span class="hljs-built_in">require</span>(<span class="hljs-string">'fs'</span>);
<span class="hljs-keyword">const</span> babylon = <span class="hljs-built_in">require</span>(<span class="hljs-string">'babylon'</span>);
<span class="hljs-keyword">const</span> t = <span class="hljs-built_in">require</span>(<span class="hljs-string">'babel-types'</span>);
<span class="hljs-keyword">const</span> generate = <span class="hljs-built_in">require</span>(<span class="hljs-string">'babel-generator'</span>).default;
<span class="hljs-keyword">const</span> traverse = <span class="hljs-built_in">require</span>(<span class="hljs-string">'babel-traverse'</span>).default;
<span class="hljs-keyword">const</span> ejs = <span class="hljs-built_in">require</span>(<span class="hljs-string">'ejs'</span>);

<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Compiler</span> </span>{
    <span class="hljs-keyword">constructor</span>(options) {
        <span class="hljs-keyword">this</span>.options = options;
    }
    run() {
        <span class="hljs-keyword">let</span> that = <span class="hljs-keyword">this</span>;
        <span class="hljs-keyword">this</span>.root = process.cwd();<span class="hljs-comment">//获取当前的工作目录</span>
        <span class="hljs-keyword">let</span> { entry } = <span class="hljs-keyword">this</span>.options;<span class="hljs-comment">//获取入口文件路径</span>
        <span class="hljs-keyword">this</span>.entryId = <span class="hljs-literal">null</span>;<span class="hljs-comment">//记录入口文件的ID</span>
        <span class="hljs-keyword">this</span>.modules = {};<span class="hljs-comment">//记录模块ID和内容的对应关系，所有的ID都是相对于根目录的</span>
        <span class="hljs-keyword">this</span>.buildModule(path.resolve(<span class="hljs-keyword">this</span>.root, entry), <span class="hljs-literal">true</span>);<span class="hljs-comment">//从入口文件开始编译</span>
        <span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">this</span>.modules);
        <span class="hljs-keyword">this</span>.emitFile();
    }
    emitFile() {
        <span class="hljs-keyword">let</span> mainTemplate = fs.readFileSync(path.join(__dirname, <span class="hljs-string">'main.ejs'</span>), <span class="hljs-string">'utf8'</span>);
        <span class="hljs-keyword">let</span> { modules, entryId } = <span class="hljs-keyword">this</span>;
        <span class="hljs-keyword">let</span> main = ejs.compile(mainTemplate)({ entryId, modules });
        <span class="hljs-keyword">let</span> { <span class="hljs-attr">output</span>: { <span class="hljs-attr">path</span>: dist, filename } } = <span class="hljs-keyword">this</span>.options;
        fs.writeFileSync(path.join(dist, filename), main);
    }
    getSource(modulePath) {
        <span class="hljs-keyword">return</span> fs.readFileSync(modulePath, <span class="hljs-string">'utf8'</span>);
    }
    <span class="hljs-comment">//解析模块和依赖的模块，路径是一个绝对路径</span>
    buildModule(modulePath, isEntry) {
        <span class="hljs-keyword">let</span> source = <span class="hljs-keyword">this</span>.getSource(modulePath);<span class="hljs-comment">//获取源代码</span>
        <span class="hljs-keyword">let</span> moduleId = <span class="hljs-string">'./'</span> + path.relative(<span class="hljs-keyword">this</span>.root, modulePath);<span class="hljs-comment">//生成相对于工作根目录的模块ID</span>
        <span class="hljs-keyword">if</span> (isEntry) {<span class="hljs-comment">//如果是入口的话把ID赋给入口</span>
            <span class="hljs-keyword">this</span>.entryId = moduleId;
        }
        <span class="hljs-comment">//获取AST的编译结果 依赖的模块 转换后的源代码</span>
        <span class="hljs-keyword">let</span> { dependencies, sourcecode } = <span class="hljs-keyword">this</span>.parse(source, path.dirname(moduleId));
        <span class="hljs-keyword">this</span>.modules[moduleId] = sourcecode;
        <span class="hljs-comment">//递归解析依赖的模块</span>
        dependencies.forEach(<span class="hljs-function"><span class="hljs-params">dependency</span> =&gt;</span> <span class="hljs-keyword">this</span>.buildModule(path.join(<span class="hljs-keyword">this</span>.root, dependency)));
    }
    <span class="hljs-comment">//解析源代码  传入父路径</span>
    parse(source, parentPath) {
        <span class="hljs-keyword">let</span> that = <span class="hljs-keyword">this</span>;
        <span class="hljs-keyword">const</span> ast = babylon.parse(source);
        <span class="hljs-keyword">let</span> dependencies = [];
        traverse(ast, {
            CallExpression(p) {
                <span class="hljs-keyword">if</span> (p.node.callee.name == <span class="hljs-string">'require'</span>) {
                    <span class="hljs-keyword">let</span> node = p.node;
                    node.callee.name = <span class="hljs-string">'__webpack_require__'</span>;
                    <span class="hljs-keyword">let</span> modName = node.arguments[<span class="hljs-number">0</span>].value;
                    modName += (modName.lastIndexOf(<span class="hljs-string">'.'</span>) &gt; <span class="hljs-number">0</span> ? <span class="hljs-string">''</span> : <span class="hljs-string">'.js'</span>);
                    <span class="hljs-keyword">let</span> moduleId = <span class="hljs-string">'./'</span> + path.join(parentPath, modName);
                    dependencies.push(moduleId);
                    node.arguments = [t.stringLiteral(moduleId)];
                }
            }
        });
        <span class="hljs-keyword">let</span> sourcecode = generate(ast).code;
        <span class="hljs-keyword">return</span> { sourcecode, dependencies };
    }
}
<span class="hljs-built_in">module</span>.exports = Compiler;
</code></pre>
<h3 id="t154.5 入口模板">4.5 入口模板 <a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-8-hand.html#t154.5%20%E5%85%A5%E5%8F%A3%E6%A8%A1%E6%9D%BF"> # </a></h3>
<p>main.ejs</p>
<pre><code class="lang-js">(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">modules</span>) </span>{
    <span class="hljs-keyword">var</span> installedModules = {};
    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__webpack_require__</span>(<span class="hljs-params">moduleId</span>) </span>{
      <span class="hljs-keyword">if</span> (installedModules[moduleId]) {
        <span class="hljs-keyword">return</span> installedModules[moduleId].exports;
      }
      <span class="hljs-keyword">var</span> <span class="hljs-built_in">module</span> = installedModules[moduleId] = {
        <span class="hljs-attr">i</span>: moduleId,
        <span class="hljs-attr">l</span>: <span class="hljs-literal">false</span>,
        <span class="hljs-attr">exports</span>: {}
      };

      modules[moduleId].call(<span class="hljs-built_in">module</span>.exports, <span class="hljs-built_in">module</span>, <span class="hljs-built_in">module</span>.exports, __webpack_require__);
      <span class="hljs-built_in">module</span>.l = <span class="hljs-literal">true</span>;
      <span class="hljs-keyword">return</span> <span class="hljs-built_in">module</span>.exports;
    }
    <span class="hljs-keyword">return</span> __webpack_require__(__webpack_require__.s = <span class="hljs-string">"&lt;%-entryId%&gt;"</span>);
  })
    ({
        &lt;%
          <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> id <span class="hljs-keyword">in</span> modules){
              <span class="hljs-keyword">let</span> source = modules[id];%&gt;
              <span class="hljs-string">"&lt;%-id%&gt;"</span>:
              (<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">module, exports,__webpack_require__</span>) </span>{
                <span class="hljs-built_in">eval</span>(<span class="hljs-string">`&lt;%-source%&gt;`</span>);
              }),
           &lt;%}
        %&gt;
    });
</code></pre>
<h3 id="t164.6 产出文件">4.6 产出文件 <a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-8-hand.html#t164.6%20%E4%BA%A7%E5%87%BA%E6%96%87%E4%BB%B6"> # </a></h3>
<pre><code class="lang-js">(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">modules</span>) </span>{
    <span class="hljs-keyword">var</span> installedModules = {};
    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__webpack_require__</span>(<span class="hljs-params">moduleId</span>) </span>{
      <span class="hljs-keyword">if</span> (installedModules[moduleId]) {
        <span class="hljs-keyword">return</span> installedModules[moduleId].exports;
      }
      <span class="hljs-keyword">var</span> <span class="hljs-built_in">module</span> = installedModules[moduleId] = {
        <span class="hljs-attr">i</span>: moduleId,
        <span class="hljs-attr">l</span>: <span class="hljs-literal">false</span>,
        <span class="hljs-attr">exports</span>: {}
      };

      modules[moduleId].call(<span class="hljs-built_in">module</span>.exports, <span class="hljs-built_in">module</span>, <span class="hljs-built_in">module</span>.exports, __webpack_require__);
      <span class="hljs-built_in">module</span>.l = <span class="hljs-literal">true</span>;
      <span class="hljs-keyword">return</span> <span class="hljs-built_in">module</span>.exports;
    }
    <span class="hljs-keyword">return</span> __webpack_require__(__webpack_require__.s = <span class="hljs-string">"./src\index.js"</span>);
  })
    ({

              <span class="hljs-string">"./src\index.js"</span>:
              (<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">module, exports,__webpack_require__</span>) </span>{
                <span class="hljs-built_in">eval</span>(<span class="hljs-string">`let a1 = __webpack_require__("./src\\a1.js");
console.log(a1);`</span>);
              }),

              <span class="hljs-string">"./src\a1.js"</span>:
              (<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">module, exports,__webpack_require__</span>) </span>{
                <span class="hljs-built_in">eval</span>(<span class="hljs-string">`let a2 = __webpack_require__("./src\\base\\a2.js");
module.exports = 'a1' + a2;`</span>);
              }),

              <span class="hljs-string">"./src\base\a2.js"</span>:
              (<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">module, exports,__webpack_require__</span>) </span>{
                <span class="hljs-built_in">eval</span>(<span class="hljs-string">`module.exports = 'a2';`</span>);
              }),

    });
</code></pre>
<h2 id="t175. 支持loader">5. 支持loader <a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-8-hand.html#t175.%20%E6%94%AF%E6%8C%81loader"> # </a></h2>
<h3 id="t185.1 Compiler">5.1 Compiler <a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-8-hand.html#t185.1%20Compiler"> # </a></h3>
<pre><code class="lang-js"> getSource(modulePath) {
        <span class="hljs-keyword">let</span> that = <span class="hljs-keyword">this</span>;
        <span class="hljs-keyword">let</span> source = fs.readFileSync(modulePath, <span class="hljs-string">'utf8'</span>);
        <span class="hljs-keyword">let</span> { <span class="hljs-attr">module</span>: { rules } } = <span class="hljs-keyword">this</span>.options;
        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; rules.length; i++) {
            <span class="hljs-keyword">let</span> rule = rules[i];
            <span class="hljs-keyword">if</span> (rule.test.test(modulePath)) {
                <span class="hljs-keyword">let</span> loaders = rule.use;
                <span class="hljs-keyword">let</span> loaderIndex = loaders.length - <span class="hljs-number">1</span>;
                <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">iterateLoaders</span>(<span class="hljs-params"></span>) </span>{
                    <span class="hljs-keyword">let</span> loaderName = loaders[loaderIndex--];
                    <span class="hljs-keyword">let</span> loader = <span class="hljs-built_in">require</span>(path.resolve(that.root, <span class="hljs-string">'node_modules'</span>, loaderName));
                    source = loader(source);
                    <span class="hljs-keyword">if</span> (loaderIndex &gt;= <span class="hljs-number">0</span>) {
                        iterateLoaders();
                    }
                }
                iterateLoaders();
                <span class="hljs-keyword">break</span>;
            }
        }
        <span class="hljs-keyword">return</span> source;
    }
</code></pre>
<h3 id="t195.2 less-loader">5.2 less-loader <a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-8-hand.html#t195.2%20less-loader"> # </a></h3>
<pre><code class="lang-js"><span class="hljs-keyword">var</span> less = <span class="hljs-built_in">require</span>(<span class="hljs-string">'less'</span>);
<span class="hljs-built_in">module</span>.exports = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">source</span>) </span>{
    <span class="hljs-keyword">let</span> css;
    less.render(source, (err, output) =&gt; {
        css = output.css;
    });
    <span class="hljs-keyword">return</span> css.replace(<span class="hljs-regexp">/\n/g</span>, <span class="hljs-string">'\\n'</span>, <span class="hljs-string">'g'</span>);
}
</code></pre>
<h3 id="t205.3 style-loader">5.3 style-loader <a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-8-hand.html#t205.3%20style-loader"> # </a></h3>
<pre><code class="lang-js"><span class="hljs-built_in">module</span>.exports = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">source</span>) </span>{
    <span class="hljs-keyword">let</span> str = <span class="hljs-string">`
      let style = document.createElement('style');
      style.innerHTML = <span class="hljs-subst">${<span class="hljs-built_in">JSON</span>.stringify(source)}</span>;
      document.head.appendChild(style);
    `</span>;
    <span class="hljs-keyword">return</span> str;
}
</code></pre>
<h3 id="t215.4 index.js">5.4 index.js <a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-8-hand.html#t215.4%20index.js"> # </a></h3>
<pre><code class="lang-js"><span class="hljs-built_in">require</span>(<span class="hljs-string">'./index.less'</span>);
</code></pre>
<h2 id="t226.  支持插件">6.  支持插件 <a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-8-hand.html#t226.%20%20%E6%94%AF%E6%8C%81%E6%8F%92%E4%BB%B6"> # </a></h2>
<h3 id="t236.1 webpack.config.js">6.1 webpack.config.js <a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-8-hand.html#t236.1%20webpack.config.js"> # </a></h3>
<pre><code class="lang-js"><span class="hljs-keyword">const</span> path = <span class="hljs-built_in">require</span>(<span class="hljs-string">'path'</span>);

<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">EntryOptionWebpackPlugin</span> </span>{
    apply(compiler) {
        compiler.hooks.entryOption.tap(<span class="hljs-string">'Plugin'</span>, (option) =&gt; {
            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'EntryOptionWebpackPlugin'</span>);
        });
    }
}

<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AfterPlugins</span> </span>{
    apply(compiler) {
        compiler.hooks.afterPlugins.tap(<span class="hljs-string">'Plugin'</span>, (option) =&gt; {
            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'AfterPlugins'</span>);
        });
    }
}


<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">RunPlugin</span> </span>{
    apply(compiler) {
        compiler.hooks.run.tap(<span class="hljs-string">'Plugin'</span>, (option) =&gt; {
            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'RunPlugin'</span>);
        });
    }
}


<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CompileWebpackPlugin</span> </span>{
    apply(compiler) {
        compiler.hooks.compile.tap(<span class="hljs-string">'Plugin'</span>, (option) =&gt; {
            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'CompileWebpackPlugin'</span>);
        });
    }
}


<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AfterCompileWebpackPlugin</span> </span>{
    apply(compiler) {
        compiler.hooks.afterCompile.tap(<span class="hljs-string">'Plugin'</span>, (option) =&gt; {
            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'AfterCompileWebpackPlugin'</span>);
        });
    }
}
<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">EmitWebpackPlugin</span> </span>{
    apply(compiler) {
        compiler.hooks.emit.tap(<span class="hljs-string">'Plugin'</span>, () =&gt; {
            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'EmitWebpackPlugin'</span>);
        });
    }
}
<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">DoneWebpackPlugin</span> </span>{
    apply(compiler) {
        compiler.hooks.done.tap(<span class="hljs-string">'Plugin'</span>, (option) =&gt; {
            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'DoneWebpackPlugin'</span>);
        });
    }
}
<span class="hljs-built_in">module</span>.exports = {
    <span class="hljs-attr">mode</span>: <span class="hljs-string">'development'</span>,
    <span class="hljs-attr">entry</span>: <span class="hljs-string">'./src/index.js'</span>,
    <span class="hljs-attr">output</span>: {
        <span class="hljs-attr">path</span>: path.resolve(__dirname, <span class="hljs-string">'dist'</span>),
        <span class="hljs-attr">filename</span>: <span class="hljs-string">'bundle.js'</span>
    },
    <span class="hljs-attr">module</span>: {
        <span class="hljs-attr">rules</span>: [
            {
                <span class="hljs-attr">test</span>: <span class="hljs-regexp">/\.less$/</span>,
                <span class="hljs-attr">use</span>: [<span class="hljs-string">'style-loader'</span>, <span class="hljs-string">'less-loader'</span>]
            }
        ]
    },
    <span class="hljs-attr">plugins</span>: [
        <span class="hljs-keyword">new</span> EntryOptionWebpackPlugin(),
        <span class="hljs-keyword">new</span> AfterPlugins(),
        <span class="hljs-keyword">new</span> RunPlugin(),
        <span class="hljs-keyword">new</span> CompileWebpackPlugin(),
        <span class="hljs-keyword">new</span> AfterCompileWebpackPlugin(),
        <span class="hljs-keyword">new</span> EmitWebpackPlugin(),
        <span class="hljs-keyword">new</span> DoneWebpackPlugin()
    ]
}
</code></pre>
<h3 id="t246.2 Compiler">6.2 Compiler <a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-8-hand.html#t246.2%20Compiler"> # </a></h3>
<pre><code class="lang-js"><span class="hljs-keyword">const</span> path = <span class="hljs-built_in">require</span>(<span class="hljs-string">'path'</span>);
<span class="hljs-keyword">const</span> fs = <span class="hljs-built_in">require</span>(<span class="hljs-string">'fs'</span>);
<span class="hljs-keyword">const</span> babylon = <span class="hljs-built_in">require</span>(<span class="hljs-string">'babylon'</span>);
<span class="hljs-keyword">const</span> t = <span class="hljs-built_in">require</span>(<span class="hljs-string">'babel-types'</span>);
<span class="hljs-keyword">const</span> generate = <span class="hljs-built_in">require</span>(<span class="hljs-string">'babel-generator'</span>).default;
<span class="hljs-keyword">const</span> traverse = <span class="hljs-built_in">require</span>(<span class="hljs-string">'babel-traverse'</span>).default;
<span class="hljs-keyword">const</span> ejs = <span class="hljs-built_in">require</span>(<span class="hljs-string">'ejs'</span>);
<span class="hljs-keyword">const</span> { SyncHook } = <span class="hljs-built_in">require</span>(<span class="hljs-string">'tapable'</span>);

<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Compiler</span> </span>{
    <span class="hljs-keyword">constructor</span>(options) {
        <span class="hljs-keyword">this</span>.options = options;
        <span class="hljs-keyword">this</span>.hooks = {
            <span class="hljs-attr">entryOption</span>: <span class="hljs-keyword">new</span> SyncHook(),
            <span class="hljs-attr">afterPlugins</span>: <span class="hljs-keyword">new</span> SyncHook(),
            <span class="hljs-attr">run</span>: <span class="hljs-keyword">new</span> SyncHook(),
            <span class="hljs-attr">compile</span>: <span class="hljs-keyword">new</span> SyncHook(),
            <span class="hljs-attr">afterCompile</span>: <span class="hljs-keyword">new</span> SyncHook(),
            <span class="hljs-attr">emit</span>: <span class="hljs-keyword">new</span> SyncHook([<span class="hljs-string">"compiler"</span>]),
            <span class="hljs-attr">afterEmit</span>: <span class="hljs-keyword">new</span> SyncHook(),
            <span class="hljs-attr">done</span>: <span class="hljs-keyword">new</span> SyncHook()
        }
        <span class="hljs-keyword">let</span> plugins = options.plugins;
        <span class="hljs-keyword">if</span> (plugins &amp;&amp; plugins.length &gt; <span class="hljs-number">0</span>) {
            plugins.forEach(<span class="hljs-function"><span class="hljs-params">plugin</span> =&gt;</span> plugin.apply(<span class="hljs-keyword">this</span>));
        }
        <span class="hljs-keyword">this</span>.hooks.afterPlugins.call();
    }
    run() {
        <span class="hljs-keyword">this</span>.hooks.run.call(<span class="hljs-keyword">this</span>);
        <span class="hljs-keyword">let</span> that = <span class="hljs-keyword">this</span>;
        <span class="hljs-keyword">this</span>.root = process.cwd();<span class="hljs-comment">//获取当前的工作目录</span>
        <span class="hljs-keyword">let</span> { entry } = <span class="hljs-keyword">this</span>.options;<span class="hljs-comment">//获取入口文件路径</span>
        <span class="hljs-keyword">this</span>.entryId = <span class="hljs-literal">null</span>;<span class="hljs-comment">//记录入口文件的ID</span>
        <span class="hljs-keyword">this</span>.modules = {};<span class="hljs-comment">//记录模块ID和内容的对应关系，所有的ID都是相对于根目录的</span>
        <span class="hljs-keyword">this</span>.hooks.compile.call();
        <span class="hljs-keyword">this</span>.buildModule(path.resolve(<span class="hljs-keyword">this</span>.root, entry), <span class="hljs-literal">true</span>);<span class="hljs-comment">//从入口文件开始编译</span>
        <span class="hljs-keyword">this</span>.hooks.afterCompile.call();
        <span class="hljs-keyword">this</span>.emitFile();
    }
    emitFile() {
        <span class="hljs-keyword">this</span>.hooks.emit.call(<span class="hljs-keyword">this</span>, <span class="hljs-keyword">this</span>);
        <span class="hljs-keyword">let</span> mainTemplate = fs.readFileSync(path.join(__dirname, <span class="hljs-string">'main.ejs'</span>), <span class="hljs-string">'utf8'</span>);
        <span class="hljs-keyword">let</span> { modules, entryId } = <span class="hljs-keyword">this</span>;
        <span class="hljs-keyword">let</span> main = ejs.compile(mainTemplate)({ entryId, modules });
        <span class="hljs-keyword">let</span> { <span class="hljs-attr">output</span>: { <span class="hljs-attr">path</span>: dist, filename } } = <span class="hljs-keyword">this</span>.options;
        fs.writeFileSync(path.join(dist, filename), main);
        <span class="hljs-keyword">this</span>.hooks.afterEmit.call();
        <span class="hljs-keyword">this</span>.hooks.done.call();
    }
}
<span class="hljs-built_in">module</span>.exports = Compiler;
</code></pre>
<h2 id="t257.支持懒加载">7.支持懒加载 <a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-8-hand.html#t257.%E6%94%AF%E6%8C%81%E6%87%92%E5%8A%A0%E8%BD%BD"> # </a></h2>
<h3 id="t267.1 Compiler">7.1 Compiler <a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-8-hand.html#t267.1%20Compiler"> # </a></h3>
<pre><code class="lang-js">emitFile() {
        <span class="hljs-keyword">this</span>.hooks.emit.call(<span class="hljs-keyword">this</span>, <span class="hljs-keyword">this</span>);
        <span class="hljs-keyword">let</span> mainTemplate = fs.readFileSync(path.join(__dirname, <span class="hljs-string">'main.ejs'</span>), <span class="hljs-string">'utf8'</span>);
        <span class="hljs-keyword">let</span> { modules, entryId } = <span class="hljs-keyword">this</span>;
        <span class="hljs-keyword">let</span> main = ejs.compile(mainTemplate)({ entryId, modules });
        <span class="hljs-keyword">let</span> { <span class="hljs-attr">output</span>: { <span class="hljs-attr">path</span>: dist, filename } } = <span class="hljs-keyword">this</span>.options;
        fs.writeFileSync(path.join(dist, filename), main);
        <span class="hljs-built_in">Object</span>.entries(<span class="hljs-keyword">this</span>.chunks).forEach(<span class="hljs-function">(<span class="hljs-params">[chunkIndex, chunk]</span>) =&gt;</span> {
            <span class="hljs-keyword">let</span> chunkTemplate = fs.readFileSync(path.join(__dirname, <span class="hljs-string">'chunk.ejs'</span>), <span class="hljs-string">'utf8'</span>);
            <span class="hljs-keyword">let</span> chunkData = ejs.compile(chunkTemplate)({ chunkIndex, chunk });
            <span class="hljs-keyword">let</span> { <span class="hljs-attr">output</span>: { <span class="hljs-attr">path</span>: dist, filename } } = <span class="hljs-keyword">this</span>.options;
            fs.writeFileSync(path.join(dist, <span class="hljs-string">`<span class="hljs-subst">${chunkIndex}</span>.bundle.js`</span>), chunkData);
        });
        <span class="hljs-keyword">this</span>.hooks.afterEmit.call();
        <span class="hljs-keyword">this</span>.hooks.done.call();
    }

    <span class="hljs-comment">//解析模块和依赖的模块，路径是一个绝对路径</span>
    buildModule(modulePath, isEntry, chunkIndex) {
        <span class="hljs-keyword">let</span> source = <span class="hljs-keyword">this</span>.getSource(modulePath);<span class="hljs-comment">//获取源代码</span>
        <span class="hljs-keyword">let</span> moduleId = <span class="hljs-string">'./'</span> + path.relative(<span class="hljs-keyword">this</span>.root, modulePath);<span class="hljs-comment">//生成相对于工作根目录的模块ID</span>
        <span class="hljs-keyword">if</span> (isEntry) {<span class="hljs-comment">//如果是入口的话把ID赋给入口</span>
            <span class="hljs-keyword">this</span>.entryId = moduleId;
        }
        <span class="hljs-comment">//获取AST的编译结果 依赖的模块 转换后的源代码</span>
        <span class="hljs-keyword">let</span> { dependencies, sourcecode } = <span class="hljs-keyword">this</span>.parse(source, path.dirname(moduleId));
        <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> chunkIndex != <span class="hljs-string">'undefined'</span>) {
            <span class="hljs-keyword">let</span> currentChunk = <span class="hljs-keyword">typeof</span> <span class="hljs-keyword">this</span>.chunks[chunkIndex] == <span class="hljs-string">'undefined'</span> ? {} : <span class="hljs-keyword">this</span>.chunks[chunkIndex];
            currentChunk[moduleId] = sourcecode;
            <span class="hljs-keyword">this</span>.chunks[chunkIndex] = currentChunk;
        } <span class="hljs-keyword">else</span> {
            <span class="hljs-keyword">this</span>.modules[moduleId] = sourcecode;
        }

        <span class="hljs-comment">//递归解析依赖的模块</span>
        dependencies.forEach(<span class="hljs-function"><span class="hljs-params">dependency</span> =&gt;</span> <span class="hljs-keyword">this</span>.buildModule(path.join(<span class="hljs-keyword">this</span>.root, dependency, chunkIndex)));
    }
    <span class="hljs-comment">//解析源代码  传入父路径</span>
    parse(source, parentPath) {
        <span class="hljs-keyword">let</span> that = <span class="hljs-keyword">this</span>;
        <span class="hljs-keyword">const</span> ast = babylon.parse(source, {
            <span class="hljs-attr">plugins</span>: [<span class="hljs-string">'dynamicImport'</span>]
        });
        <span class="hljs-keyword">let</span> dependencies = [];
        traverse(ast, {
            CallExpression(p) {
                <span class="hljs-keyword">if</span> (p.node.callee.name == <span class="hljs-string">'require'</span>) {
                    <span class="hljs-keyword">let</span> node = p.node;
                    node.callee.name = <span class="hljs-string">'__webpack_require__'</span>;
                    <span class="hljs-keyword">let</span> modName = node.arguments[<span class="hljs-number">0</span>].value;
                    modName += (modName.lastIndexOf(<span class="hljs-string">'.'</span>) &gt; <span class="hljs-number">0</span> ? <span class="hljs-string">''</span> : <span class="hljs-string">'.js'</span>);
                    <span class="hljs-keyword">let</span> moduleId = <span class="hljs-string">'./'</span> + path.join(parentPath, modName);
                    dependencies.push(moduleId);
                    node.arguments = [t.stringLiteral(moduleId)];
                } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (t.isImport(p.node.callee)) {
                    <span class="hljs-keyword">let</span> node = p.node;
                    <span class="hljs-keyword">let</span> modName = node.arguments[<span class="hljs-number">0</span>].value;<span class="hljs-comment">//取得模块名</span>
                    modName += (modName.lastIndexOf(<span class="hljs-string">'.'</span>) &gt; <span class="hljs-number">0</span> ? <span class="hljs-string">''</span> : <span class="hljs-string">'.js'</span>);
                    <span class="hljs-keyword">let</span> moduleId = <span class="hljs-string">'./'</span> + path.join(parentPath, modName);
                    p.replaceWithSourceString(<span class="hljs-string">`__webpack_require__.e(<span class="hljs-subst">${that.chunkIndex}</span>).then(__webpack_require__.t.bind(null, "<span class="hljs-subst">${moduleId}</span>", 7))`</span>);
                    that.buildModule(path.join(that.root, moduleId), <span class="hljs-literal">false</span>, that.chunkIndex++);
                }
            }
        });
        <span class="hljs-keyword">let</span> sourcecode = generate(ast).code;
        <span class="hljs-keyword">return</span> { sourcecode, dependencies };
    }
</code></pre>
<h3 id="t277.2 chunk.ejs">7.2 chunk.ejs <a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-8-hand.html#t277.2%20chunk.ejs"> # </a></h3>
<pre><code class="lang-js">(<span class="hljs-built_in">window</span>[<span class="hljs-string">"webpackJsonp"</span>] = <span class="hljs-built_in">window</span>[<span class="hljs-string">"webpackJsonp"</span>] || []).push([[<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">%=chunkIndex%</span>&gt;</span>],{
    <span class="hljs-tag">&lt;<span class="hljs-name">%</span>
        <span class="hljs-attr">for</span>(<span class="hljs-attr">let</span> <span class="hljs-attr">id</span> <span class="hljs-attr">in</span> <span class="hljs-attr">chunk</span>){
            <span class="hljs-attr">let</span> <span class="hljs-attr">source</span> = <span class="hljs-string">chunk[id];%</span>&gt;</span>
        /***/ "<span class="hljs-tag">&lt;<span class="hljs-name">%-id%</span>&gt;</span>":
        /***/ function(module, exports,__webpack_require__) {

        eval(`<span class="hljs-tag">&lt;<span class="hljs-name">%-source%</span>&gt;</span>`);

        /***/ },
        <span class="hljs-tag">&lt;<span class="hljs-name">%}%</span>&gt;</span>
    }]);
</span></code></pre>
<h3 id="t287.3 index.js">7.3 index.js <a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-8-hand.html#t287.3%20index.js"> # </a></h3>
<pre><code class="lang-js"><span class="hljs-keyword">let</span> loadButton = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">'#loadButton'</span>);
loadButton.addEventListener(<span class="hljs-string">'click'</span>, () =&gt; {
    <span class="hljs-keyword">import</span>(<span class="hljs-string">'./video'</span>).then(<span class="hljs-function"><span class="hljs-params">video</span> =&gt;</span> {
        <span class="hljs-built_in">console</span>.log(video.default);
    });
});
</code></pre>
<h3 id="t297.4 video.js">7.4 video.js <a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-8-hand.html#t297.4%20video.js"> # </a></h3>
<pre><code class="lang-js"><span class="hljs-built_in">module</span>.exports = <span class="hljs-string">'video'</span>;
</code></pre>
<h2 id="t30参考资料">参考资料 <a href="http://www.zhufengpeixun.cn/architecture/html/26.webpack-8-hand.html#t30%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99"> # </a></h2>
<ul>
<li><a href="https://gitee.com/zhufengpeixun/webpackhand">webpackhand</a></li>
<li><a href="https://astexplorer.net/">astexplorer</a></li>
<li><a href="https://github.com/jamiebuilds/babel-handbook/blob/master/translations/en/plugin-handbook.md">plugin-handbook</a></li>
<li><a href="https://github.com/jamiebuilds/babel-handbook/blob/master/translations/en/plugin-handbook.md#toc-babel-types">babel-types</a></li>
<li><a href="https://www.npmjs.com/package/babel-types">babel-types</a></li>
</ul>

        <div class="copyright">Powered by <a href="https://github.com/jaywcjlove/idoc" target="_blank">idoc</a>. Dependence <a href="https://nodejs.org/">Node.js</a> run.</div>
    </div>
    
</div>

<script src="./26.webpack-8-hand_files/jquery.js"></script>
<script>
$('.warpper .page-toc ul ul li a').on('click',function(){
  $('.warpper .page-toc ul ul li a').removeClass('my-active')
  $(this).addClass('my-active')
})

$('.logo').on('mouseenter',function(){
  $('.nav').height('400px');
})
$('.nav').on('mouseleave',function(){
  $('.nav').height('80px');
})
$('.logo').on('click',function(){
  $('.nav').css('display','none');
 $('.warpper').css('padding','0px');
})
// if (!$('.understand-me').length) {
  //   var bar = $(window).height() - $('.navbar ').height() - $('.page-toc').position().top;
  //   var count = bar / 26 / 2;
  //   var barHeight = $('.page-toc').outerHeight();
  //   $('.page-toc li').eq(0).children('a').addClass('red');
  //   var arr = [];
  //   $("h1,h2,h3,h4,h5,h6").each(function () {
  //     arr.push($(this).position().top);
  //   });
  //   var timer
  //   function dark() {
  //     clearTimeout(timer)
  //      timer = setTimeout(function () {
  //      var top = Math.abs($('.page-toc > ul').position().top);
  //      var cur = $('.content').scrollTop();
  //      for (var i = arr.length; i >= 0; i--) {
  //        if (arr[i] <= cur) {
  //          break;
  //        }
  //      }
  //      if (i === -1) {
  //        i = 0;
  //      }
  //      $('.page-toc li a').removeClass('red');
  //      $('.page-toc li').eq(i).children('a').addClass('red');
  //      let height = $('.page-toc li').eq(i).position().top-$('.page-toc').height(); // 如果当前的offset出去了 回到中间可好？
  //      $('.page-toc').scrollTop(height+$('.page-toc').height()/2);
  //    },200)
  //   }

  //   $('.content').on('scroll', dark);
  // }
</script>
<style>

    /* ::-webkit-scrollbar{width:14px;}
    ::-webkit-scrollbar-track{background-color:transparent;}
    ::-webkit-scrollbar-thumb{background-color:transparent;}
    ::-webkit-scrollbar-thumb:hover {background-color:transparent}
    ::-webkit-scrollbar-thumb:active {background-color:transparent} */

    .page-toc > ul .red {
        background: #f3f3f3;
        z-index: 1;
        border-left: 3px solid #009a61;
        -webkit-transition: all .2s ease;
        transition: all .2s ease;
        color: #000
    }





</style>


</body></html>