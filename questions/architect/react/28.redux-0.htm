<!DOCTYPE html>
<!-- saved from url=(0061)http://www.zhufengpeixun.cn/architecture/html/28.redux-0.html -->
<html lang="en">

<head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>珠峰架构师成长计划</title>
    <link rel="stylesheet" type="text/css" href="./28.redux-0_files/main.css">
    <style type="text/css" abt="234"></style>
    <script>
        //console.log('a')
    </script>
    <script>
        //remove 17173 video ad
        doAdblock();

        function doAdblock() {
            (function () {
                function A() {}
                A.prototype = {
                    rules: {
                        '17173_in': {
                            'find': /http:\/\/f\.v\.17173cdn\.com\/(\d+\/)?flash\/PreloaderFile(Customer)?\.swf/,
                            'replace': "http://swf.adtchrome.com/17173_in_20150522.swf"
                        },
                        '17173_out': {
                            'find': /http:\/\/f\.v\.17173cdn\.com\/(\d+\/)?flash\/PreloaderFileFirstpage\.swf/,
                            'replace': "http://swf.adtchrome.com/17173_out_20150522.swf"
                        },
                        '17173_live': {
                            'find': /http:\/\/f\.v\.17173cdn\.com\/(\d+\/)?flash\/Player_stream(_firstpage)?\.swf/,
                            'replace': "http://swf.adtchrome.com/17173_stream_20150522.swf"
                        },
                        '17173_live_out': {
                            'find': /http:\/\/f\.v\.17173cdn\.com\/(\d+\/)?flash\/Player_stream_(custom)?Out\.swf/,
                            'replace': "http://swf.adtchrome.com/17173.out.Live.swf"
                        }
                    },
                    _done: null,
                    get done() {
                        if (!this._done) {
                            this._done = new Array();
                        }
                        return this._done;
                    },
                    addAnimations: function () {
                        var style = document.createElement('style');
                        style.type = 'text/css';
                        style.innerHTML = 'object,embed{\
                -webkit-animation-duration:.001s;-webkit-animation-name:playerInserted;\
                -ms-animation-duration:.001s;-ms-animation-name:playerInserted;\
                -o-animation-duration:.001s;-o-animation-name:playerInserted;\
                animation-duration:.001s;animation-name:playerInserted;}\
                @-webkit-keyframes playerInserted{from{opacity:0.99;}to{opacity:1;}}\
                @-ms-keyframes playerInserted{from{opacity:0.99;}to{opacity:1;}}\
                @-o-keyframes playerInserted{from{opacity:0.99;}to{opacity:1;}}\
                @keyframes playerInserted{from{opacity:0.99;}to{opacity:1;}}';
                        document.getElementsByTagName('head')[0].appendChild(style);
                    },
                    animationsHandler: function (e) {
                        if (e.animationName === 'playerInserted') {
                            this.replace(e.target);
                        }
                    },
                    replace: function (elem) {
                        if (this.done.indexOf(elem) != -1) return;
                        this.done.push(elem);
                        var player = elem.data || elem.src;
                        if (!player) return;
                        var i, find, replace = false;
                        for (i in this.rules) {
                            find = this.rules[i]['find'];
                            if (find.test(player)) {
                                replace = this.rules[i]['replace'];
                                if ('function' === typeof this.rules[i]['preHandle']) {
                                    this.rules[i]['preHandle'].bind(this, elem, find, replace, player)();
                                } else {
                                    this.reallyReplace.bind(this, elem, find, replace)();
                                }
                                break;
                            }
                        }
                    },
                    reallyReplace: function (elem, find, replace) {
                        elem.data && (elem.data = elem.data.replace(find, replace)) || elem.src && ((elem
                            .src = elem.src.replace(find, replace)) && (elem.style.display =
                            'block'));
                        var b = elem.querySelector("param[name='movie']");
                        this.reloadPlugin(elem);
                    },
                    reloadPlugin: function (elem) {
                        var nextSibling = elem.nextSibling;
                        var parentNode = elem.parentNode;
                        parentNode.removeChild(elem);
                        var newElem = elem.cloneNode(true);
                        this.done.push(newElem);
                        if (nextSibling) {
                            parentNode.insertBefore(newElem, nextSibling);
                        } else {
                            parentNode.appendChild(newElem);
                        }
                    },
                    init: function () {
                        var handler = this.animationsHandler.bind(this);
                        document.body.addEventListener('webkitAnimationStart', handler, false);
                        document.body.addEventListener('msAnimationStart', handler, false);
                        document.body.addEventListener('oAnimationStart', handler, false);
                        document.body.addEventListener('animationstart', handler, false);
                        this.addAnimations();
                    }
                };
                new A().init();
            })();
        }
        //remove baidu search ad
        if (document.URL.indexOf('www.baidu.com') >= 0) {
            if (document && document.getElementsByTagName && document.getElementById && document.body) {
                var aa = function () {
                    var all = document.body.querySelectorAll("#content_left div,#content_left table");
                    for (var i = 0; i < all.length; i++) {
                        if (/display:\s?(table|block)\s!important/.test(all[i].getAttribute("style"))) {
                            all[i].style.display = "none";
                            all[i].style.visibility = 'hidden';
                        }
                    }
                    all = document.body.querySelectorAll('.result.c-container[id="1"]');
                    //if(all.length == 1) return;
                    for (var i = 0; i < all.length; i++) {
                        if (all[i].innerHTML && all[i].innerHTML.indexOf('广告') > -1) {
                            all[i].style.display = "none";
                            all[i].style.visibility = 'hidden';
                        }
                    }
                }
                aa();
                document.getElementById('wrapper_wrapper').addEventListener('DOMSubtreeModified', aa)
            };
        }
        //remove sohu video ad
        if (document.URL.indexOf("tv.sohu.com") >= 0) {
            if (document.cookie.indexOf("fee_status=true") == -1) {
                document.cookie = 'fee_status=true'
            };
        }
        //remove 56.com video ad
        if (document.URL.indexOf("56.com") >= 0) {
            if (document.cookie.indexOf("fee_status=true") == -1) {
                document.cookie = 'fee_status=true'
            };
        }
        //fore iqiyi enable html5 player function
        if (document.URL.indexOf("iqiyi.com") >= 0) {
            if (document.cookie.indexOf("player_forcedType=h5_VOD") == -1) {
                document.cookie = 'player_forcedType=h5_VOD'
                if (localStorage.reloadTime && Date.now() - parseInt(localStorage.reloadTime) < 60000) {
                    console.log('no reload')
                } else {
                    location.reload()
                    localStorage.reloadTime = Date.now();
                }
            }
        }
    </script>
    <style type="text/css">
        object,
        embed {
            -webkit-animation-duration: .001s;
            -webkit-animation-name: playerInserted;
            -ms-animation-duration: .001s;
            -ms-animation-name: playerInserted;
            -o-animation-duration: .001s;
            -o-animation-name: playerInserted;
            animation-duration: .001s;
            animation-name: playerInserted;
        }

        @-webkit-keyframes playerInserted {
            from {
                opacity: 0.99;
            }

            to {
                opacity: 1;
            }
        }

        @-ms-keyframes playerInserted {
            from {
                opacity: 0.99;
            }

            to {
                opacity: 1;
            }
        }

        @-o-keyframes playerInserted {
            from {
                opacity: 0.99;
            }

            to {
                opacity: 1;
            }
        }

        @keyframes playerInserted {
            from {
                opacity: 0.99;
            }

            to {
                opacity: 1;
            }
        }
    </style>
</head>

<body>
    


    <div class="warpper">

        <div class="page-toc">
            <ul>
                <li><a
                        href="http://www.zhufengpeixun.cn/architecture/html/28.redux-0.html#t01.%20%E6%B8%B2%E6%9F%93%E7%8A%B6%E6%80%81">1.
                        渲染状态</a></li>
                <li><a
                        href="http://www.zhufengpeixun.cn/architecture/html/28.redux-0.html#t12.%20%E6%8F%90%E9%AB%98%E6%95%B0%E6%8D%AE%E4%BF%AE%E6%94%B9%E7%9A%84%E9%97%A8%E6%A7%9B">2.
                        提高数据修改的门槛</a></li>
                <li><a
                        href="http://www.zhufengpeixun.cn/architecture/html/28.redux-0.html#t23.%E5%B0%81%E8%A3%85%E4%BB%93%E5%BA%93">3.封装仓库</a>
                </li>
                <li><a
                        href="http://www.zhufengpeixun.cn/architecture/html/28.redux-0.html#t34.%20%E7%9B%91%E6%8E%A7%E6%95%B0%E6%8D%AE%E5%8F%98%E5%8C%96">4.
                        监控数据变化</a></li>
                <li><a
                        href="http://www.zhufengpeixun.cn/architecture/html/28.redux-0.html#t45.%E7%BA%AF%E5%87%BD%E6%95%B0">5.纯函数</a>
                </li>
            </ul>
        </div>

        <div class="content markdown-body">
            <h2 id="t01. 渲染状态">1. 渲染状态 <a
                    href="http://www.zhufengpeixun.cn/architecture/html/28.redux-0.html#t01.%20%E6%B8%B2%E6%9F%93%E7%8A%B6%E6%80%81">
                    # </a></h2>
            <pre><code class="lang-js"><span class="hljs-keyword">let</span> appState={
    <span class="hljs-attr">title</span>: {<span class="hljs-attr">color</span>: <span class="hljs-string">'red'</span>,<span class="hljs-attr">text</span>: <span class="hljs-string">'标题'</span>},
    <span class="hljs-attr">content</span>:{<span class="hljs-attr">color</span>:<span class="hljs-string">'green'</span>,<span class="hljs-attr">text</span>:<span class="hljs-string">'内容'</span>}
}
<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">renderTitle</span>(<span class="hljs-params">title</span>) </span>{
    <span class="hljs-keyword">let</span> titleEle=<span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">'#title'</span>);
    titleEle.innerHTML=title.text;
    titleEle.style.color=title.color;
}
<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">renderContent</span>(<span class="hljs-params">content</span>) </span>{
    <span class="hljs-keyword">let</span> contentEle=<span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">'#content'</span>);
    contentEle.innerHTML=content.text;
    contentEle.style.color=content.color;
}
<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">renderApp</span>(<span class="hljs-params">appState</span>) </span>{
    renderTitle(appState.title);
    renderContent(appState.content);
}
renderApp(appState);
</code></pre>
            <h2 id="t12. 提高数据修改的门槛">2. 提高数据修改的门槛 <a
                    href="http://www.zhufengpeixun.cn/architecture/html/28.redux-0.html#t12.%20%E6%8F%90%E9%AB%98%E6%95%B0%E6%8D%AE%E4%BF%AE%E6%94%B9%E7%9A%84%E9%97%A8%E6%A7%9B">
                    # </a></h2>
            <ul>
                <li>一旦数据可以任意修改，所有对共享状态的操作都是不可预料的</li>
                <li>模块之间需要共享数据和数据可能被任意修改导致不可预料的结果之间有矛盾</li>
                <li>所有对数据的操作必须通过 dispatch 函数</li>
            </ul>
            <pre><code class="lang-js"><span class="hljs-keyword">let</span> appState={
    <span class="hljs-attr">title</span>: {<span class="hljs-attr">color</span>: <span class="hljs-string">'red'</span>,<span class="hljs-attr">text</span>: <span class="hljs-string">'标题'</span>},
    <span class="hljs-attr">content</span>:{<span class="hljs-attr">color</span>:<span class="hljs-string">'green'</span>,<span class="hljs-attr">text</span>:<span class="hljs-string">'内容'</span>}
}
<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">renderTitle</span>(<span class="hljs-params">title</span>) </span>{
    <span class="hljs-keyword">let</span> titleEle=<span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">'#title'</span>);
    titleEle.innerHTML=title.text;
    titleEle.style.color=title.color;
}
<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">renderContent</span>(<span class="hljs-params">content</span>) </span>{
    <span class="hljs-keyword">let</span> contentEle=<span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">'#content'</span>);
    contentEle.innerHTML=content.text;
    contentEle.style.color=content.color;
}
<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">renderApp</span>(<span class="hljs-params">appState</span>) </span>{
    renderTitle(appState.title);
    renderContent(appState.content);
}
<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dispatch</span>(<span class="hljs-params">action</span>) </span>{
    <span class="hljs-keyword">switch</span> (action.type) {
        <span class="hljs-keyword">case</span> <span class="hljs-string">'UPDATE_TITLE_COLOR'</span>:
            appState.title.color=action.color;    
            <span class="hljs-keyword">break</span>;    
        <span class="hljs-keyword">case</span> <span class="hljs-string">'UPDATE_CONTENT_CONTENT'</span>:
            appState.content.text=action.text;
            <span class="hljs-keyword">break</span>;
        <span class="hljs-keyword">default</span>:
            <span class="hljs-keyword">break</span>;    
    }
}
dispatch({<span class="hljs-attr">type</span>:<span class="hljs-string">'UPDATE_TITLE_COLOR'</span>,<span class="hljs-attr">color</span>:<span class="hljs-string">'purple'</span>});
dispatch({<span class="hljs-attr">type</span>:<span class="hljs-string">'UPDATE_CONTENT_CONTENT'</span>,<span class="hljs-attr">text</span>:<span class="hljs-string">'新标题'</span>});

renderApp(appState);
</code></pre>
            <h2 id="t23.封装仓库">3.封装仓库 <a
                    href="http://www.zhufengpeixun.cn/architecture/html/28.redux-0.html#t23.%E5%B0%81%E8%A3%85%E4%BB%93%E5%BA%93">
                    # </a></h2>
            <pre><code class="lang-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">renderTitle</span>(<span class="hljs-params">title</span>) </span>{
    <span class="hljs-keyword">let</span> titleEle=<span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">'#title'</span>);
    titleEle.innerHTML=title.text;
    titleEle.style.color=title.color;
}
<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">renderContent</span>(<span class="hljs-params">content</span>) </span>{
    <span class="hljs-keyword">let</span> contentEle=<span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">'#content'</span>);
    contentEle.innerHTML=content.text;
    contentEle.style.color=content.color;
}
<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">renderApp</span>(<span class="hljs-params">appState</span>) </span>{
    renderTitle(appState.title);
    renderContent(appState.content);
}


<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">createStore</span>(<span class="hljs-params">reducer</span>) </span>{
    <span class="hljs-keyword">let</span> state;
    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getState</span>(<span class="hljs-params"></span>) </span>{
        <span class="hljs-keyword">return</span> state;
    }

    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dispatch</span>(<span class="hljs-params">action</span>) </span>{
        state=reducer(state,action);
    }
    dispatch({});
    <span class="hljs-keyword">return</span> {
        getState,
        dispatch
    }

}
<span class="hljs-keyword">let</span> initState={
    <span class="hljs-attr">title</span>: {<span class="hljs-attr">color</span>: <span class="hljs-string">'red'</span>,<span class="hljs-attr">text</span>: <span class="hljs-string">'标题'</span>},
    <span class="hljs-attr">content</span>:{<span class="hljs-attr">color</span>:<span class="hljs-string">'green'</span>,<span class="hljs-attr">text</span>:<span class="hljs-string">'内容'</span>}
}
<span class="hljs-keyword">let</span> reducer=<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">state=initState,action</span>) </span>{
    <span class="hljs-keyword">switch</span> (action.type) {
        <span class="hljs-keyword">case</span> <span class="hljs-string">'UPDATE_TITLE_COLOR'</span>:
            <span class="hljs-keyword">return</span> {...state,<span class="hljs-attr">title</span>: {...state.title,<span class="hljs-attr">color</span>:action.color}};
        <span class="hljs-keyword">case</span> <span class="hljs-string">'UPDATE_CONTENT_CONTENT'</span>:
        <span class="hljs-keyword">return</span> {...state,<span class="hljs-attr">content</span>: {...state.content,<span class="hljs-attr">text</span>:action.text}};    
            <span class="hljs-keyword">break</span>;
        <span class="hljs-keyword">default</span>:
            <span class="hljs-keyword">return</span> state;    
    }
}
<span class="hljs-keyword">let</span> store=createStore(reducer);
renderApp(store.getState());
setTimeout(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>{
    store.dispatch({<span class="hljs-attr">type</span>:<span class="hljs-string">'UPDATE_TITLE_COLOR'</span>,<span class="hljs-attr">color</span>:<span class="hljs-string">'purple'</span>});
    store.dispatch({<span class="hljs-attr">type</span>:<span class="hljs-string">'UPDATE_CONTENT_CONTENT'</span>,<span class="hljs-attr">text</span>:<span class="hljs-string">'新标题'</span>});
    renderApp(store.getState());
},<span class="hljs-number">2000</span>);
</code></pre>
            <h2 id="t34. 监控数据变化">4. 监控数据变化 <a
                    href="http://www.zhufengpeixun.cn/architecture/html/28.redux-0.html#t34.%20%E7%9B%91%E6%8E%A7%E6%95%B0%E6%8D%AE%E5%8F%98%E5%8C%96">
                    # </a></h2>
            <pre><code class="lang-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">renderTitle</span>(<span class="hljs-params">title</span>) </span>{
    <span class="hljs-keyword">let</span> titleEle=<span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">'#title'</span>);
    titleEle.innerHTML=title.text;
    titleEle.style.color=title.color;
}
<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">renderContent</span>(<span class="hljs-params">content</span>) </span>{
    <span class="hljs-keyword">let</span> contentEle=<span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">'#content'</span>);
    contentEle.innerHTML=content.text;
    contentEle.style.color=content.color;
}
<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">render</span>(<span class="hljs-params"></span>) </span>{
    renderTitle(store.getState().title);
    renderContent(store.getState().content);
}


<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">createStore</span>(<span class="hljs-params">reducer</span>) </span>{
    <span class="hljs-keyword">let</span> state;
    <span class="hljs-keyword">let</span> listeners=[];
    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getState</span>(<span class="hljs-params"></span>) </span>{
        <span class="hljs-keyword">return</span> state;
    }

    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dispatch</span>(<span class="hljs-params">action</span>) </span>{
        state=reducer(state,action);
        listeners.forEach(<span class="hljs-function"><span class="hljs-params">l</span>=&gt;</span>l());
    }

    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">subscribe</span>(<span class="hljs-params">listener</span>) </span>{
        listeners.push(listener);
        <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> {
            listeners = listeners.filter(<span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> item!=listener);
            <span class="hljs-built_in">console</span>.log(listeners);
        }
    }
    dispatch({});
    <span class="hljs-keyword">return</span> {
        getState,
        dispatch,
        subscribe
    }

}
<span class="hljs-keyword">let</span> initState={
    <span class="hljs-attr">title</span>: {<span class="hljs-attr">color</span>: <span class="hljs-string">'red'</span>,<span class="hljs-attr">text</span>: <span class="hljs-string">'标题'</span>},
    <span class="hljs-attr">content</span>:{<span class="hljs-attr">color</span>:<span class="hljs-string">'green'</span>,<span class="hljs-attr">text</span>:<span class="hljs-string">'内容'</span>}
}
<span class="hljs-keyword">let</span> reducer=<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">state=initState,action</span>) </span>{
    <span class="hljs-keyword">switch</span> (action.type) {
        <span class="hljs-keyword">case</span> <span class="hljs-string">'UPDATE_TITLE_COLOR'</span>:
            <span class="hljs-keyword">return</span> {...state,<span class="hljs-attr">title</span>: {...state.title,<span class="hljs-attr">color</span>:action.color}};
        <span class="hljs-keyword">case</span> <span class="hljs-string">'UPDATE_CONTENT_CONTENT'</span>:
        <span class="hljs-keyword">return</span> {...state,<span class="hljs-attr">content</span>: {...state.content,<span class="hljs-attr">text</span>:action.text}};    
            <span class="hljs-keyword">break</span>;
        <span class="hljs-keyword">default</span>:
            <span class="hljs-keyword">return</span> state;    
    }
}
<span class="hljs-keyword">let</span> store=createStore(reducer);
render();
<span class="hljs-keyword">let</span> unsubscribe = store.subscribe(render);
setTimeout(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>{
    store.dispatch({<span class="hljs-attr">type</span>:<span class="hljs-string">'UPDATE_TITLE_COLOR'</span>,<span class="hljs-attr">color</span>:<span class="hljs-string">'purple'</span>});
    unsubscribe();
    store.dispatch({<span class="hljs-attr">type</span>:<span class="hljs-string">'UPDATE_CONTENT_CONTENT'</span>,<span class="hljs-attr">text</span>:<span class="hljs-string">'新标题'</span>});
},<span class="hljs-number">2000</span>);
</code></pre>
            <h2 id="t45.纯函数">5.纯函数 <a
                    href="http://www.zhufengpeixun.cn/architecture/html/28.redux-0.html#t45.%E7%BA%AF%E5%87%BD%E6%95%B0">
                    # </a></h2>
            <p>纯函数很严格，也就是说你几乎除了计算数据以外什么都不能干，计算的时候还不能依赖除了函数参数以外的数据。</p>
            <ul>
                <li>函数的返回结果只依赖于它的参数</li>
                <li>函数执行过程没有副作用,一个函数执行过程对产生了外部可观察的变化那么就说这个函数是有副作用的<ul>
                        <li>调用 DOM API 修改页面</li>
                        <li>发送了 Ajax 请求</li>
                    </ul>
                </li>
            </ul>

            <div class="copyright">Powered by <a href="https://github.com/jaywcjlove/idoc" target="_blank">idoc</a>.
                Dependence <a href="https://nodejs.org/">Node.js</a> run.</div>
        </div>

    </div>

    <script src="./28.redux-0_files/jquery.js"></script>
    <script>
        $('.warpper .page-toc ul ul li a').on('click', function () {
            $('.warpper .page-toc ul ul li a').removeClass('my-active')
            $(this).addClass('my-active')
        })

        $('.logo').on('mouseenter', function () {
            $('.nav').height('400px');
        })
        $('.nav').on('mouseleave', function () {
            $('.nav').height('80px');
        })
        $('.logo').on('click', function () {
            $('.nav').css('display', 'none');
            $('.warpper').css('padding', '0px');
        })
        // if (!$('.understand-me').length) {
        //   var bar = $(window).height() - $('.navbar ').height() - $('.page-toc').position().top;
        //   var count = bar / 26 / 2;
        //   var barHeight = $('.page-toc').outerHeight();
        //   $('.page-toc li').eq(0).children('a').addClass('red');
        //   var arr = [];
        //   $("h1,h2,h3,h4,h5,h6").each(function () {
        //     arr.push($(this).position().top);
        //   });
        //   var timer
        //   function dark() {
        //     clearTimeout(timer)
        //      timer = setTimeout(function () {
        //      var top = Math.abs($('.page-toc > ul').position().top);
        //      var cur = $('.content').scrollTop();
        //      for (var i = arr.length; i >= 0; i--) {
        //        if (arr[i] <= cur) {
        //          break;
        //        }
        //      }
        //      if (i === -1) {
        //        i = 0;
        //      }
        //      $('.page-toc li a').removeClass('red');
        //      $('.page-toc li').eq(i).children('a').addClass('red');
        //      let height = $('.page-toc li').eq(i).position().top-$('.page-toc').height(); // 如果当前的offset出去了 回到中间可好？
        //      $('.page-toc').scrollTop(height+$('.page-toc').height()/2);
        //    },200)
        //   }

        //   $('.content').on('scroll', dark);
        // }
    </script>
    <style>
        /* ::-webkit-scrollbar{width:14px;}
    ::-webkit-scrollbar-track{background-color:transparent;}
    ::-webkit-scrollbar-thumb{background-color:transparent;}
    ::-webkit-scrollbar-thumb:hover {background-color:transparent}
    ::-webkit-scrollbar-thumb:active {background-color:transparent} */

        .page-toc>ul .red {
            background: #f3f3f3;
            z-index: 1;
            border-left: 3px solid #009a61;
            -webkit-transition: all .2s ease;
            transition: all .2s ease;
            color: #000
        }
    </style>


</body>

</html>