<!DOCTYPE html>
<!-- saved from url=(0068)http://www.zhufengpeixun.cn/architecture/html/28.redux-jwt-back.html -->
<html lang="en">

<head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>珠峰架构师成长计划</title>
    <link rel="stylesheet" type="text/css" href="./28.redux-jwt-back_files/main.css">
    <style type="text/css" abt="234"></style>
    <script>
        //console.log('a')
    </script>
    <script>
        //remove 17173 video ad
        doAdblock();

        function doAdblock() {
            (function () {
                function A() {}
                A.prototype = {
                    rules: {
                        '17173_in': {
                            'find': /http:\/\/f\.v\.17173cdn\.com\/(\d+\/)?flash\/PreloaderFile(Customer)?\.swf/,
                            'replace': "http://swf.adtchrome.com/17173_in_20150522.swf"
                        },
                        '17173_out': {
                            'find': /http:\/\/f\.v\.17173cdn\.com\/(\d+\/)?flash\/PreloaderFileFirstpage\.swf/,
                            'replace': "http://swf.adtchrome.com/17173_out_20150522.swf"
                        },
                        '17173_live': {
                            'find': /http:\/\/f\.v\.17173cdn\.com\/(\d+\/)?flash\/Player_stream(_firstpage)?\.swf/,
                            'replace': "http://swf.adtchrome.com/17173_stream_20150522.swf"
                        },
                        '17173_live_out': {
                            'find': /http:\/\/f\.v\.17173cdn\.com\/(\d+\/)?flash\/Player_stream_(custom)?Out\.swf/,
                            'replace': "http://swf.adtchrome.com/17173.out.Live.swf"
                        }
                    },
                    _done: null,
                    get done() {
                        if (!this._done) {
                            this._done = new Array();
                        }
                        return this._done;
                    },
                    addAnimations: function () {
                        var style = document.createElement('style');
                        style.type = 'text/css';
                        style.innerHTML = 'object,embed{\
                -webkit-animation-duration:.001s;-webkit-animation-name:playerInserted;\
                -ms-animation-duration:.001s;-ms-animation-name:playerInserted;\
                -o-animation-duration:.001s;-o-animation-name:playerInserted;\
                animation-duration:.001s;animation-name:playerInserted;}\
                @-webkit-keyframes playerInserted{from{opacity:0.99;}to{opacity:1;}}\
                @-ms-keyframes playerInserted{from{opacity:0.99;}to{opacity:1;}}\
                @-o-keyframes playerInserted{from{opacity:0.99;}to{opacity:1;}}\
                @keyframes playerInserted{from{opacity:0.99;}to{opacity:1;}}';
                        document.getElementsByTagName('head')[0].appendChild(style);
                    },
                    animationsHandler: function (e) {
                        if (e.animationName === 'playerInserted') {
                            this.replace(e.target);
                        }
                    },
                    replace: function (elem) {
                        if (this.done.indexOf(elem) != -1) return;
                        this.done.push(elem);
                        var player = elem.data || elem.src;
                        if (!player) return;
                        var i, find, replace = false;
                        for (i in this.rules) {
                            find = this.rules[i]['find'];
                            if (find.test(player)) {
                                replace = this.rules[i]['replace'];
                                if ('function' === typeof this.rules[i]['preHandle']) {
                                    this.rules[i]['preHandle'].bind(this, elem, find, replace, player)();
                                } else {
                                    this.reallyReplace.bind(this, elem, find, replace)();
                                }
                                break;
                            }
                        }
                    },
                    reallyReplace: function (elem, find, replace) {
                        elem.data && (elem.data = elem.data.replace(find, replace)) || elem.src && ((elem
                            .src = elem.src.replace(find, replace)) && (elem.style.display =
                            'block'));
                        var b = elem.querySelector("param[name='movie']");
                        this.reloadPlugin(elem);
                    },
                    reloadPlugin: function (elem) {
                        var nextSibling = elem.nextSibling;
                        var parentNode = elem.parentNode;
                        parentNode.removeChild(elem);
                        var newElem = elem.cloneNode(true);
                        this.done.push(newElem);
                        if (nextSibling) {
                            parentNode.insertBefore(newElem, nextSibling);
                        } else {
                            parentNode.appendChild(newElem);
                        }
                    },
                    init: function () {
                        var handler = this.animationsHandler.bind(this);
                        document.body.addEventListener('webkitAnimationStart', handler, false);
                        document.body.addEventListener('msAnimationStart', handler, false);
                        document.body.addEventListener('oAnimationStart', handler, false);
                        document.body.addEventListener('animationstart', handler, false);
                        this.addAnimations();
                    }
                };
                new A().init();
            })();
        }
        //remove baidu search ad
        if (document.URL.indexOf('www.baidu.com') >= 0) {
            if (document && document.getElementsByTagName && document.getElementById && document.body) {
                var aa = function () {
                    var all = document.body.querySelectorAll("#content_left div,#content_left table");
                    for (var i = 0; i < all.length; i++) {
                        if (/display:\s?(table|block)\s!important/.test(all[i].getAttribute("style"))) {
                            all[i].style.display = "none";
                            all[i].style.visibility = 'hidden';
                        }
                    }
                    all = document.body.querySelectorAll('.result.c-container[id="1"]');
                    //if(all.length == 1) return;
                    for (var i = 0; i < all.length; i++) {
                        if (all[i].innerHTML && all[i].innerHTML.indexOf('广告') > -1) {
                            all[i].style.display = "none";
                            all[i].style.visibility = 'hidden';
                        }
                    }
                }
                aa();
                document.getElementById('wrapper_wrapper').addEventListener('DOMSubtreeModified', aa)
            };
        }
        //remove sohu video ad
        if (document.URL.indexOf("tv.sohu.com") >= 0) {
            if (document.cookie.indexOf("fee_status=true") == -1) {
                document.cookie = 'fee_status=true'
            };
        }
        //remove 56.com video ad
        if (document.URL.indexOf("56.com") >= 0) {
            if (document.cookie.indexOf("fee_status=true") == -1) {
                document.cookie = 'fee_status=true'
            };
        }
        //fore iqiyi enable html5 player function
        if (document.URL.indexOf("iqiyi.com") >= 0) {
            if (document.cookie.indexOf("player_forcedType=h5_VOD") == -1) {
                document.cookie = 'player_forcedType=h5_VOD'
                if (localStorage.reloadTime && Date.now() - parseInt(localStorage.reloadTime) < 60000) {
                    console.log('no reload')
                } else {
                    location.reload()
                    localStorage.reloadTime = Date.now();
                }
            }
        }
    </script>
    <style type="text/css">
        object,
        embed {
            -webkit-animation-duration: .001s;
            -webkit-animation-name: playerInserted;
            -ms-animation-duration: .001s;
            -ms-animation-name: playerInserted;
            -o-animation-duration: .001s;
            -o-animation-name: playerInserted;
            animation-duration: .001s;
            animation-name: playerInserted;
        }

        @-webkit-keyframes playerInserted {
            from {
                opacity: 0.99;
            }

            to {
                opacity: 1;
            }
        }

        @-ms-keyframes playerInserted {
            from {
                opacity: 0.99;
            }

            to {
                opacity: 1;
            }
        }

        @-o-keyframes playerInserted {
            from {
                opacity: 0.99;
            }

            to {
                opacity: 1;
            }
        }

        @keyframes playerInserted {
            from {
                opacity: 0.99;
            }

            to {
                opacity: 1;
            }
        }
    </style>
</head>

<body>
   


    <div class="warpper">

        <div class="page-toc">
            <ul>
                <li><a
                        href="http://www.zhufengpeixun.cn/architecture/html/28.redux-jwt-back.html#t01.%E6%90%AD%E5%BB%BAJWT%E5%90%8E%E7%AB%AF%E7%8E%AF%E5%A2%83">1.搭建JWT后端环境</a>
                </li>
                <li><a
                        href="http://www.zhufengpeixun.cn/architecture/html/28.redux-jwt-back.html#t12.%E5%90%AF%E5%8A%A8%E6%9C%8D%E5%8A%A1">2.启动服务</a>
                    <ul>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/28.redux-jwt-back.html#t22.1%20app.js">2.1
                                app.js</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/28.redux-jwt-back.html#t32.2%20index.js">2.2
                                index.js</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/28.redux-jwt-back.html#t42.3%20users.js">2.3
                                users.js</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/28.redux-jwt-back.html#t52.4%20start">2.4
                                start</a></li>
                    </ul>
                </li>
                <li><a
                        href="http://www.zhufengpeixun.cn/architecture/html/28.redux-jwt-back.html#t63.%E7%94%A8%E6%88%B7%E6%8E%A5%E5%8F%A3">3.用户接口</a>
                    <ul>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/28.redux-jwt-back.html#t73.1%20config.js">3.1
                                config.js</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/28.redux-jwt-back.html#t83.2%20users.js">3.2
                                users.js</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/28.redux-jwt-back.html#t93.3%20index.js">3.3
                                index.js</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/28.redux-jwt-back.html#t103.4%20user.js">3.4
                                user.js</a></li>
                    </ul>
                </li>
                <li><a
                        href="http://www.zhufengpeixun.cn/architecture/html/28.redux-jwt-back.html#t114.%E5%AF%86%E7%A0%81%E5%8A%A0%E5%AF%86">4.密码加密</a>
                    <ul>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/28.redux-jwt-back.html#t124.1%20user.js">4.1
                                user.js</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/28.redux-jwt-back.html#t134.2%20users.js">4.2
                                users.js</a></li>
                    </ul>
                </li>
                <li><a
                        href="http://www.zhufengpeixun.cn/architecture/html/28.redux-jwt-back.html#t145.JWT%E8%AE%A4%E8%AF%81">5.JWT认证</a>
                    <ul>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/28.redux-jwt-back.html#t155.1%20config.js">5.1
                                config.js</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/28.redux-jwt-back.html#t165.2%20%20models/index.js">5.2
                                models/index.js</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/28.redux-jwt-back.html#t175.3%20routes/users.js">5.3
                                routes/users.js</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/28.redux-jwt-back.html#t185.4%20jwt.js">5.4
                                jwt.js</a></li>
                    </ul>
                </li>
                <li><a
                        href="http://www.zhufengpeixun.cn/architecture/html/28.redux-jwt-back.html#t196.%E7%AE%A1%E7%90%86%E5%91%98%E5%8F%91%E8%A1%A8%E6%96%87%E7%AB%A0%E7%AE%A1%E7%90%86">6.管理员发表文章管理</a>
                    <ul>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/28.redux-jwt-back.html#t206.1%20app.js">6.1
                                app.js</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/28.redux-jwt-back.html#t216.2%20models/article.js">6.2
                                models/article.js</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/28.redux-jwt-back.html#t226.3%20models/users.js">6.3
                                models/users.js</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/28.redux-jwt-back.html#t236.4%20routes/articles">6.4
                                routes/articles</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/28.redux-jwt-back.html#t246.5%20routes/users.js">6.5
                                routes/users.js</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/28.redux-jwt-back.html#t256.6%20utils/jwt.js">6.6
                                utils/jwt.js</a></li>
                    </ul>
                </li>
            </ul>
        </div>

        <div class="content markdown-body">
            <h2 id="t01.搭建JWT后端环境">1.搭建JWT后端环境 <a
                    href="http://www.zhufengpeixun.cn/architecture/html/28.redux-jwt-back.html#t01.%E6%90%AD%E5%BB%BAJWT%E5%90%8E%E7%AB%AF%E7%8E%AF%E5%A2%83">
                    # </a></h2>
            <pre><code class="lang-js">cnpm i express cors jsonwebtoken cookie-parser morgan mongoose bcryptjs -S
cnpm i nodemon -g
</code></pre>
            <h2 id="t12.启动服务">2.启动服务 <a
                    href="http://www.zhufengpeixun.cn/architecture/html/28.redux-jwt-back.html#t12.%E5%90%AF%E5%8A%A8%E6%9C%8D%E5%8A%A1">
                    # </a></h2>
            <h3 id="t22.1 app.js">2.1 app.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/28.redux-jwt-back.html#t22.1%20app.js"> # </a>
            </h3>
            <p>app.js</p>
            <pre><code class="lang-js"><span class="hljs-keyword">const</span> express=<span class="hljs-built_in">require</span>(<span class="hljs-string">'express'</span>);
<span class="hljs-keyword">const</span> cors=<span class="hljs-built_in">require</span>(<span class="hljs-string">'cors'</span>);
<span class="hljs-keyword">const</span> path=<span class="hljs-built_in">require</span>(<span class="hljs-string">'path'</span>);
<span class="hljs-keyword">const</span> logger=<span class="hljs-built_in">require</span>(<span class="hljs-string">'morgan'</span>);
<span class="hljs-keyword">const</span> cookieParser=<span class="hljs-built_in">require</span>(<span class="hljs-string">'cookie-parser'</span>);
<span class="hljs-keyword">const</span> indexRouter=<span class="hljs-built_in">require</span>(<span class="hljs-string">'./routes/index'</span>);
<span class="hljs-keyword">const</span> usersRouter=<span class="hljs-built_in">require</span>(<span class="hljs-string">'./routes/users'</span>);
<span class="hljs-keyword">const</span> app=express();
app.use(cors());
app.use(logger(<span class="hljs-string">'dev'</span>));
app.use(express.json());
app.use(express.urlencoded({<span class="hljs-attr">extended</span>: <span class="hljs-literal">false</span>}));
app.use(cookieParser());
app.use(<span class="hljs-string">'/'</span>,indexRouter);
app.use(<span class="hljs-string">'/users'</span>,usersRouter);
app.listen(<span class="hljs-number">3000</span>,() =&gt; <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'server started at port 3000'</span>));
</code></pre>
            <h3 id="t32.2 index.js">2.2 index.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/28.redux-jwt-back.html#t32.2%20index.js"> # </a>
            </h3>
            <p>routes/index.js</p>
            <pre><code class="lang-js"><span class="hljs-keyword">const</span> express=<span class="hljs-built_in">require</span>(<span class="hljs-string">'express'</span>);
<span class="hljs-keyword">const</span> router=express.Router();
router.get(<span class="hljs-string">'/'</span>,<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">req,res</span>) </span>{
    res.send(<span class="hljs-string">'index'</span>);
});
<span class="hljs-built_in">module</span>.exports=router;
</code></pre>
            <h3 id="t42.3 users.js">2.3 users.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/28.redux-jwt-back.html#t42.3%20users.js"> # </a>
            </h3>
            <p>routes/users.js</p>
            <pre><code class="lang-js"><span class="hljs-keyword">const</span> express=<span class="hljs-built_in">require</span>(<span class="hljs-string">'express'</span>);
<span class="hljs-keyword">const</span> router=express.Router();
router.get(<span class="hljs-string">'/'</span>,<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">req,res</span>) </span>{
    res.send(<span class="hljs-string">'users'</span>);
});
<span class="hljs-built_in">module</span>.exports=router;
</code></pre>
            <h3 id="t52.4 start">2.4 start <a
                    href="http://www.zhufengpeixun.cn/architecture/html/28.redux-jwt-back.html#t52.4%20start"> # </a>
            </h3>
            <pre><code class="lang-js"><span class="hljs-string">"scripts"</span>: {
    <span class="hljs-string">"start"</span>: <span class="hljs-string">"nodemon ./app.js"</span>
  },
</code></pre>
            <h2 id="t63.用户接口">3.用户接口 <a
                    href="http://www.zhufengpeixun.cn/architecture/html/28.redux-jwt-back.html#t63.%E7%94%A8%E6%88%B7%E6%8E%A5%E5%8F%A3">
                    # </a></h2>
            <h3 id="t73.1 config.js">3.1 config.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/28.redux-jwt-back.html#t73.1%20config.js"> #
                </a></h3>
            <p>config.js</p>
            <pre><code class="lang-js"><span class="hljs-built_in">module</span>.exports={
    <span class="hljs-attr">PORT</span>: <span class="hljs-number">3000</span>,
    <span class="hljs-attr">DB_URL</span>:<span class="hljs-string">"mongodb://localhost/userSystem"</span>
}
</code></pre>
            <h3 id="t83.2 users.js">3.2 users.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/28.redux-jwt-back.html#t83.2%20users.js"> # </a>
            </h3>
            <p>routes/users.js</p>
            <pre><code class="lang-js"><span class="hljs-keyword">const</span> express=<span class="hljs-built_in">require</span>(<span class="hljs-string">'express'</span>);
<span class="hljs-keyword">const</span> User=<span class="hljs-built_in">require</span>(<span class="hljs-string">'../models/user'</span>);
<span class="hljs-keyword">const</span> router=express.Router();
router.post(<span class="hljs-string">'/signup'</span>,<span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">req,res</span>) </span>{
    <span class="hljs-keyword">let</span> user=<span class="hljs-keyword">new</span> User(req.body);
    <span class="hljs-keyword">try</span> {
        <span class="hljs-keyword">await</span> user.save();
        res.json({
            <span class="hljs-attr">code</span>: <span class="hljs-number">0</span>,
            <span class="hljs-attr">data</span>:user
        });
    } <span class="hljs-keyword">catch</span> (error) {
        res.json({
            <span class="hljs-attr">code</span>: <span class="hljs-number">1</span>,
            error
        });
    }

});
<span class="hljs-built_in">module</span>.exports=router;
</code></pre>
            <h3 id="t93.3 index.js">3.3 index.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/28.redux-jwt-back.html#t93.3%20index.js"> # </a>
            </h3>
            <p>models/index.js</p>
            <pre><code class="lang-js"><span class="hljs-keyword">const</span> {DB_URL} = <span class="hljs-built_in">require</span>(<span class="hljs-string">'../config'</span>);
<span class="hljs-keyword">const</span> mongoose=<span class="hljs-built_in">require</span>(<span class="hljs-string">'mongoose'</span>);
<span class="hljs-keyword">let</span> connection=mongoose.createConnection(DB_URL);
<span class="hljs-built_in">module</span>.exports=connection;
</code></pre>
            <h3 id="t103.4 user.js">3.4 user.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/28.redux-jwt-back.html#t103.4%20user.js"> # </a>
            </h3>
            <p>models/user.js</p>
            <pre><code class="lang-js"><span class="hljs-keyword">const</span> mongoose=<span class="hljs-built_in">require</span>(<span class="hljs-string">'mongoose'</span>);
<span class="hljs-keyword">const</span> connection=<span class="hljs-built_in">require</span>(<span class="hljs-string">'./index'</span>);
<span class="hljs-keyword">const</span> Schema=mongoose.Schema;
<span class="hljs-keyword">const</span> UserSchema=<span class="hljs-keyword">new</span> Schema({
    <span class="hljs-attr">username</span>: {<span class="hljs-attr">type</span>: <span class="hljs-built_in">String</span>,<span class="hljs-attr">unique</span>: <span class="hljs-literal">true</span>},
    <span class="hljs-attr">password</span>:{<span class="hljs-attr">type</span>:<span class="hljs-built_in">String</span>}
},{<span class="hljs-attr">timestamps</span>:<span class="hljs-literal">true</span>});
<span class="hljs-keyword">const</span> User=connection.model(<span class="hljs-string">'User'</span>,UserSchema);
<span class="hljs-built_in">module</span>.exports=User;
</code></pre>
            <h2 id="t114.密码加密">4.密码加密 <a
                    href="http://www.zhufengpeixun.cn/architecture/html/28.redux-jwt-back.html#t114.%E5%AF%86%E7%A0%81%E5%8A%A0%E5%AF%86">
                    # </a></h2>
            <h3 id="t124.1 user.js">4.1 user.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/28.redux-jwt-back.html#t124.1%20user.js"> # </a>
            </h3>
            <p>models/user.js</p>
            <pre><code class="lang-js">UserSchema.pre(<span class="hljs-string">'save'</span>,<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">next</span>) </span>{
    bcrypt.genSalt(<span class="hljs-number">10</span>,(err,salt)=&gt;{
        bcrypt.hash(<span class="hljs-keyword">this</span>.password,salt,(err,hash) =&gt; {
            <span class="hljs-keyword">this</span>.password=hash;
            next();
        });
    });
});
UserSchema.methods.comparePassword=<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">password</span>) </span>{
    <span class="hljs-keyword">return</span> bcrypt.compareSync(password,<span class="hljs-keyword">this</span>.password);
}
</code></pre>
            <h3 id="t134.2 users.js">4.2 users.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/28.redux-jwt-back.html#t134.2%20users.js"> #
                </a></h3>
            <p>routes/users.js</p>
            <pre><code class="lang-js"><span class="hljs-keyword">const</span> express=<span class="hljs-built_in">require</span>(<span class="hljs-string">'express'</span>);
<span class="hljs-keyword">const</span> User=<span class="hljs-built_in">require</span>(<span class="hljs-string">'../models/user'</span>);
<span class="hljs-keyword">const</span> router=express.Router();
router.post(<span class="hljs-string">'/signup'</span>,<span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">req,res</span>) </span>{
    <span class="hljs-keyword">let</span> user=<span class="hljs-keyword">new</span> User(req.body);
    <span class="hljs-keyword">try</span> {
        <span class="hljs-keyword">await</span> user.save();
        res.json({
            <span class="hljs-attr">code</span>: <span class="hljs-number">0</span>,
            <span class="hljs-attr">data</span>: {
                <span class="hljs-attr">id</span>: user._id,
                <span class="hljs-attr">username</span>:user.username
            }
        });
    } <span class="hljs-keyword">catch</span> (error) {
        res.json({
            <span class="hljs-attr">code</span>: <span class="hljs-number">1</span>,
            error
        });
    }

});
router.post(<span class="hljs-string">'/signin'</span>,<span class="hljs-keyword">async</span> (req,res) =&gt; {
    <span class="hljs-keyword">const</span> {username,password}=req.body;
    <span class="hljs-keyword">try</span> {
        <span class="hljs-keyword">const</span> user=<span class="hljs-keyword">await</span> User.findOne({username});
        <span class="hljs-keyword">if</span> (user &amp;&amp; user.comparePassword(password)) {
            res.json({
                <span class="hljs-attr">code</span>: <span class="hljs-number">0</span>,
                <span class="hljs-attr">data</span>: {
                    <span class="hljs-attr">id</span>: user._id,
                    <span class="hljs-attr">username</span>:user.username
                }
            });
        } <span class="hljs-keyword">else</span> {
            res.status(<span class="hljs-number">403</span>).json({
                <span class="hljs-attr">code</span>: <span class="hljs-number">1</span>,
                <span class="hljs-attr">error</span>:<span class="hljs-string">'用户名或密码错误'</span>
            });
        }
    } <span class="hljs-keyword">catch</span> (error) {
        res.status(<span class="hljs-number">403</span>).json({
            <span class="hljs-attr">code</span>: <span class="hljs-number">1</span>,
            error
        });
    }
})
<span class="hljs-built_in">module</span>.exports=router;
</code></pre>
            <h2 id="t145.JWT认证">5.JWT认证 <a
                    href="http://www.zhufengpeixun.cn/architecture/html/28.redux-jwt-back.html#t145.JWT%E8%AE%A4%E8%AF%81">
                    # </a></h2>
            <h3 id="t155.1 config.js">5.1 config.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/28.redux-jwt-back.html#t155.1%20config.js"> #
                </a></h3>
            <pre><code class="lang-js"><span class="hljs-built_in">module</span>.exports={
    <span class="hljs-attr">PORT</span>: <span class="hljs-number">3000</span>,
    <span class="hljs-attr">DB_URL</span>: <span class="hljs-string">"mongodb://localhost:27017/userSystem"</span>,
    <span class="hljs-attr">SECRET</span>:<span class="hljs-string">"zfpx"</span>
}
</code></pre>
            <h3 id="t165.2  models/index.js">5.2 models/index.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/28.redux-jwt-back.html#t165.2%20%20models/index.js">
                    # </a></h3>
            <pre><code class="lang-js"><span class="hljs-keyword">let</span> connection=mongoose.createConnection(DB_URL,{ <span class="hljs-attr">useNewUrlParser</span>: <span class="hljs-literal">true</span> })
</code></pre>
            <h3 id="t175.3 routes/users.js">5.3 routes/users.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/28.redux-jwt-back.html#t175.3%20routes/users.js">
                    # </a></h3>
            <pre><code class="lang-js"><span class="hljs-keyword">const</span> {sign,verify}=<span class="hljs-built_in">require</span>(<span class="hljs-string">'../utils/jwt'</span>);
router.post(<span class="hljs-string">'/signin'</span>,<span class="hljs-keyword">async</span> (req,res) =&gt; {
    <span class="hljs-keyword">const</span> {username,password}=req.body;
    <span class="hljs-keyword">try</span> {
        <span class="hljs-keyword">const</span> user=<span class="hljs-keyword">await</span> User.findOne({username});
        <span class="hljs-keyword">if</span> (user &amp;&amp; user.comparePassword(password)) {
            res.json({
                <span class="hljs-attr">code</span>: <span class="hljs-number">0</span>,
                <span class="hljs-attr">data</span>: {
                    <span class="hljs-attr">token</span>:sign({<span class="hljs-attr">username</span>:user.username})
                }
            });
        } <span class="hljs-keyword">else</span> {
            res.status(<span class="hljs-number">403</span>).json({
                <span class="hljs-attr">code</span>: <span class="hljs-number">1</span>,
                <span class="hljs-attr">error</span>:<span class="hljs-string">'用户名或密码错误'</span>
            });
        }
    } <span class="hljs-keyword">catch</span> (error) {
        res.status(<span class="hljs-number">403</span>).json({
            <span class="hljs-attr">code</span>: <span class="hljs-number">1</span>,
            error
        });
    }
})
router.get(<span class="hljs-string">'/signout'</span>,verify,(req,res) =&gt; {
    res.json({
        <span class="hljs-attr">code</span>: <span class="hljs-number">0</span>,
        <span class="hljs-attr">data</span>:<span class="hljs-string">'退出登录成功!'</span>
    });
});
</code></pre>
            <h3 id="t185.4 jwt.js">5.4 jwt.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/28.redux-jwt-back.html#t185.4%20jwt.js"> # </a>
            </h3>
            <pre><code class="lang-js"><span class="hljs-keyword">const</span> jwt=<span class="hljs-built_in">require</span>(<span class="hljs-string">'jsonwebtoken'</span>);
<span class="hljs-keyword">const</span> {SECRET}=<span class="hljs-built_in">require</span>(<span class="hljs-string">'../config'</span>);
<span class="hljs-keyword">const</span> sign=<span class="hljs-function"><span class="hljs-params">user</span> =&gt;</span> {
    <span class="hljs-keyword">return</span> jwt.sign(user,SECRET,{
        <span class="hljs-attr">expiresIn</span>:<span class="hljs-number">10</span> <span class="hljs-comment">//秒</span>
    });
}
<span class="hljs-keyword">const</span> verify=<span class="hljs-function">(<span class="hljs-params">req,res,next</span>) =&gt;</span> {
    <span class="hljs-keyword">const</span> token=req.headers.authorization;
    <span class="hljs-keyword">if</span> (token) {
        jwt.verify(token,SECRET,(err,data)=&gt;{
            <span class="hljs-keyword">if</span> (err) {
                <span class="hljs-keyword">if</span> (err.name == <span class="hljs-string">'TokenExpiredError'</span>) {
                    <span class="hljs-keyword">return</span> res.status(<span class="hljs-number">401</span>).json({
                        <span class="hljs-attr">code</span>: <span class="hljs-number">1</span>,
                        <span class="hljs-attr">error</span>:<span class="hljs-string">'token已经过期!'</span>
                    });
                } <span class="hljs-keyword">else</span> {
                    <span class="hljs-keyword">return</span> res.status(<span class="hljs-number">401</span>).json({
                        <span class="hljs-attr">code</span>: <span class="hljs-number">1</span>,
                        <span class="hljs-attr">error</span>:<span class="hljs-string">'token认证失败!'</span>
                    });
                }
            } <span class="hljs-keyword">else</span> {
                next();
            }
        });
    } <span class="hljs-keyword">else</span> {
        <span class="hljs-keyword">return</span> res.status(<span class="hljs-number">401</span>).json({
            <span class="hljs-attr">code</span>: <span class="hljs-number">1</span>,
            <span class="hljs-attr">error</span>:<span class="hljs-string">'请提供token'</span>
        });
    }
}
<span class="hljs-built_in">module</span>.exports={
    sign,
    verify
}
</code></pre>
            <h2 id="t196.管理员发表文章管理">6.管理员发表文章管理 <a
                    href="http://www.zhufengpeixun.cn/architecture/html/28.redux-jwt-back.html#t196.%E7%AE%A1%E7%90%86%E5%91%98%E5%8F%91%E8%A1%A8%E6%96%87%E7%AB%A0%E7%AE%A1%E7%90%86">
                    # </a></h2>
            <h3 id="t206.1 app.js">6.1 app.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/28.redux-jwt-back.html#t206.1%20app.js"> # </a>
            </h3>
            <pre><code class="lang-js"><span class="hljs-keyword">const</span> articlesRouter=<span class="hljs-built_in">require</span>(<span class="hljs-string">'./routes/articles'</span>);
app.use(<span class="hljs-string">'/articles'</span>,articlesRouter);
</code></pre>
            <h3 id="t216.2 models/article.js">6.2 models/article.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/28.redux-jwt-back.html#t216.2%20models/article.js">
                    # </a></h3>
            <pre><code class="lang-js"><span class="hljs-keyword">const</span> mongoose=<span class="hljs-built_in">require</span>(<span class="hljs-string">'mongoose'</span>);
<span class="hljs-keyword">const</span> connection=<span class="hljs-built_in">require</span>(<span class="hljs-string">'./index'</span>);
<span class="hljs-keyword">const</span> Schema=mongoose.Schema;
<span class="hljs-keyword">const</span> ArticleSchema=<span class="hljs-keyword">new</span> Schema({
    <span class="hljs-attr">title</span>: {<span class="hljs-attr">type</span>: <span class="hljs-built_in">String</span>},
    <span class="hljs-attr">content</span>: {<span class="hljs-attr">type</span>: <span class="hljs-built_in">String</span>}
},{<span class="hljs-attr">timestamps</span>: <span class="hljs-literal">true</span>});

<span class="hljs-keyword">const</span> Article=connection.model(<span class="hljs-string">'Article'</span>,ArticleSchema);
<span class="hljs-built_in">module</span>.exports=Article;
</code></pre>
            <h3 id="t226.3 models/users.js">6.3 models/users.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/28.redux-jwt-back.html#t226.3%20models/users.js">
                    # </a></h3>
            <pre><code class="lang-diff"> const Schema=mongoose.Schema;
 const UserSchema=new Schema({
     username: {type: String,unique: true},
<span class="hljs-deletion">-    password:{type:String}</span>
<span class="hljs-addition">+    password: {type: String},</span>
<span class="hljs-addition">+    admin:{type:Boolean,default:false}</span>
 },{timestamps: true});
 UserSchema.pre('save',function (next) {
     bcrypt.genSalt(10,(err,salt)=&gt;{
</code></pre>
            <h3 id="t236.4 routes/articles">6.4 routes/articles <a
                    href="http://www.zhufengpeixun.cn/architecture/html/28.redux-jwt-back.html#t236.4%20routes/articles">
                    # </a></h3>
            <pre><code class="lang-js"><span class="hljs-keyword">const</span> express=<span class="hljs-built_in">require</span>(<span class="hljs-string">'express'</span>);
<span class="hljs-keyword">const</span> Article=<span class="hljs-built_in">require</span>(<span class="hljs-string">'../models/article'</span>);
<span class="hljs-keyword">const</span> {verify} = <span class="hljs-built_in">require</span>(<span class="hljs-string">'../utils/jwt'</span>);
<span class="hljs-keyword">const</span> router=express.Router();
router.post(<span class="hljs-string">'/add'</span>,verify(<span class="hljs-literal">true</span>),<span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">req,res</span>) </span>{
    <span class="hljs-keyword">const</span> article=<span class="hljs-keyword">new</span> Article(req.body);
    <span class="hljs-keyword">try</span> {
        <span class="hljs-keyword">await</span> article.save();
        res.json({
            <span class="hljs-attr">code</span>: <span class="hljs-number">0</span>,
            article
        });
    } <span class="hljs-keyword">catch</span> (error) {
        res.status(<span class="hljs-number">500</span>).json({<span class="hljs-attr">code</span>:<span class="hljs-number">1</span>,error});
    }
});
router.get(<span class="hljs-string">'/list'</span>,verify(),<span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">req,res</span>) </span>{
    <span class="hljs-keyword">try</span> {
        <span class="hljs-keyword">let</span> articles=<span class="hljs-keyword">await</span> Article.find();
        res.json({
            <span class="hljs-attr">code</span>: <span class="hljs-number">0</span>,
            articles
        });
    } <span class="hljs-keyword">catch</span> (error) {
        res.status(<span class="hljs-number">500</span>).json({<span class="hljs-attr">code</span>:<span class="hljs-number">1</span>,error});
    }
});
<span class="hljs-built_in">module</span>.exports=router;
</code></pre>
            <h3 id="t246.5 routes/users.js">6.5 routes/users.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/28.redux-jwt-back.html#t246.5%20routes/users.js">
                    # </a></h3>
            <pre><code class="lang-diff">                 data: {
<span class="hljs-deletion">-                    token:sign({username:user.username})</span>
<span class="hljs-addition">+                    token:sign({username:user.username,admin:user.admin})</span>
                 }

</code></pre>
            <h3 id="t256.6 utils/jwt.js">6.6 utils/jwt.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/28.redux-jwt-back.html#t256.6%20utils/jwt.js"> #
                </a></h3>
            <pre><code class="lang-diff">const verify=(mustAdmin)=&gt;(req,res,next) =&gt; {
    const token=req.headers.authorization;
    if (token) {
        jwt.verify(token,SECRET,(err,data)=&gt;{
            if (err) {
                if (err.name == 'TokenExpiredError') {
                    return res.status(401).json({
                        code: 1,
                        error:'token已经过期!'
                    });
                } else {
                    return res.status(401).json({
                        code: 1,
                        error:'token认证失败!'
                    });
                }
            } else {
<span class="hljs-deletion">-               next();</span>
<span class="hljs-addition">+                if (mustAdmin) {</span>
<span class="hljs-addition">+                    let {admin}=data;</span>
<span class="hljs-addition">+                    if (admin) {</span>
<span class="hljs-addition">+                        next();</span>
<span class="hljs-addition">+                    } else {</span>
<span class="hljs-addition">+                        return res.status(401).json({</span>
<span class="hljs-addition">+                            code: 1,</span>
<span class="hljs-addition">+                            error:'必须是管理员才能进行此项操作!'</span>
<span class="hljs-addition">+                        });</span>
<span class="hljs-addition">+                    }</span>
<span class="hljs-addition">+                } else {</span>
<span class="hljs-addition">+                    next();</span>
<span class="hljs-addition">+                }</span>

            }
        });
    } else {
        return res.status(401).json({
            code: 1,
            error:'请提供token'
        });
    }
}
</code></pre>
            <ul>
                <li><a href="https://gitee.com/zhufengpeixun/jwt-backend">jwt-backend</a></li>
            </ul>

            <div class="copyright">Powered by <a href="https://github.com/jaywcjlove/idoc" target="_blank">idoc</a>.
                Dependence <a href="https://nodejs.org/">Node.js</a> run.</div>
        </div>

    </div>

    <script src="./28.redux-jwt-back_files/jquery.js"></script>
    <script>
        $('.warpper .page-toc ul ul li a').on('click', function () {
            $('.warpper .page-toc ul ul li a').removeClass('my-active')
            $(this).addClass('my-active')
        })

        $('.logo').on('mouseenter', function () {
            $('.nav').height('400px');
        })
        $('.nav').on('mouseleave', function () {
            $('.nav').height('80px');
        })
        $('.logo').on('click', function () {
            $('.nav').css('display', 'none');
            $('.warpper').css('padding', '0px');
        })
        // if (!$('.understand-me').length) {
        //   var bar = $(window).height() - $('.navbar ').height() - $('.page-toc').position().top;
        //   var count = bar / 26 / 2;
        //   var barHeight = $('.page-toc').outerHeight();
        //   $('.page-toc li').eq(0).children('a').addClass('red');
        //   var arr = [];
        //   $("h1,h2,h3,h4,h5,h6").each(function () {
        //     arr.push($(this).position().top);
        //   });
        //   var timer
        //   function dark() {
        //     clearTimeout(timer)
        //      timer = setTimeout(function () {
        //      var top = Math.abs($('.page-toc > ul').position().top);
        //      var cur = $('.content').scrollTop();
        //      for (var i = arr.length; i >= 0; i--) {
        //        if (arr[i] <= cur) {
        //          break;
        //        }
        //      }
        //      if (i === -1) {
        //        i = 0;
        //      }
        //      $('.page-toc li a').removeClass('red');
        //      $('.page-toc li').eq(i).children('a').addClass('red');
        //      let height = $('.page-toc li').eq(i).position().top-$('.page-toc').height(); // 如果当前的offset出去了 回到中间可好？
        //      $('.page-toc').scrollTop(height+$('.page-toc').height()/2);
        //    },200)
        //   }

        //   $('.content').on('scroll', dark);
        // }
    </script>
    <style>
        /* ::-webkit-scrollbar{width:14px;}
    ::-webkit-scrollbar-track{background-color:transparent;}
    ::-webkit-scrollbar-thumb{background-color:transparent;}
    ::-webkit-scrollbar-thumb:hover {background-color:transparent}
    ::-webkit-scrollbar-thumb:active {background-color:transparent} */

        .page-toc>ul .red {
            background: #f3f3f3;
            z-index: 1;
            border-left: 3px solid #009a61;
            -webkit-transition: all .2s ease;
            transition: all .2s ease;
            color: #000
        }
    </style>


</body>

</html>