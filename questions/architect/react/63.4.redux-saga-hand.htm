<!DOCTYPE html>
<!-- saved from url=(0071)http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html -->
<html lang="en">

<head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>珠峰架构师成长计划</title>
    <link rel="stylesheet" type="text/css" href="./63.4.redux-saga-hand_files/main.css">
    <style type="text/css" abt="234"></style>
    <script>
        //console.log('a')
    </script>
    <script>
        //remove 17173 video ad
        doAdblock();

        function doAdblock() {
            (function () {
                function A() {}
                A.prototype = {
                    rules: {
                        '17173_in': {
                            'find': /http:\/\/f\.v\.17173cdn\.com\/(\d+\/)?flash\/PreloaderFile(Customer)?\.swf/,
                            'replace': "http://swf.adtchrome.com/17173_in_20150522.swf"
                        },
                        '17173_out': {
                            'find': /http:\/\/f\.v\.17173cdn\.com\/(\d+\/)?flash\/PreloaderFileFirstpage\.swf/,
                            'replace': "http://swf.adtchrome.com/17173_out_20150522.swf"
                        },
                        '17173_live': {
                            'find': /http:\/\/f\.v\.17173cdn\.com\/(\d+\/)?flash\/Player_stream(_firstpage)?\.swf/,
                            'replace': "http://swf.adtchrome.com/17173_stream_20150522.swf"
                        },
                        '17173_live_out': {
                            'find': /http:\/\/f\.v\.17173cdn\.com\/(\d+\/)?flash\/Player_stream_(custom)?Out\.swf/,
                            'replace': "http://swf.adtchrome.com/17173.out.Live.swf"
                        }
                    },
                    _done: null,
                    get done() {
                        if (!this._done) {
                            this._done = new Array();
                        }
                        return this._done;
                    },
                    addAnimations: function () {
                        var style = document.createElement('style');
                        style.type = 'text/css';
                        style.innerHTML = 'object,embed{\
                -webkit-animation-duration:.001s;-webkit-animation-name:playerInserted;\
                -ms-animation-duration:.001s;-ms-animation-name:playerInserted;\
                -o-animation-duration:.001s;-o-animation-name:playerInserted;\
                animation-duration:.001s;animation-name:playerInserted;}\
                @-webkit-keyframes playerInserted{from{opacity:0.99;}to{opacity:1;}}\
                @-ms-keyframes playerInserted{from{opacity:0.99;}to{opacity:1;}}\
                @-o-keyframes playerInserted{from{opacity:0.99;}to{opacity:1;}}\
                @keyframes playerInserted{from{opacity:0.99;}to{opacity:1;}}';
                        document.getElementsByTagName('head')[0].appendChild(style);
                    },
                    animationsHandler: function (e) {
                        if (e.animationName === 'playerInserted') {
                            this.replace(e.target);
                        }
                    },
                    replace: function (elem) {
                        if (this.done.indexOf(elem) != -1) return;
                        this.done.push(elem);
                        var player = elem.data || elem.src;
                        if (!player) return;
                        var i, find, replace = false;
                        for (i in this.rules) {
                            find = this.rules[i]['find'];
                            if (find.test(player)) {
                                replace = this.rules[i]['replace'];
                                if ('function' === typeof this.rules[i]['preHandle']) {
                                    this.rules[i]['preHandle'].bind(this, elem, find, replace, player)();
                                } else {
                                    this.reallyReplace.bind(this, elem, find, replace)();
                                }
                                break;
                            }
                        }
                    },
                    reallyReplace: function (elem, find, replace) {
                        elem.data && (elem.data = elem.data.replace(find, replace)) || elem.src && ((elem
                            .src = elem.src.replace(find, replace)) && (elem.style.display =
                            'block'));
                        var b = elem.querySelector("param[name='movie']");
                        this.reloadPlugin(elem);
                    },
                    reloadPlugin: function (elem) {
                        var nextSibling = elem.nextSibling;
                        var parentNode = elem.parentNode;
                        parentNode.removeChild(elem);
                        var newElem = elem.cloneNode(true);
                        this.done.push(newElem);
                        if (nextSibling) {
                            parentNode.insertBefore(newElem, nextSibling);
                        } else {
                            parentNode.appendChild(newElem);
                        }
                    },
                    init: function () {
                        var handler = this.animationsHandler.bind(this);
                        document.body.addEventListener('webkitAnimationStart', handler, false);
                        document.body.addEventListener('msAnimationStart', handler, false);
                        document.body.addEventListener('oAnimationStart', handler, false);
                        document.body.addEventListener('animationstart', handler, false);
                        this.addAnimations();
                    }
                };
                new A().init();
            })();
        }
        //remove baidu search ad
        if (document.URL.indexOf('www.baidu.com') >= 0) {
            if (document && document.getElementsByTagName && document.getElementById && document.body) {
                var aa = function () {
                    var all = document.body.querySelectorAll("#content_left div,#content_left table");
                    for (var i = 0; i < all.length; i++) {
                        if (/display:\s?(table|block)\s!important/.test(all[i].getAttribute("style"))) {
                            all[i].style.display = "none";
                            all[i].style.visibility = 'hidden';
                        }
                    }
                    all = document.body.querySelectorAll('.result.c-container[id="1"]');
                    //if(all.length == 1) return;
                    for (var i = 0; i < all.length; i++) {
                        if (all[i].innerHTML && all[i].innerHTML.indexOf('广告') > -1) {
                            all[i].style.display = "none";
                            all[i].style.visibility = 'hidden';
                        }
                    }
                }
                aa();
                document.getElementById('wrapper_wrapper').addEventListener('DOMSubtreeModified', aa)
            };
        }
        //remove sohu video ad
        if (document.URL.indexOf("tv.sohu.com") >= 0) {
            if (document.cookie.indexOf("fee_status=true") == -1) {
                document.cookie = 'fee_status=true'
            };
        }
        //remove 56.com video ad
        if (document.URL.indexOf("56.com") >= 0) {
            if (document.cookie.indexOf("fee_status=true") == -1) {
                document.cookie = 'fee_status=true'
            };
        }
        //fore iqiyi enable html5 player function
        if (document.URL.indexOf("iqiyi.com") >= 0) {
            if (document.cookie.indexOf("player_forcedType=h5_VOD") == -1) {
                document.cookie = 'player_forcedType=h5_VOD'
                if (localStorage.reloadTime && Date.now() - parseInt(localStorage.reloadTime) < 60000) {
                    console.log('no reload')
                } else {
                    location.reload()
                    localStorage.reloadTime = Date.now();
                }
            }
        }
    </script>
    <style type="text/css">
        object,
        embed {
            -webkit-animation-duration: .001s;
            -webkit-animation-name: playerInserted;
            -ms-animation-duration: .001s;
            -ms-animation-name: playerInserted;
            -o-animation-duration: .001s;
            -o-animation-name: playerInserted;
            animation-duration: .001s;
            animation-name: playerInserted;
        }

        @-webkit-keyframes playerInserted {
            from {
                opacity: 0.99;
            }

            to {
                opacity: 1;
            }
        }

        @-ms-keyframes playerInserted {
            from {
                opacity: 0.99;
            }

            to {
                opacity: 1;
            }
        }

        @-o-keyframes playerInserted {
            from {
                opacity: 0.99;
            }

            to {
                opacity: 1;
            }
        }

        @keyframes playerInserted {
            from {
                opacity: 0.99;
            }

            to {
                opacity: 1;
            }
        }
    </style>
</head>

<body>
    


    <div class="warpper">

        <div class="page-toc">
            <ul>
                <li><a href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t01.%20redux-saga">1.
                        redux-saga</a></li>
                <li><a
                        href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t12.%20redux-saga%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86">2.
                        redux-saga工作原理</a></li>
                <li><a
                        href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t23.%20redux-saga%E5%88%86%E7%B1%BB">3.
                        redux-saga分类</a></li>
                <li><a
                        href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t34.%20%E8%AE%A1%E6%95%B0%E5%99%A8">4.
                        计数器</a>
                    <ul>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t44.1%20index.js">4.1
                                index.js</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t54.2%20sagas.js">4.2
                                sagas.js</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t64.3%20Counter.js">4.3
                                Counter.js</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t74.4%20index.js">4.4
                                index.js</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t84.5%20actions.js">4.5
                                actions.js</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t94.6%20action-types.js">4.6
                                action-types.js</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t104.7%20reducer.js">4.7
                                reducer.js</a></li>
                    </ul>
                </li>
                <li><a
                        href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t115.%20%E5%AE%9E%E7%8E%B0take">5.
                        实现take</a>
                    <ul>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t125.1%20index.js">5.1
                                index.js</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t135.2%20effects.js">5.2
                                effects.js</a></li>
                    </ul>
                </li>
                <li><a
                        href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t146.%E6%94%AF%E6%8C%81%E4%BA%A7%E5%87%BAterator">6.支持产出terator</a>
                    <ul>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t156.1%20Symbol.iterator">6.1
                                Symbol.iterator</a>
                            <ul>
                                <li><a
                                        href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t166.1.1%20arr">6.1.1
                                        arr</a></li>
                                <li><a
                                        href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t176.1.2%20%E5%AF%B9%E8%B1%A1">6.1.2
                                        对象</a></li>
                            </ul>
                        </li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t186.2%20saga.js">6.2
                                saga.js</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t196.2%20redux-saga/index.js">6.2
                                redux-saga/index.js</a></li>
                    </ul>
                </li>
                <li><a
                        href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t207.%20%E6%94%AF%E6%8C%81takeEvery">7.
                        支持takeEvery</a>
                    <ul>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t217.1%20saga.js">7.1
                                saga.js</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t227.2%20effects.js">7.2
                                effects.js</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t237.3%20redux-saga/index.js">7.3
                                redux-saga/index.js</a></li>
                    </ul>
                </li>
                <li><a
                        href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t248.%20%E6%94%AF%E6%8C%81promise">8.
                        支持promise</a>
                    <ul>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t258.1%20saga.js">8.1
                                saga.js</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t268.2%20redux-saga/index.js">8.2
                                redux-saga/index.js</a></li>
                    </ul>
                </li>
                <li><a
                        href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t279.%20%E6%94%AF%E6%8C%81%20call">9.
                        支持 call</a>
                    <ul>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t289.1%20sagas.js">9.1
                                sagas.js</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t299.2%20effects.js">9.2
                                effects.js</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t309.3%20saga.js">9.3
                                saga.js</a></li>
                    </ul>
                </li>
                <li><a
                        href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t3110.%20%E6%94%AF%E6%8C%81%20delay">10.
                        支持 delay</a>
                    <ul>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t3210.1%20sagas.js">10.1
                                sagas.js</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t3310.2%20effects.js">10.2
                                effects.js</a></li>
                    </ul>
                </li>
                <li><a
                        href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t3411.%20%E6%94%AF%E6%8C%81%20cps">11.
                        支持 cps</a>
                    <ul>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t3511.1%20sagas.js">11.1
                                sagas.js</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t3611.2%20effects.js">11.2
                                effects.js</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t3711.3%20saga.js">11.3
                                saga.js</a></li>
                    </ul>
                </li>
                <li><a
                        href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t3812.%20%E6%94%AF%E6%8C%81all">12.
                        支持all</a>
                    <ul>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t3912.1%20saga">12.1
                                saga</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t4012.2%20effects">12.2
                                effects</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t4112.3%20redux-saga/index.js">12.3
                                redux-saga/index.js</a></li>
                    </ul>
                </li>
                <li><a
                        href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t4213.%20%E5%8F%96%E6%B6%88%E4%BB%BB%E5%8A%A1">13.
                        取消任务</a>
                    <ul>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t4313.1%20saga">13.1
                                saga</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t4413.2%20Counter.js">13.2
                                Counter.js</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t4513.3%20effects.js">13.3
                                effects.js</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t4613.4%20index.js">13.4
                                index.js</a></li>
                    </ul>
                </li>
                <li><a
                        href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t4714.%20%E8%B5%84%E6%BA%90">14.
                        资源</a></li>
            </ul>
        </div>

        <div class="content markdown-body">
            <h2 id="t01. redux-saga">1. redux-saga <a
                    href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t01.%20redux-saga"> #
                </a></h2>
            <ul>
                <li><a href="https://redux-saga-in-chinese.js.org/">redux-saga</a> 是一个 redux 的中间件，而中间件的作用是为 redux
                    提供额外的功能。</li>
                <li>在 reducers 中的所有操作都是同步的并且是纯粹的，即 reducer 都是纯函数，纯函数是指一个函数的返回结果只依赖于它的参数，并且在执行过程中不会对外部产生副作用，即给它传什么，就吐出什么。
                </li>
                <li>但是在实际的应用开发中，我们希望做一些异步的（如Ajax请求）且不纯粹的操作（如改变外部的状态），这些在函数式编程范式中被称为“副作用”。</li>
            </ul>
            <blockquote>
                <p>redux-saga 就是用来处理上述副作用（异步任务）的一个中间件。它是一个接收事件，并可能触发新事件的过程管理者，为你的应用管理复杂的流程。</p>
            </blockquote>
            <h2 id="t12. redux-saga工作原理">2. redux-saga工作原理 <a
                    href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t12.%20redux-saga%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86">
                    # </a></h2>
            <ul>
                <li>sages 采用 Generator 函数来 yield Effects（包含指令的文本对象）</li>
                <li>Generator 函数的作用是可以暂停执行，再次执行的时候从上次暂停的地方继续执行</li>
                <li>Effect 是一个简单的对象，该对象包含了一些给 middleware 解释执行的信息。</li>
                <li>你可以通过使用 effects API 如 fork，call，take，put，cancel 等来创建 Effect。 </li>
            </ul>
            <h2 id="t23. redux-saga分类">3. redux-saga分类 <a
                    href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t23.%20redux-saga%E5%88%86%E7%B1%BB">
                    # </a></h2>
            <ul>
                <li>worker saga 做左右的工作，如调用API，进行异步请求，获取异步封装结果</li>
                <li>watcher saga 监听被dispatch的actions,当接受到action或者知道其被触发时，调用worker执行任务</li>
                <li>root saga 立即启动saga的唯一入口</li>
            </ul>
            <h2 id="t34. 计数器">4. 计数器 <a
                    href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t34.%20%E8%AE%A1%E6%95%B0%E5%99%A8">
                    # </a></h2>
            <h3 id="t44.1 index.js">4.1 index.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t44.1%20index.js"> #
                </a></h3>
            <p>src/index.js</p>
            <pre><code class="lang-js"><span class="hljs-keyword">import</span> React <span class="hljs-keyword">from</span> <span class="hljs-string">'react'</span>
<span class="hljs-keyword">import</span> ReactDOM <span class="hljs-keyword">from</span> <span class="hljs-string">'react-dom'</span>;
<span class="hljs-keyword">import</span> Counter <span class="hljs-keyword">from</span> <span class="hljs-string">'./components/Counter'</span>;
<span class="hljs-keyword">import</span> {Provider} <span class="hljs-keyword">from</span> <span class="hljs-string">'react-redux'</span>;
<span class="hljs-keyword">import</span> store <span class="hljs-keyword">from</span> <span class="hljs-string">'./store'</span>;
ReactDOM.render(<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Provider</span> <span class="hljs-attr">store</span>=<span class="hljs-string">{store}</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">Counter</span>/&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">Provider</span>&gt;</span></span>,<span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">'#root'</span>));
</code></pre>
            <h3 id="t54.2 sagas.js">4.2 sagas.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t54.2%20sagas.js"> #
                </a></h3>
            <p>src/sagas.js</p>
            <pre><code class="lang-js"><span class="hljs-keyword">import</span> {put,take} <span class="hljs-keyword">from</span> <span class="hljs-string">'redux-saga/effects'</span>;
<span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> types <span class="hljs-keyword">from</span> <span class="hljs-string">'./store/action-types'</span>;

<span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span>* <span class="hljs-title">rootSaga</span>(<span class="hljs-params"></span>) </span>{
    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">3</span>;i++){
        <span class="hljs-keyword">yield</span> take(types.INCREMENT_ASYNC);
        <span class="hljs-keyword">yield</span> put({<span class="hljs-attr">type</span>:types.INCREMENT});
    }
    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'已经达到最大值'</span>);
}
</code></pre>
            <h3 id="t64.3 Counter.js">4.3 Counter.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t64.3%20Counter.js"> #
                </a></h3>
            <p>src/components/Counter.js</p>
            <pre><code class="lang-js"><span class="hljs-keyword">import</span> React,{Component} <span class="hljs-keyword">from</span> <span class="hljs-string">'react'</span>
<span class="hljs-keyword">import</span> {connect} <span class="hljs-keyword">from</span> <span class="hljs-string">'react-redux'</span>;
<span class="hljs-keyword">import</span> actions <span class="hljs-keyword">from</span> <span class="hljs-string">'../store/action'</span>;
<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Counter</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Component</span></span>{
    render() {
        <span class="hljs-keyword">return</span> (
            <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>
                <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>{this.props.number}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>
                <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">{this.props.increment}</span>&gt;</span>+<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>
      )
  }
}
<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> connect(
    <span class="hljs-function"><span class="hljs-params">state</span> =&gt;</span> state,
    actions
)(Counter);
</code></pre>
            <h3 id="t74.4 index.js">4.4 index.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t74.4%20index.js"> #
                </a></h3>
            <p>src/store/index.js</p>
            <pre><code class="lang-js"><span class="hljs-keyword">import</span> {createStore, applyMiddleware} <span class="hljs-keyword">from</span> <span class="hljs-string">'redux'</span>;
<span class="hljs-keyword">import</span> reducer <span class="hljs-keyword">from</span> <span class="hljs-string">'./reducer'</span>;
<span class="hljs-keyword">import</span> createSagaMiddleware <span class="hljs-keyword">from</span> <span class="hljs-string">'redux-saga'</span>;
<span class="hljs-keyword">import</span> {rootSaga} <span class="hljs-keyword">from</span> <span class="hljs-string">'../saga'</span>;
<span class="hljs-keyword">let</span> sagaMiddleware=createSagaMiddleware();
<span class="hljs-keyword">let</span> store=applyMiddleware(sagaMiddleware)(createStore)(reducer);
sagaMiddleware.run(rootSaga);
<span class="hljs-built_in">window</span>.store=store;
<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> store;
</code></pre>
            <h3 id="t84.5 actions.js">4.5 actions.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t84.5%20actions.js"> #
                </a></h3>
            <p>src/store/actions.js</p>
            <pre><code class="lang-js"><span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> types <span class="hljs-keyword">from</span> <span class="hljs-string">'./action-types'</span>;
<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {
    increment() {
        <span class="hljs-keyword">return</span> {<span class="hljs-attr">type</span>:types.INCREMENT_ASYNC}
    }
}
</code></pre>
            <h3 id="t94.6 action-types.js">4.6 action-types.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t94.6%20action-types.js">
                    # </a></h3>
            <p>src/store/action-types.js</p>
            <pre><code class="lang-js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> INCREMENT_ASYNC=<span class="hljs-string">'INCREMENT_ASYNC'</span>;
<span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> INCREMENT=<span class="hljs-string">'INCREMENT'</span>;
</code></pre>
            <h3 id="t104.7 reducer.js">4.7 reducer.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t104.7%20reducer.js">
                    # </a></h3>
            <p>rc/store/reducer.js</p>
            <pre><code class="lang-js"><span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> types <span class="hljs-keyword">from</span> <span class="hljs-string">'./action-types'</span>;
<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">state={number:<span class="hljs-number">0</span>},action</span>) </span>{
    <span class="hljs-keyword">switch</span>(action.type){
        <span class="hljs-keyword">case</span> types.INCREMENT:
            <span class="hljs-keyword">return</span> {<span class="hljs-attr">number</span>: state.number+<span class="hljs-number">1</span>};
        <span class="hljs-keyword">default</span>:
            <span class="hljs-keyword">return</span> state;
    }
}
</code></pre>
            <h2 id="t115. 实现take">5. 实现take <a
                    href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t115.%20%E5%AE%9E%E7%8E%B0take">
                    # </a></h2>
            <ul>
                <li><a
                        href="https://github.com/redux-saga/redux-saga/blob/master/packages/core/src/internal/runSaga.js">runSaga.js</a>
                    <h3 id="t125.1 index.js">5.1 index.js <a
                            href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t125.1%20index.js">
                            # </a></h3>
                    redux-saga/index.js
                    <pre><code class="lang-js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">createSagaMiddleware</span>(<span class="hljs-params"></span>) </span>{
  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">createChannel</span>(<span class="hljs-params"></span>) </span>{
      <span class="hljs-keyword">let</span> listener={};
      <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">subscribe</span>(<span class="hljs-params">actionType,cb</span>) </span>{
          listener[actionType]=cb;
      }
      <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">publish</span>(<span class="hljs-params">action</span>) </span>{
          <span class="hljs-keyword">if</span> (listener[action.type]) {
              <span class="hljs-keyword">let</span> temp=listener[action.type];
              <span class="hljs-keyword">delete</span> listener[action.type];
              temp(action);
          }
      }
      <span class="hljs-keyword">return</span> {subscribe,publish}
  }
  <span class="hljs-keyword">let</span> channel=createChannel();
  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">sagaMiddleware</span>(<span class="hljs-params">{getState,dispatch}</span>) </span>{
      <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">run</span>(<span class="hljs-params">generator</span>) </span>{
          <span class="hljs-keyword">let</span> it=generator();
          <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">next</span>(<span class="hljs-params">action</span>) </span>{
              <span class="hljs-keyword">let</span> {<span class="hljs-attr">value</span>:effect,done} = it.next(action);
              <span class="hljs-keyword">if</span> (!done) {
                  <span class="hljs-keyword">switch</span> (effect.type) {
                      <span class="hljs-keyword">case</span> <span class="hljs-string">'TAKE'</span>:
                          channel.subscribe(effect.actionType,next);
                          <span class="hljs-keyword">break</span>;
                      <span class="hljs-keyword">case</span> <span class="hljs-string">'PUT'</span>:
                          dispatch(effect.action);
                          next();
                          <span class="hljs-keyword">break</span>;
                      <span class="hljs-keyword">default</span>:
                  }
              }
          }
          next();
      }
      sagaMiddleware.run=run;
      <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">next</span>) </span>{
          <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">action</span>) </span>{
              channel.publish(action);
              next(action);
          }
      }
  }
  <span class="hljs-keyword">return</span> sagaMiddleware;
}
</code></pre>
                </li>
            </ul>
            <h3 id="t135.2 effects.js">5.2 effects.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t135.2%20effects.js">
                    # </a></h3>
            <p>src\redux-saga\effects.js</p>
            <pre><code class="lang-js"><span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">take</span>(<span class="hljs-params">actionType</span>) </span>{
    <span class="hljs-keyword">return</span> {
        <span class="hljs-attr">type</span>:<span class="hljs-string">'take'</span>,
        actionType
    }
}

<span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">put</span>(<span class="hljs-params">action</span>) </span>{
    <span class="hljs-keyword">return</span> {
        <span class="hljs-attr">type</span>: <span class="hljs-string">'put'</span>,
        action
    }
}
</code></pre>
            <h2 id="t146.支持产出terator">6.支持产出terator <a
                    href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t146.%E6%94%AF%E6%8C%81%E4%BA%A7%E5%87%BAterator">
                    # </a></h2>
            <h3 id="t156.1 Symbol.iterator">6.1 Symbol.iterator <a
                    href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t156.1%20Symbol.iterator">
                    # </a></h3>
            <p>遍历器（Iterator）就是这样一种机制。它是一种接口，为各种不同的数据结构提供统一的访问机制。任何数据结构只要部署 Iterator 接口，就可以完成遍历操作（即依次处理该数据结构的所有成员）。
                Iterator 的作用有三个：</p>
            <ul>
                <li>一是为各种数据结构，提供一个统一的、简便的访问接口</li>
                <li>二是使得数据结构的成员能够按某种次序排列</li>
                <li>三是 ES6 创造了一种新的遍历命令for...of循环，Iterator 接口主要供for...of消费</li>
            </ul>
            <p>原生具备 Iterator 接口的数据结构如下。</p>
            <ul>
                <li>Array</li>
                <li>Map</li>
                <li>Set</li>
                <li>String</li>
                <li>TypedArray</li>
                <li>函数的 arguments 对象</li>
                <li>NodeList 对象</li>
            </ul>
            <h4 id="t166.1.1 arr">6.1.1 arr <a
                    href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t166.1.1%20arr"> #
                </a></h4>
            <pre><code class="lang-js"><span class="hljs-keyword">var</span> arr = [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>];
<span class="hljs-keyword">let</span> iterator = arr[<span class="hljs-built_in">Symbol</span>.iterator]();
<span class="hljs-built_in">console</span>.log(iterator.next());  <span class="hljs-comment">//{ value: 1, done: false }</span>
<span class="hljs-built_in">console</span>.log(iterator.next());  <span class="hljs-comment">//{ value: 2, done: false }</span>
<span class="hljs-built_in">console</span>.log(iterator.next());  <span class="hljs-comment">//{ value: undefined, done: true }</span>
</code></pre>
            <h4 id="t176.1.2 对象">6.1.2 对象 <a
                    href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t176.1.2%20%E5%AF%B9%E8%B1%A1">
                    # </a></h4>
            <pre><code class="lang-js"><span class="hljs-keyword">let</span> obj = {
    <span class="hljs-attr">name</span>:<span class="hljs-string">'zhufeng'</span>,
    <span class="hljs-attr">age</span>:<span class="hljs-number">10</span>,
    [<span class="hljs-built_in">Symbol</span>.iterator]() {
        <span class="hljs-keyword">const</span> self = <span class="hljs-keyword">this</span>;
        <span class="hljs-keyword">let</span> values = <span class="hljs-built_in">Object</span>.values(self);
        <span class="hljs-keyword">let</span> index = <span class="hljs-number">0</span>;
        <span class="hljs-keyword">return</span> {
            next() {
                <span class="hljs-keyword">return</span> {<span class="hljs-attr">value</span>:values[index++],<span class="hljs-attr">done</span>:index&gt;values.length?<span class="hljs-literal">true</span>:<span class="hljs-literal">false</span>};
            }
        };
    }
}
<span class="hljs-keyword">let</span> iterator = obj[<span class="hljs-built_in">Symbol</span>.iterator]();
<span class="hljs-built_in">console</span>.log(iterator.next());  <span class="hljs-comment">//{ value: 1, done: false }</span>
<span class="hljs-built_in">console</span>.log(iterator.next());  <span class="hljs-comment">//{ value: 2, done: false }</span>
<span class="hljs-built_in">console</span>.log(iterator.next());  <span class="hljs-comment">//{ value: undefined, done: true }</span>
</code></pre>
            <h3 id="t186.2 saga.js">6.2 saga.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t186.2%20saga.js"> #
                </a></h3>
            <pre><code class="lang-diff">import {put,take} from '../redux-saga/effects';
import * as types from './action-types';

<span class="hljs-addition">+export function* increment() {</span>
<span class="hljs-addition">+    yield put({type:types.INCREMENT});</span>
<span class="hljs-addition">+}</span>

export function* rootSaga() {
    for (let i=0;i&lt;3;i++){
        yield take(types.INCREMENT_ASYNC);
<span class="hljs-addition">+        yield increment();</span>
    }
    console.log('已经达到最大值');
}
</code></pre>
            <h3 id="t196.2 redux-saga/index.js">6.2 redux-saga/index.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t196.2%20redux-saga/index.js">
                    # </a></h3>
            <pre><code class="lang-diff">export default function createSagaMiddleware() {
    function createChannel() {
        let listener={};
        function subscribe(actionType,cb) {
            listener[actionType]=cb;
        }
        function publish(action) {
            if (listener[action.type]) {
                let temp=listener[action.type];
                delete listener[action.type];
                temp(action);
            }
        }
        return {subscribe,publish};
    }
    let channel=createChannel();
    function sagaMiddleware({getState,dispatch}) {
        function run(generator) {
<span class="hljs-addition">+            let it= typeof generator == 'function'? generator():generator;</span>
            function next(action) {
                let {value:effect,done} = it.next(action);
                if (!done) {
<span class="hljs-addition">+                    if (typeof effect[Symbol.iterator]=='function') {</span>
<span class="hljs-addition">+                        run(effect);</span>
<span class="hljs-addition">+                        next();</span>
<span class="hljs-addition">+                    } else {</span>
                        switch (effect.type) {
                            case 'TAKE':
                                channel.subscribe(effect.actionType,next);
                                break;
                            case 'PUT':
                                dispatch(effect.action);
                                next();
                                break;
                            default:
                        }
                    }
                }
            }
            next();
        }
        sagaMiddleware.run=run;
        return function (next) {
            return function (action) {
                channel.publish(action);
                next(action);
            }
        }
    }
    return sagaMiddleware;
}
</code></pre>
            <h2 id="t207. 支持takeEvery">7. 支持takeEvery <a
                    href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t207.%20%E6%94%AF%E6%8C%81takeEvery">
                    # </a></h2>
            <ul>
                <li>一个 task 就像是一个在后台运行的进程，在基于redux-saga的应用程序中，可以同时运行多个task</li>
                <li>通过 fork 函数来创建 task
                    <pre><code class="lang-js"><span class="hljs-keyword">const</span> task = <span class="hljs-keyword">yield</span> fork(otherSaga, ...args)
</code></pre>
                    <h3 id="t217.1 saga.js">7.1 saga.js <a
                            href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t217.1%20saga.js">
                            # </a></h3>
                    <code>`</code>diff
                    import {put,takeEvery} from '../redux-saga/effects';
                    import <em> as types from './action-types';
                        export function</em> increment() {
                    yield put({type:types.INCREMENT});
                    }</li>
            </ul>
            <p>export function* rootSaga() {</p>
            <ul>
                <li>yield takeEvery(types.INCREMENT_ASYNC,increment);
                    }
                    <code>`</code></li>
            </ul>
            <h3 id="t227.2 effects.js">7.2 effects.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t227.2%20effects.js">
                    # </a></h3>
            <p>src\redux-saga\effects.js</p>
            <pre><code class="lang-js"><span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">take</span>(<span class="hljs-params">actionType</span>) </span>{
    <span class="hljs-keyword">return</span> {
        <span class="hljs-attr">type</span>:<span class="hljs-string">'TAKE'</span>,
        actionType
    }
}

<span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">put</span>(<span class="hljs-params">action</span>) </span>{
    <span class="hljs-keyword">return</span> {
        <span class="hljs-attr">type</span>: <span class="hljs-string">'PUT'</span>,
        action
    }
}

<span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fork</span>(<span class="hljs-params">task</span>) </span>{
    <span class="hljs-keyword">return</span> {
        <span class="hljs-attr">type</span>: <span class="hljs-string">'FORK'</span>,
        task
    }
}

<span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span>* <span class="hljs-title">takeEvery</span>(<span class="hljs-params">actionType,task</span>) </span>{
    <span class="hljs-keyword">yield</span> fork(<span class="hljs-function"><span class="hljs-keyword">function</span>* (<span class="hljs-params"></span>) </span>{
        <span class="hljs-keyword">while</span> (<span class="hljs-literal">true</span>) {
            <span class="hljs-keyword">yield</span> take(actionType);
            <span class="hljs-keyword">yield</span> task();
        }
    });
}
</code></pre>
            <h3 id="t237.3 redux-saga/index.js">7.3 redux-saga/index.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t237.3%20redux-saga/index.js">
                    # </a></h3>
            <pre><code class="lang-diff">                        switch (effect.type) {
                            case 'TAKE':
                                channel.subscribe(effect.actionType,next);
                                break;
                            case 'PUT':
                                dispatch(effect.action);
                                next();
                                break;
<span class="hljs-addition">+                            case 'FORK':</span>
<span class="hljs-addition">+                                run(effect.task);</span>
<span class="hljs-addition">+                                next();    </span>
<span class="hljs-addition">+                                break;</span>
                            default:
                                break;
                        }
</code></pre>
            <h2 id="t248. 支持promise">8. 支持promise <a
                    href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t248.%20%E6%94%AF%E6%8C%81promise">
                    # </a></h2>
            <h3 id="t258.1 saga.js">8.1 saga.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t258.1%20saga.js"> #
                </a></h3>
            <pre><code class="lang-diff">import {put,takeEvery} from '../redux-saga/effects';
import * as types from './action-types';
<span class="hljs-addition">+const delay=ms =&gt; new Promise((resolve,reject) =&gt; {</span>
<span class="hljs-addition">+    setTimeout(() =&gt; {</span>
<span class="hljs-addition">+        resolve();</span>
<span class="hljs-addition">+    },ms);</span>
<span class="hljs-addition">+});</span>
export function* increment() {
<span class="hljs-addition">+    yield delay(1000);</span>
    yield put({type:types.INCREMENT});
}

export function* rootSaga() {
    yield takeEvery(types.INCREMENT_ASYNC,increment);
}
</code></pre>
            <h3 id="t268.2 redux-saga/index.js">8.2 redux-saga/index.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t268.2%20redux-saga/index.js">
                    # </a></h3>
            <pre><code class="lang-diff">function next(action) {
                let {value:effect,done} = it.next(action);
                if (!done) {
                    if (typeof effect[Symbol.iterator]=='function') {
                        run(effect);
                        next();
<span class="hljs-addition">+                    } else if(effect.then){</span>
<span class="hljs-addition">+                        effect.then(next);</span>
<span class="hljs-addition">+                    }else {</span>
                        switch (effect.type) {
                            case 'TAKE':
                                channel.subscribe(effect.actionType,next);
                                break;
</code></pre>
            <h2 id="t279. 支持 call">9. 支持 call <a
                    href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t279.%20%E6%94%AF%E6%8C%81%20call">
                    # </a></h2>
            <h3 id="t289.1 sagas.js">9.1 sagas.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t289.1%20sagas.js"> #
                </a></h3>
            <pre><code class="lang-js"><span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span>* <span class="hljs-title">increment</span>(<span class="hljs-params"></span>) </span>{
    <span class="hljs-comment">//yield delay(1000);</span>
    <span class="hljs-keyword">yield</span> call(delay,<span class="hljs-number">1000</span>);
    <span class="hljs-keyword">yield</span> put({<span class="hljs-attr">type</span>:types.INCREMENT});
}
</code></pre>
            <h3 id="t299.2 effects.js">9.2 effects.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t299.2%20effects.js">
                    # </a></h3>
            <pre><code class="lang-js"><span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">call</span>(<span class="hljs-params">fn,...args</span>) </span>{
    <span class="hljs-keyword">return</span> {
        <span class="hljs-attr">type</span>: <span class="hljs-string">'CALL'</span>,
        fn,
        args
    }
}
</code></pre>
            <h3 id="t309.3 saga.js">9.3 saga.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t309.3%20saga.js"> #
                </a></h3>
            <pre><code class="lang-js">    <span class="hljs-keyword">case</span> <span class="hljs-string">'CALL'</span>:
        effect.fn(...effect.args).then(next);
    <span class="hljs-keyword">break</span>;
</code></pre>
            <h2 id="t3110. 支持 delay">10. 支持 delay <a
                    href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t3110.%20%E6%94%AF%E6%8C%81%20delay">
                    # </a></h2>
            <h3 id="t3210.1 sagas.js">10.1 sagas.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t3210.1%20sagas.js"> #
                </a></h3>
            <pre><code class="lang-diff"><span class="hljs-addition">+import {put,takeEvery,delay} from '../redux-saga/effects';</span>
import * as types from './action-types';

export function* increment() {
<span class="hljs-addition">+    yield delay(1000);</span>
    yield put({type:types.INCREMENT});
}

export function* rootSaga() {
    yield takeEvery(types.INCREMENT_ASYNC,increment);
}
</code></pre>
            <h3 id="t3310.2 effects.js">10.2 effects.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t3310.2%20effects.js">
                    # </a></h3>
            <pre><code class="lang-js"><span class="hljs-keyword">const</span> innerDelay=<span class="hljs-function"><span class="hljs-params">ms</span> =&gt;</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve,reject</span>) =&gt;</span> {
    setTimeout(<span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> {
        resolve();
    },ms);
});
<span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">delay</span>(<span class="hljs-params">...args</span>) </span>{
    <span class="hljs-keyword">return</span> call(innerDelay,...args);
}
</code></pre>
            <h2 id="t3411. 支持 cps">11. 支持 cps <a
                    href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t3411.%20%E6%94%AF%E6%8C%81%20cps">
                    # </a></h2>
            <h3 id="t3511.1 sagas.js">11.1 sagas.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t3511.1%20sagas.js"> #
                </a></h3>
            <pre><code class="lang-diff">import {put,takeEvery,call,cps} from '../redux-saga/effects';
import * as types from './action-types';

<span class="hljs-addition">+const delay = (ms,callback)=&gt;{</span>
<span class="hljs-addition">+    setTimeout(() =&gt; {</span>
<span class="hljs-addition">+        callback('ok');</span>
<span class="hljs-addition">+    },ms);</span>
<span class="hljs-addition">+}</span>

<span class="hljs-addition">+export function* increment() {</span>
<span class="hljs-addition">+    let data = yield cps(delay,1000);</span>
<span class="hljs-addition">+    console.log(data);</span>
<span class="hljs-addition">+    yield put({type:types.INCREMENT});</span>
<span class="hljs-addition">+}</span>

export function* rootSaga() {
    yield takeEvery(types.INCREMENT_ASYNC,increment);
}
</code></pre>
            <h3 id="t3611.2 effects.js">11.2 effects.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t3611.2%20effects.js">
                    # </a></h3>
            <pre><code class="lang-js"><span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">cps</span>(<span class="hljs-params">fn,...args</span>) </span>{
    <span class="hljs-keyword">return</span> {
        <span class="hljs-attr">type</span>: <span class="hljs-string">'CPS'</span>,
        fn,
        args
    }
}
</code></pre>
            <h3 id="t3711.3 saga.js">11.3 saga.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t3711.3%20saga.js"> #
                </a></h3>
            <pre><code class="lang-js">    <span class="hljs-keyword">case</span> <span class="hljs-string">'CALL'</span>:
        effect.fn(...effect.args).then(next);    
        <span class="hljs-keyword">break</span>;
+    <span class="hljs-keyword">case</span> <span class="hljs-string">'CPS'</span>:
+        effect.fn(...effect.args,next);
+        <span class="hljs-keyword">break</span>;
    <span class="hljs-keyword">default</span>:
        <span class="hljs-keyword">break</span>;
</code></pre>
            <h2 id="t3812. 支持all">12. 支持all <a
                    href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t3812.%20%E6%94%AF%E6%8C%81all">
                    # </a></h2>
            <h3 id="t3912.1 saga">12.1 saga <a
                    href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t3912.1%20saga"> #
                </a></h3>
            <p>src\store\saga.js</p>
            <pre><code class="lang-js"><span class="hljs-keyword">import</span> {put,takeEvery,delay,all} <span class="hljs-keyword">from</span> <span class="hljs-string">'../redux-saga/effects'</span>;
<span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> types <span class="hljs-keyword">from</span> <span class="hljs-string">'./action-types'</span>;

<span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span>* <span class="hljs-title">increment</span>(<span class="hljs-params"></span>) </span>{
    <span class="hljs-keyword">yield</span> delay(<span class="hljs-number">1000</span>);
    <span class="hljs-keyword">yield</span> put({<span class="hljs-attr">type</span>:types.INCREMENT});
}
<span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span>* <span class="hljs-title">incrementWatcher</span>(<span class="hljs-params"></span>) </span>{
    <span class="hljs-keyword">yield</span> takeEvery(types.INCREMENT_ASYNC,increment);
}
<span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span>* <span class="hljs-title">logger</span>(<span class="hljs-params"></span>) </span>{
    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'action'</span>);
}
<span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span>* <span class="hljs-title">loggerWatcher</span>(<span class="hljs-params"></span>) </span>{
    <span class="hljs-keyword">yield</span> takeEvery(types.INCREMENT_ASYNC,logger);
}

<span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span>* <span class="hljs-title">rootSaga</span>(<span class="hljs-params"></span>) </span>{
    <span class="hljs-keyword">yield</span> all([incrementWatcher(),loggerWatcher()]);
    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'done'</span>);
}
</code></pre>
            <h3 id="t4012.2 effects">12.2 effects <a
                    href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t4012.2%20effects"> #
                </a></h3>
            <pre><code class="lang-js"><span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">all</span>(<span class="hljs-params">fns</span>) </span>{
    <span class="hljs-keyword">return</span> {
        <span class="hljs-attr">type</span>: <span class="hljs-string">'ALL'</span>,
        fns
    }
}
</code></pre>
            <h3 id="t4112.3 redux-saga/index.js">12.3 redux-saga/index.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t4112.3%20redux-saga/index.js">
                    # </a></h3>
            <pre><code class="lang-diff">export default function createSagaMiddleware() {
    function createChannel() {
        let listener={};
        function subscribe(actionType,cb) {
            listener[actionType]=cb;
        }
        function publish(action) {
            if (listener[action.type]) {
                let temp=listener[action.type];
                delete listener[action.type];
                temp(action);
            }
        }
        return {subscribe,publish};
    }
    let channel=createChannel();
<span class="hljs-addition">+    function times(cb,total) {</span>
<span class="hljs-addition">+        let count=0;</span>
<span class="hljs-addition">+        return function () {</span>
<span class="hljs-addition">+            if (++count === total) {</span>
<span class="hljs-addition">+                cb();</span>
<span class="hljs-addition">+            }</span>
<span class="hljs-addition">+        }</span>
<span class="hljs-addition">+    }</span>
    function sagaMiddleware({getState,dispatch}) {
<span class="hljs-addition">+        function run(generator,callback) {</span>
            let it= typeof generator == 'function'? generator():generator;
            function next(action) {
                let {value:effect,done} = it.next(action);
                if (!done) {
                    if (typeof effect[Symbol.iterator]=='function') {
                        run(effect);
                        next();
                    } else if(effect.then){
                        effect.then(next);
                    }else {
                        switch (effect.type) {
                            case 'TAKE':
                                channel.subscribe(effect.actionType,next);
                                break;
                            case 'PUT':
                                dispatch(effect.action);
                                next();
                                break;
                            case 'FORK':
                                run(effect.task);
                                next();    
                                break;
                            case 'CALL':
                                effect.fn(...effect.args).then(next);    
                                break;
<span class="hljs-addition">+                            case 'ALL':</span>
<span class="hljs-addition">+                                let fns=effect.fns;</span>
<span class="hljs-addition">+                                let done=times(next,fns.length);</span>
<span class="hljs-addition">+                                for (let i=0;i&lt;fns.length;i++){</span>
<span class="hljs-addition">+                                    let fn=fns[i];</span>
<span class="hljs-addition">+                                    run(fn,done);</span>
<span class="hljs-addition">+                                }</span>
<span class="hljs-addition">+                                break;    </span>
                            case 'CPS':
                                effect.fn(...effect.args,next);
                                break;
                            default:
                                break;
                        }
                    }
<span class="hljs-addition">+                } else {</span>
<span class="hljs-addition">+                    callback&amp;&amp;callback();</span>
<span class="hljs-addition">+                }</span>
            }
            next();
        }
        sagaMiddleware.run=run;
        return function (next) {
            return function (action) {
                channel.publish(action);
                next(action);
            }
        }
    }
    return sagaMiddleware;
}
</code></pre>
            <h2 id="t4213. 取消任务">13. 取消任务 <a
                    href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t4213.%20%E5%8F%96%E6%B6%88%E4%BB%BB%E5%8A%A1">
                    # </a></h2>
            <h3 id="t4313.1 saga">13.1 saga <a
                    href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t4313.1%20saga"> #
                </a></h3>
            <p>src\store\saga.js</p>
            <pre><code class="lang-js"><span class="hljs-keyword">import</span> {put,take,delay,all,fork,cancel} <span class="hljs-keyword">from</span> <span class="hljs-string">'../redux-saga/effects'</span>;
<span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> types <span class="hljs-keyword">from</span> <span class="hljs-string">'./action-types'</span>;

<span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span>* <span class="hljs-title">increment</span>(<span class="hljs-params"></span>) </span>{
    <span class="hljs-keyword">while</span>(<span class="hljs-literal">true</span>){
        <span class="hljs-keyword">yield</span> delay(<span class="hljs-number">1000</span>);
        <span class="hljs-keyword">yield</span> put({<span class="hljs-attr">type</span>:types.INCREMENT});
    }
}

<span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span>* <span class="hljs-title">incrementWatcher</span>(<span class="hljs-params"></span>) </span>{
    <span class="hljs-keyword">const</span> task = <span class="hljs-keyword">yield</span> fork(increment);
    <span class="hljs-keyword">yield</span> take(types.STOP_INCREMENT);
    <span class="hljs-keyword">yield</span> cancel(task);
}

<span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span>* <span class="hljs-title">rootSaga</span>(<span class="hljs-params"></span>) </span>{
    <span class="hljs-keyword">yield</span> all([incrementWatcher()]);
    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'done'</span>);
}
</code></pre>
            <h3 id="t4413.2 Counter.js">13.2 Counter.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t4413.2%20Counter.js">
                    # </a></h3>
            <p>src\components\Counter.js</p>
            <pre><code class="lang-js"><span class="hljs-keyword">import</span> React,{Component} <span class="hljs-keyword">from</span> <span class="hljs-string">'react'</span>
<span class="hljs-keyword">import</span> {connect} <span class="hljs-keyword">from</span> <span class="hljs-string">'react-redux'</span>;
<span class="hljs-keyword">import</span> actions <span class="hljs-keyword">from</span> <span class="hljs-string">'../store/action'</span>;
<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Counter</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Component</span></span>{
    render() {
        <span class="hljs-keyword">return</span> (
            <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>
                <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>{this.props.number}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>
                <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">{this.props.increment}</span>&gt;</span>+<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
                <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">{this.props.stop}</span>&gt;</span>stop<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>
      )
  }
}
<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> connect(
    <span class="hljs-function"><span class="hljs-params">state</span> =&gt;</span> state,
    actions
)(Counter);
</code></pre>
            <h3 id="t4513.3 effects.js">13.3 effects.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t4513.3%20effects.js">
                    # </a></h3>
            <p>src\redux-saga\effects.js</p>
            <pre><code class="lang-js"><span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">cancel</span>(<span class="hljs-params">task</span>) </span>{
    <span class="hljs-keyword">return</span> {
        <span class="hljs-attr">type</span>: <span class="hljs-string">'CANCEL'</span>,
        task
    }
}
</code></pre>
            <h3 id="t4613.4 index.js">13.4 index.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t4613.4%20index.js"> #
                </a></h3>
            <p>src\redux-saga\index.js</p>
            <pre><code class="lang-diff">function sagaMiddleware({getState,dispatch}) {
        function run(generator,callback) {
            let it= typeof generator == 'function'? generator():generator;
            function next(action) {
                let {value:effect,done} = it.next(action);
                if (!done) {
                    if (typeof effect[Symbol.iterator]=='function') {
                        run(effect);
                        next();
                    } else if(effect.then){
                        effect.then(next);
                    }else {
                        switch (effect.type) {
                            case 'TAKE':
                                channel.subscribe(effect.actionType,next);
                                break;
                            case 'PUT':
                                dispatch(effect.action);
                                next();
                                break;
<span class="hljs-addition">+                            case 'FORK':</span>
<span class="hljs-addition">+                                let newTask = effect.task();</span>
<span class="hljs-addition">+                                run(newTask);</span>
<span class="hljs-addition">+                                next(newTask);</span>
<span class="hljs-addition">+                                break;</span>
                            case 'CALL':
                                effect.fn(...effect.args).then(next);    
                                break;
                            case 'ALL':
                                let fns=effect.fns;
                                let done=times(next,fns.length);
                                for (let i=0;i&lt;fns.length;i++){
                                    let fn=fns[i];
                                    run(fn,done);
                                }
                                break;    
                            case 'CPS':
                                effect.fn(...effect.args,next);
                                break;
<span class="hljs-addition">+                            case 'CANCEL':</span>
<span class="hljs-addition">+                                effect.task.return('over');    </span>
<span class="hljs-addition">+                                break;</span>
                            default:
                                break;
                        }
                    }
                } else {
                    callback&amp;&amp;callback();
                }
            }
            next();
        }
        sagaMiddleware.run=run;
        return function (next) {
            return function (action) {
                channel.publish(action);
                next(action);
            }
        }
    }
</code></pre>
            <h2 id="t4714. 资源">14. 资源 <a
                    href="http://www.zhufengpeixun.cn/architecture/html/63.4.redux-saga-hand.html#t4714.%20%E8%B5%84%E6%BA%90">
                    # </a></h2>
            <ul>
                <li><a href="https://github.com/zalmoxisus/redux-devtools-extension">redux-devtools-extension</a></li>
                <li><a href="https://github.com/reactjs/react-router-redux">react-router-redux</a></li>
                <li><a href="https://github.com/redux-saga/redux-saga">redux-saga</a></li>
                <li><a href="https://gitee.com/zhufengpeixun/zhufeng-redux-saga2">zhufeng-redux-saga2</a></li>
                <li><a href="https://gitee.com/zhufengpeixun/zhufeng-saga2">zhufeng-saga2</a></li>
            </ul>

            <div class="copyright">Powered by <a href="https://github.com/jaywcjlove/idoc" target="_blank">idoc</a>.
                Dependence <a href="https://nodejs.org/">Node.js</a> run.</div>
        </div>

    </div>

    <script src="./63.4.redux-saga-hand_files/jquery.js"></script>
    <script>
        $('.warpper .page-toc ul ul li a').on('click', function () {
            $('.warpper .page-toc ul ul li a').removeClass('my-active')
            $(this).addClass('my-active')
        })

        $('.logo').on('mouseenter', function () {
            $('.nav').height('400px');
        })
        $('.nav').on('mouseleave', function () {
            $('.nav').height('80px');
        })
        $('.logo').on('click', function () {
            $('.nav').css('display', 'none');
            $('.warpper').css('padding', '0px');
        })
        // if (!$('.understand-me').length) {
        //   var bar = $(window).height() - $('.navbar ').height() - $('.page-toc').position().top;
        //   var count = bar / 26 / 2;
        //   var barHeight = $('.page-toc').outerHeight();
        //   $('.page-toc li').eq(0).children('a').addClass('red');
        //   var arr = [];
        //   $("h1,h2,h3,h4,h5,h6").each(function () {
        //     arr.push($(this).position().top);
        //   });
        //   var timer
        //   function dark() {
        //     clearTimeout(timer)
        //      timer = setTimeout(function () {
        //      var top = Math.abs($('.page-toc > ul').position().top);
        //      var cur = $('.content').scrollTop();
        //      for (var i = arr.length; i >= 0; i--) {
        //        if (arr[i] <= cur) {
        //          break;
        //        }
        //      }
        //      if (i === -1) {
        //        i = 0;
        //      }
        //      $('.page-toc li a').removeClass('red');
        //      $('.page-toc li').eq(i).children('a').addClass('red');
        //      let height = $('.page-toc li').eq(i).position().top-$('.page-toc').height(); // 如果当前的offset出去了 回到中间可好？
        //      $('.page-toc').scrollTop(height+$('.page-toc').height()/2);
        //    },200)
        //   }

        //   $('.content').on('scroll', dark);
        // }
    </script>
    <style>
        /* ::-webkit-scrollbar{width:14px;}
    ::-webkit-scrollbar-track{background-color:transparent;}
    ::-webkit-scrollbar-thumb{background-color:transparent;}
    ::-webkit-scrollbar-thumb:hover {background-color:transparent}
    ::-webkit-scrollbar-thumb:active {background-color:transparent} */

        .page-toc>ul .red {
            background: #f3f3f3;
            z-index: 1;
            border-left: 3px solid #009a61;
            -webkit-transition: all .2s ease;
            transition: all .2s ease;
            color: #000
        }
    </style>


</body>

</html>