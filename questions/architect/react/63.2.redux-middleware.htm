<!DOCTYPE html>
<!-- saved from url=(0072)http://www.zhufengpeixun.cn/architecture/html/63.2.redux-middleware.html -->
<html lang="en">

<head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>珠峰架构师成长计划</title>
    <link rel="stylesheet" type="text/css" href="./63.2.redux-middleware_files/main.css">
    <style type="text/css" abt="234"></style>
    <script>
        //console.log('a')
    </script>
    <script>
        //remove 17173 video ad
        doAdblock();

        function doAdblock() {
            (function () {
                function A() {}
                A.prototype = {
                    rules: {
                        '17173_in': {
                            'find': /http:\/\/f\.v\.17173cdn\.com\/(\d+\/)?flash\/PreloaderFile(Customer)?\.swf/,
                            'replace': "http://swf.adtchrome.com/17173_in_20150522.swf"
                        },
                        '17173_out': {
                            'find': /http:\/\/f\.v\.17173cdn\.com\/(\d+\/)?flash\/PreloaderFileFirstpage\.swf/,
                            'replace': "http://swf.adtchrome.com/17173_out_20150522.swf"
                        },
                        '17173_live': {
                            'find': /http:\/\/f\.v\.17173cdn\.com\/(\d+\/)?flash\/Player_stream(_firstpage)?\.swf/,
                            'replace': "http://swf.adtchrome.com/17173_stream_20150522.swf"
                        },
                        '17173_live_out': {
                            'find': /http:\/\/f\.v\.17173cdn\.com\/(\d+\/)?flash\/Player_stream_(custom)?Out\.swf/,
                            'replace': "http://swf.adtchrome.com/17173.out.Live.swf"
                        }
                    },
                    _done: null,
                    get done() {
                        if (!this._done) {
                            this._done = new Array();
                        }
                        return this._done;
                    },
                    addAnimations: function () {
                        var style = document.createElement('style');
                        style.type = 'text/css';
                        style.innerHTML = 'object,embed{\
                -webkit-animation-duration:.001s;-webkit-animation-name:playerInserted;\
                -ms-animation-duration:.001s;-ms-animation-name:playerInserted;\
                -o-animation-duration:.001s;-o-animation-name:playerInserted;\
                animation-duration:.001s;animation-name:playerInserted;}\
                @-webkit-keyframes playerInserted{from{opacity:0.99;}to{opacity:1;}}\
                @-ms-keyframes playerInserted{from{opacity:0.99;}to{opacity:1;}}\
                @-o-keyframes playerInserted{from{opacity:0.99;}to{opacity:1;}}\
                @keyframes playerInserted{from{opacity:0.99;}to{opacity:1;}}';
                        document.getElementsByTagName('head')[0].appendChild(style);
                    },
                    animationsHandler: function (e) {
                        if (e.animationName === 'playerInserted') {
                            this.replace(e.target);
                        }
                    },
                    replace: function (elem) {
                        if (this.done.indexOf(elem) != -1) return;
                        this.done.push(elem);
                        var player = elem.data || elem.src;
                        if (!player) return;
                        var i, find, replace = false;
                        for (i in this.rules) {
                            find = this.rules[i]['find'];
                            if (find.test(player)) {
                                replace = this.rules[i]['replace'];
                                if ('function' === typeof this.rules[i]['preHandle']) {
                                    this.rules[i]['preHandle'].bind(this, elem, find, replace, player)();
                                } else {
                                    this.reallyReplace.bind(this, elem, find, replace)();
                                }
                                break;
                            }
                        }
                    },
                    reallyReplace: function (elem, find, replace) {
                        elem.data && (elem.data = elem.data.replace(find, replace)) || elem.src && ((elem
                            .src = elem.src.replace(find, replace)) && (elem.style.display =
                            'block'));
                        var b = elem.querySelector("param[name='movie']");
                        this.reloadPlugin(elem);
                    },
                    reloadPlugin: function (elem) {
                        var nextSibling = elem.nextSibling;
                        var parentNode = elem.parentNode;
                        parentNode.removeChild(elem);
                        var newElem = elem.cloneNode(true);
                        this.done.push(newElem);
                        if (nextSibling) {
                            parentNode.insertBefore(newElem, nextSibling);
                        } else {
                            parentNode.appendChild(newElem);
                        }
                    },
                    init: function () {
                        var handler = this.animationsHandler.bind(this);
                        document.body.addEventListener('webkitAnimationStart', handler, false);
                        document.body.addEventListener('msAnimationStart', handler, false);
                        document.body.addEventListener('oAnimationStart', handler, false);
                        document.body.addEventListener('animationstart', handler, false);
                        this.addAnimations();
                    }
                };
                new A().init();
            })();
        }
        //remove baidu search ad
        if (document.URL.indexOf('www.baidu.com') >= 0) {
            if (document && document.getElementsByTagName && document.getElementById && document.body) {
                var aa = function () {
                    var all = document.body.querySelectorAll("#content_left div,#content_left table");
                    for (var i = 0; i < all.length; i++) {
                        if (/display:\s?(table|block)\s!important/.test(all[i].getAttribute("style"))) {
                            all[i].style.display = "none";
                            all[i].style.visibility = 'hidden';
                        }
                    }
                    all = document.body.querySelectorAll('.result.c-container[id="1"]');
                    //if(all.length == 1) return;
                    for (var i = 0; i < all.length; i++) {
                        if (all[i].innerHTML && all[i].innerHTML.indexOf('广告') > -1) {
                            all[i].style.display = "none";
                            all[i].style.visibility = 'hidden';
                        }
                    }
                }
                aa();
                document.getElementById('wrapper_wrapper').addEventListener('DOMSubtreeModified', aa)
            };
        }
        //remove sohu video ad
        if (document.URL.indexOf("tv.sohu.com") >= 0) {
            if (document.cookie.indexOf("fee_status=true") == -1) {
                document.cookie = 'fee_status=true'
            };
        }
        //remove 56.com video ad
        if (document.URL.indexOf("56.com") >= 0) {
            if (document.cookie.indexOf("fee_status=true") == -1) {
                document.cookie = 'fee_status=true'
            };
        }
        //fore iqiyi enable html5 player function
        if (document.URL.indexOf("iqiyi.com") >= 0) {
            if (document.cookie.indexOf("player_forcedType=h5_VOD") == -1) {
                document.cookie = 'player_forcedType=h5_VOD'
                if (localStorage.reloadTime && Date.now() - parseInt(localStorage.reloadTime) < 60000) {
                    console.log('no reload')
                } else {
                    location.reload()
                    localStorage.reloadTime = Date.now();
                }
            }
        }
    </script>
    <style type="text/css">
        object,
        embed {
            -webkit-animation-duration: .001s;
            -webkit-animation-name: playerInserted;
            -ms-animation-duration: .001s;
            -ms-animation-name: playerInserted;
            -o-animation-duration: .001s;
            -o-animation-name: playerInserted;
            animation-duration: .001s;
            animation-name: playerInserted;
        }

        @-webkit-keyframes playerInserted {
            from {
                opacity: 0.99;
            }

            to {
                opacity: 1;
            }
        }

        @-ms-keyframes playerInserted {
            from {
                opacity: 0.99;
            }

            to {
                opacity: 1;
            }
        }

        @-o-keyframes playerInserted {
            from {
                opacity: 0.99;
            }

            to {
                opacity: 1;
            }
        }

        @keyframes playerInserted {
            from {
                opacity: 0.99;
            }

            to {
                opacity: 1;
            }
        }
    </style>
</head>

<body>
    


    <div class="warpper">

        <div class="page-toc">
            <ul>
                <li><a
                        href="http://www.zhufengpeixun.cn/architecture/html/63.2.redux-middleware.html#t01.%20Redux%E4%B8%AD%E9%97%B4%E4%BB%B6">1.
                        Redux中间件</a></li>
                <li><a
                        href="http://www.zhufengpeixun.cn/architecture/html/63.2.redux-middleware.html#t12.%20%E6%97%A5%E5%BF%97%E4%B8%AD%E9%97%B4%E4%BB%B6">2.
                        日志中间件</a></li>
                <li><a
                        href="http://www.zhufengpeixun.cn/architecture/html/63.2.redux-middleware.html#t22.%20%E5%AE%9E%E7%8E%B0logger%E4%B8%AD%E9%97%B4%E4%BB%B6">2.
                        实现logger中间件</a>
                    <ul>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/63.2.redux-middleware.html#t32.1%20store\index.js">2.1
                                store\index.js</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/63.2.redux-middleware.html#t42.2%20applyMiddleware.js">2.2
                                applyMiddleware.js</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/63.2.redux-middleware.html#t52.3%20compose.js">2.3
                                compose.js</a></li>
                    </ul>
                </li>
                <li><a
                        href="http://www.zhufengpeixun.cn/architecture/html/63.2.redux-middleware.html#t63.%20%E7%BA%A7%E8%81%94%E4%B8%AD%E9%97%B4%E4%BB%B6">3.
                        级联中间件</a>
                    <ul>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/63.2.redux-middleware.html#t73.1%20Counter.js">3.1
                                Counter.js</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/63.2.redux-middleware.html#t83.2%20store\index.js">3.2
                                store\index.js</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/63.2.redux-middleware.html#t93.3%20reducers\index.js">3.3
                                reducers\index.js</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/63.2.redux-middleware.html#t103.4%20actions\counter.js">3.4
                                actions\counter.js</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/63.2.redux-middleware.html#t113.5%20redux-logger.js">3.5
                                redux-logger.js</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/63.2.redux-middleware.html#t123.6%20redux-thunk.js">3.6
                                redux-thunk.js</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/63.2.redux-middleware.html#t133.7%20redux-promise.js">3.7
                                redux-promise.js</a></li>
                    </ul>
                </li>
            </ul>
        </div>

        <div class="content markdown-body">
            <h2 id="t01. Redux中间件">1. Redux中间件 <a
                    href="http://www.zhufengpeixun.cn/architecture/html/63.2.redux-middleware.html#t01.%20Redux%E4%B8%AD%E9%97%B4%E4%BB%B6">
                    # </a></h2>
            <p><img src="./63.2.redux-middleware_files/reduxmiddleware.jpg" alt="reduxmiddleware"></p>
            <h2 id="t12. 日志中间件">2. 日志中间件 <a
                    href="http://www.zhufengpeixun.cn/architecture/html/63.2.redux-middleware.html#t12.%20%E6%97%A5%E5%BF%97%E4%B8%AD%E9%97%B4%E4%BB%B6">
                    # </a></h2>
            <ul>
                <li>我们改写了，dispatch方法实现了在更改状态时打印前后的状态</li>
                <li>但是这种方案并不好。所以我们可以采用中间的方式</li>
            </ul>
            <pre><code class="lang-js"><span class="hljs-keyword">let</span> store = createStore(reducer);
<span class="hljs-keyword">let</span> dispatch = store.dispatch;
store.dispatch = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">action</span>) </span>{
  <span class="hljs-built_in">console</span>.log(store.getState().number);
  dispatch(action);
  <span class="hljs-built_in">console</span>.log(store.getState().number)
};
<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> store;
</code></pre>
            <h2 id="t22. 实现logger中间件">2. 实现logger中间件 <a
                    href="http://www.zhufengpeixun.cn/architecture/html/63.2.redux-middleware.html#t22.%20%E5%AE%9E%E7%8E%B0logger%E4%B8%AD%E9%97%B4%E4%BB%B6">
                    # </a></h2>
            <ul>
                <li>中间件就是一个函数，对store.dispatch方法进行了改造，在发出 Action 和执行 Reducer 这两步之间，添加了其他功能</li>
            </ul>
            <h3 id="t32.1 store\index.js">2.1 store\index.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/63.2.redux-middleware.html#t32.1%20store\index.js">
                    # </a></h3>
            <p>src\store\index.js</p>
            <pre><code class="lang-js"><span class="hljs-keyword">import</span> { createStore,applyMiddleware } <span class="hljs-keyword">from</span> <span class="hljs-string">'../redux'</span>;
<span class="hljs-keyword">import</span> reducer <span class="hljs-keyword">from</span> <span class="hljs-string">'./reducers'</span>;
<span class="hljs-keyword">let</span> logger = <span class="hljs-function"><span class="hljs-params">store</span> =&gt;</span> dispatch =&gt; <span class="hljs-function"><span class="hljs-params">action</span>=&gt;</span>{
  <span class="hljs-built_in">console</span>.log(store.getState().number);
  dispatch(action);
  <span class="hljs-built_in">console</span>.log(store.getState().number)
};
<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> applyMiddleware(logger)(createStore)(reducer);
</code></pre>
            <h3 id="t42.2 applyMiddleware.js">2.2 applyMiddleware.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/63.2.redux-middleware.html#t42.2%20applyMiddleware.js">
                    # </a></h3>
            <p>src\redux\applyMiddleware.js</p>
            <ul>
                <li><a href="https://github.com/reduxjs/redux/blob/master/src/applyMiddleware.js">applyMiddleware</a>
                </li>
            </ul>
            <pre><code class="lang-js"><span class="hljs-keyword">import</span> compose <span class="hljs-keyword">from</span> <span class="hljs-string">'./compose'</span>
<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">applyMiddleware</span>(<span class="hljs-params">...middlewares</span>) </span>{
 <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-params">createStore</span>=&gt;</span><span class="hljs-function">(<span class="hljs-params">...args</span>)=&gt;</span>{
     <span class="hljs-keyword">const</span> store = createStore(...args);
     <span class="hljs-keyword">let</span> dispatch = <span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span>{
         <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Error</span>(<span class="hljs-string">'不允许派发正在构建中的中间件!'</span>);
     }
     <span class="hljs-keyword">const</span> middlewareAPI= {
         <span class="hljs-attr">getState</span>:store.getState,
         <span class="hljs-attr">dispatch</span>:<span class="hljs-function">(<span class="hljs-params">...args</span>)=&gt;</span>dispatch(...args)
     }
     <span class="hljs-keyword">const</span> chain = middlewares.map(<span class="hljs-function"><span class="hljs-params">middleware</span>=&gt;</span>middleware(middlewareAPI));
     dispatch = compose(...chain)(store.dispatch);
     <span class="hljs-keyword">return</span> {
         ...store,
         dispatch
     }
 };
}
</code></pre>
            <h3 id="t52.3 compose.js">2.3 compose.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/63.2.redux-middleware.html#t52.3%20compose.js">
                    # </a></h3>
            <p>src\redux\compose.js</p>
            <ul>
                <li><a href="https://github.com/reduxjs/redux/blob/master/src/compose.js">compose</a></li>
            </ul>
            <pre><code class="lang-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">add1</span>(<span class="hljs-params">str</span>)</span>{
    <span class="hljs-keyword">return</span> <span class="hljs-string">'1'</span>+str;
}
<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">add2</span>(<span class="hljs-params">str</span>)</span>{
    <span class="hljs-keyword">return</span> <span class="hljs-string">'2'</span>+str;
}
<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">add3</span>(<span class="hljs-params">str</span>)</span>{
    <span class="hljs-keyword">return</span> <span class="hljs-string">'3'</span>+str;
}

<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">compose</span>(<span class="hljs-params">...funcs</span>)</span>{
    <span class="hljs-keyword">return</span> funcs.reduce(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span><span class="hljs-function">(<span class="hljs-params">...args</span>)=&gt;</span>a(b(...args)));
}

<span class="hljs-keyword">let</span> result = compose(add3,add2,add1)(<span class="hljs-string">'zfpx'</span>);
<span class="hljs-built_in">console</span>.log(result);
</code></pre>
            <pre><code class="lang-js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">compose</span>(<span class="hljs-params">...funcs</span>) </span>{
    <span class="hljs-keyword">if</span> (funcs.length === <span class="hljs-number">0</span>) {
      <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-params">arg</span> =&gt;</span> arg
    }

    <span class="hljs-keyword">if</span> (funcs.length === <span class="hljs-number">1</span>) {
      <span class="hljs-keyword">return</span> funcs[<span class="hljs-number">0</span>]
    }

    <span class="hljs-keyword">return</span> funcs.reduce(<span class="hljs-function">(<span class="hljs-params">a, b</span>) =&gt;</span> (...args) =&gt; a(b(...args)))
  }
</code></pre>
            <h2 id="t63. 级联中间件">3. 级联中间件 <a
                    href="http://www.zhufengpeixun.cn/architecture/html/63.2.redux-middleware.html#t63.%20%E7%BA%A7%E8%81%94%E4%B8%AD%E9%97%B4%E4%BB%B6">
                    # </a></h2>
            <h3 id="t73.1 Counter.js">3.1 Counter.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/63.2.redux-middleware.html#t73.1%20Counter.js">
                    # </a></h3>
            <p>src\components\Counter.js</p>
            <pre><code class="lang-js"><span class="hljs-keyword">import</span> React, { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">'react'</span>;
<span class="hljs-keyword">import</span> actions <span class="hljs-keyword">from</span> <span class="hljs-string">'../store/actions/counter'</span>;
<span class="hljs-keyword">import</span> {connect} <span class="hljs-keyword">from</span> <span class="hljs-string">'../react-redux'</span>
<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Counter</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Component</span> </span>{
    render() {
        <span class="hljs-keyword">return</span> (
            <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>
                <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>{this.props.number}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>
                <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">{this.props.increment}</span>&gt;</span>+<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
                <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">{this.props.incrementAsync}</span>&gt;</span>异步+1<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
                <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">{this.props.incrementPromise}</span>&gt;</span>promise异步+1<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>
        )
    }
}

<span class="hljs-keyword">let</span> mapStateToProps = <span class="hljs-function"><span class="hljs-params">state</span>=&gt;</span>state;
<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> connect(
    mapStateToProps,
    actions
)(Counter)
</code></pre>
            <h3 id="t83.2 store\index.js">3.2 store\index.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/63.2.redux-middleware.html#t83.2%20store\index.js">
                    # </a></h3>
            <p>src\store\index.js</p>
            <pre><code class="lang-js"><span class="hljs-keyword">import</span> { createStore,applyMiddleware } <span class="hljs-keyword">from</span> <span class="hljs-string">'../redux'</span>;
<span class="hljs-keyword">import</span> reducer <span class="hljs-keyword">from</span> <span class="hljs-string">'./reducers'</span>;
<span class="hljs-keyword">import</span> logger <span class="hljs-keyword">from</span> <span class="hljs-string">'../redux-logger'</span>;
<span class="hljs-keyword">import</span> thunk <span class="hljs-keyword">from</span> <span class="hljs-string">'../redux-thunk'</span>;
<span class="hljs-keyword">import</span> promise <span class="hljs-keyword">from</span> <span class="hljs-string">'../redux-promise'</span>;
<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> applyMiddleware(thunk,promise,logger)(createStore)(reducer);
</code></pre>
            <h3 id="t93.3 reducers\index.js">3.3 reducers\index.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/63.2.redux-middleware.html#t93.3%20reducers\index.js">
                    # </a></h3>
            <p>src\store\reducers\index.js</p>
            <pre><code class="lang-js"><span class="hljs-keyword">import</span> counter <span class="hljs-keyword">from</span> <span class="hljs-string">'./counter'</span>;
<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> counter;
</code></pre>
            <h3 id="t103.4 actions\counter.js">3.4 actions\counter.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/63.2.redux-middleware.html#t103.4%20actions\counter.js">
                    # </a></h3>
            <p>src\store\actions\counter.js</p>
            <pre><code class="lang-js"><span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> types <span class="hljs-keyword">from</span> <span class="hljs-string">'../action-types'</span>;
<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {
    increment(){
        <span class="hljs-keyword">return</span> {<span class="hljs-attr">type</span>:types.INCREMENT};
    },
    decrement(){
        <span class="hljs-keyword">return</span> {<span class="hljs-attr">type</span>:types.DECREMENT};
    },
    incrementAsync(){
        <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">dispatch</span>)</span>{
            setTimeout(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span>{
                dispatch({<span class="hljs-attr">type</span>:types.INCREMENT});
            },<span class="hljs-number">1000</span>);
        }
    },
    incrementPromise(){
        <span class="hljs-keyword">return</span> {
            <span class="hljs-attr">type</span>:types.INCREMENT,
            <span class="hljs-attr">payload</span>:<span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve,reject</span>)=&gt;</span>{
                <span class="hljs-keyword">let</span> result = <span class="hljs-built_in">Math</span>.random();
                <span class="hljs-keyword">if</span>(result&gt;<span class="hljs-number">.5</span>){
                    resolve(result);
                }<span class="hljs-keyword">else</span>{
                    reject(result);
                }
            },<span class="hljs-number">1000</span>)
        }
    }
}
</code></pre>
            <h3 id="t113.5 redux-logger.js">3.5 redux-logger.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/63.2.redux-middleware.html#t113.5%20redux-logger.js">
                    # </a></h3>
            <p>src\redux-logger.js
                <a href="https://github.com/LogRocket/redux-logger/blob/master/src/index.js">redux-logger.js</a></p>
            <pre><code class="lang-js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span>  store =&gt; <span class="hljs-function"><span class="hljs-params">dispatch</span> =&gt;</span> action=&gt;{
    <span class="hljs-built_in">console</span>.log(store.getState().number);
    dispatch(action);
    <span class="hljs-built_in">console</span>.log(store.getState().number)
};
</code></pre>
            <h3 id="t123.6 redux-thunk.js">3.6 redux-thunk.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/63.2.redux-middleware.html#t123.6%20redux-thunk.js">
                    # </a></h3>
            <p>src\redux-thunk.js
                <a href="https://github.com/reduxjs/redux-thunk/blob/master/src/index.js">redux-thunk</a></p>
            <pre><code class="lang-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">createThunkMiddleware</span>(<span class="hljs-params">extraArgument</span>) </span>{
    <span class="hljs-keyword">return</span> <span class="hljs-function">(<span class="hljs-params">{dispatch,getState}</span>) =&gt;</span> next =&gt; <span class="hljs-function"><span class="hljs-params">action</span> =&gt;</span> {
        <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> action == <span class="hljs-string">'function'</span>) {
            <span class="hljs-keyword">return</span> action(dispatch, getState, extraArgument);
        }
        <span class="hljs-keyword">return</span> next(action);
    }
}
<span class="hljs-keyword">const</span> thunk = createThunkMiddleware();
thunk.withExtraArgument = createThunkMiddleware;
<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> thunk;
</code></pre>
            <h3 id="t133.7 redux-promise.js">3.7 redux-promise.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/63.2.redux-middleware.html#t133.7%20redux-promise.js">
                    # </a></h3>
            <p>src\redux-promise.js
                <a href="https://github.com/redux-utilities/redux-promise/blob/master/src/index.js">redux-promise</a>
            </p>
            <pre><code class="lang-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">isPromise</span>(<span class="hljs-params">obj</span>) </span>{
    <span class="hljs-keyword">return</span> !!obj &amp;&amp; (<span class="hljs-keyword">typeof</span> obj === <span class="hljs-string">'object'</span> || <span class="hljs-keyword">typeof</span> obj === <span class="hljs-string">'function'</span>) &amp;&amp; <span class="hljs-keyword">typeof</span> obj.then === <span class="hljs-string">'function'</span>;
}
<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">promiseMiddleware</span>(<span class="hljs-params">{ dispatch }</span>) </span>{
    <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-params">next</span> =&gt;</span> action =&gt; {
        <span class="hljs-keyword">return</span> isPromise(action.payload)
            ? action.payload
                .then(<span class="hljs-function"><span class="hljs-params">result</span> =&gt;</span> dispatch({ ...action, <span class="hljs-attr">payload</span>: result }))
                .catch(<span class="hljs-function"><span class="hljs-params">error</span> =&gt;</span> {
                    dispatch({ ...action, <span class="hljs-attr">payload</span>: error, <span class="hljs-attr">error</span>: <span class="hljs-literal">true</span> });
                    <span class="hljs-keyword">return</span> <span class="hljs-built_in">Promise</span>.reject(error);
                })
            : next(action);
    };
}
</code></pre>

            <div class="copyright">Powered by <a href="https://github.com/jaywcjlove/idoc" target="_blank">idoc</a>.
                Dependence <a href="https://nodejs.org/">Node.js</a> run.</div>
        </div>

    </div>

    <script src="./63.2.redux-middleware_files/jquery.js"></script>
    <script>
        $('.warpper .page-toc ul ul li a').on('click', function () {
            $('.warpper .page-toc ul ul li a').removeClass('my-active')
            $(this).addClass('my-active')
        })

        $('.logo').on('mouseenter', function () {
            $('.nav').height('400px');
        })
        $('.nav').on('mouseleave', function () {
            $('.nav').height('80px');
        })
        $('.logo').on('click', function () {
            $('.nav').css('display', 'none');
            $('.warpper').css('padding', '0px');
        })
        // if (!$('.understand-me').length) {
        //   var bar = $(window).height() - $('.navbar ').height() - $('.page-toc').position().top;
        //   var count = bar / 26 / 2;
        //   var barHeight = $('.page-toc').outerHeight();
        //   $('.page-toc li').eq(0).children('a').addClass('red');
        //   var arr = [];
        //   $("h1,h2,h3,h4,h5,h6").each(function () {
        //     arr.push($(this).position().top);
        //   });
        //   var timer
        //   function dark() {
        //     clearTimeout(timer)
        //      timer = setTimeout(function () {
        //      var top = Math.abs($('.page-toc > ul').position().top);
        //      var cur = $('.content').scrollTop();
        //      for (var i = arr.length; i >= 0; i--) {
        //        if (arr[i] <= cur) {
        //          break;
        //        }
        //      }
        //      if (i === -1) {
        //        i = 0;
        //      }
        //      $('.page-toc li a').removeClass('red');
        //      $('.page-toc li').eq(i).children('a').addClass('red');
        //      let height = $('.page-toc li').eq(i).position().top-$('.page-toc').height(); // 如果当前的offset出去了 回到中间可好？
        //      $('.page-toc').scrollTop(height+$('.page-toc').height()/2);
        //    },200)
        //   }

        //   $('.content').on('scroll', dark);
        // }
    </script>
    <style>
        /* ::-webkit-scrollbar{width:14px;}
    ::-webkit-scrollbar-track{background-color:transparent;}
    ::-webkit-scrollbar-thumb{background-color:transparent;}
    ::-webkit-scrollbar-thumb:hover {background-color:transparent}
    ::-webkit-scrollbar-thumb:active {background-color:transparent} */

        .page-toc>ul .red {
            background: #f3f3f3;
            z-index: 1;
            border-left: 3px solid #009a61;
            -webkit-transition: all .2s ease;
            transition: all .2s ease;
            color: #000
        }
    </style>


</body>

</html>