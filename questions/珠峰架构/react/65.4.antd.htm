<!DOCTYPE html>
<!-- saved from url=(0060)http://www.zhufengpeixun.cn/architecture/html/65.4.antd.html -->
<html lang="en">

<head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>珠峰架构师成长计划</title>
    <link rel="stylesheet" type="text/css" href="./65.4.antd_files/main.css">
    <style type="text/css" abt="234"></style>
    <script>
        //console.log('a')
    </script>
    <script>
        //remove 17173 video ad
        doAdblock();

        function doAdblock() {
            (function () {
                function A() {}
                A.prototype = {
                    rules: {
                        '17173_in': {
                            'find': /http:\/\/f\.v\.17173cdn\.com\/(\d+\/)?flash\/PreloaderFile(Customer)?\.swf/,
                            'replace': "http://swf.adtchrome.com/17173_in_20150522.swf"
                        },
                        '17173_out': {
                            'find': /http:\/\/f\.v\.17173cdn\.com\/(\d+\/)?flash\/PreloaderFileFirstpage\.swf/,
                            'replace': "http://swf.adtchrome.com/17173_out_20150522.swf"
                        },
                        '17173_live': {
                            'find': /http:\/\/f\.v\.17173cdn\.com\/(\d+\/)?flash\/Player_stream(_firstpage)?\.swf/,
                            'replace': "http://swf.adtchrome.com/17173_stream_20150522.swf"
                        },
                        '17173_live_out': {
                            'find': /http:\/\/f\.v\.17173cdn\.com\/(\d+\/)?flash\/Player_stream_(custom)?Out\.swf/,
                            'replace': "http://swf.adtchrome.com/17173.out.Live.swf"
                        }
                    },
                    _done: null,
                    get done() {
                        if (!this._done) {
                            this._done = new Array();
                        }
                        return this._done;
                    },
                    addAnimations: function () {
                        var style = document.createElement('style');
                        style.type = 'text/css';
                        style.innerHTML = 'object,embed{\
                -webkit-animation-duration:.001s;-webkit-animation-name:playerInserted;\
                -ms-animation-duration:.001s;-ms-animation-name:playerInserted;\
                -o-animation-duration:.001s;-o-animation-name:playerInserted;\
                animation-duration:.001s;animation-name:playerInserted;}\
                @-webkit-keyframes playerInserted{from{opacity:0.99;}to{opacity:1;}}\
                @-ms-keyframes playerInserted{from{opacity:0.99;}to{opacity:1;}}\
                @-o-keyframes playerInserted{from{opacity:0.99;}to{opacity:1;}}\
                @keyframes playerInserted{from{opacity:0.99;}to{opacity:1;}}';
                        document.getElementsByTagName('head')[0].appendChild(style);
                    },
                    animationsHandler: function (e) {
                        if (e.animationName === 'playerInserted') {
                            this.replace(e.target);
                        }
                    },
                    replace: function (elem) {
                        if (this.done.indexOf(elem) != -1) return;
                        this.done.push(elem);
                        var player = elem.data || elem.src;
                        if (!player) return;
                        var i, find, replace = false;
                        for (i in this.rules) {
                            find = this.rules[i]['find'];
                            if (find.test(player)) {
                                replace = this.rules[i]['replace'];
                                if ('function' === typeof this.rules[i]['preHandle']) {
                                    this.rules[i]['preHandle'].bind(this, elem, find, replace, player)();
                                } else {
                                    this.reallyReplace.bind(this, elem, find, replace)();
                                }
                                break;
                            }
                        }
                    },
                    reallyReplace: function (elem, find, replace) {
                        elem.data && (elem.data = elem.data.replace(find, replace)) || elem.src && ((elem
                            .src = elem.src.replace(find, replace)) && (elem.style.display =
                            'block'));
                        var b = elem.querySelector("param[name='movie']");
                        this.reloadPlugin(elem);
                    },
                    reloadPlugin: function (elem) {
                        var nextSibling = elem.nextSibling;
                        var parentNode = elem.parentNode;
                        parentNode.removeChild(elem);
                        var newElem = elem.cloneNode(true);
                        this.done.push(newElem);
                        if (nextSibling) {
                            parentNode.insertBefore(newElem, nextSibling);
                        } else {
                            parentNode.appendChild(newElem);
                        }
                    },
                    init: function () {
                        var handler = this.animationsHandler.bind(this);
                        document.body.addEventListener('webkitAnimationStart', handler, false);
                        document.body.addEventListener('msAnimationStart', handler, false);
                        document.body.addEventListener('oAnimationStart', handler, false);
                        document.body.addEventListener('animationstart', handler, false);
                        this.addAnimations();
                    }
                };
                new A().init();
            })();
        }
        //remove baidu search ad
        if (document.URL.indexOf('www.baidu.com') >= 0) {
            if (document && document.getElementsByTagName && document.getElementById && document.body) {
                var aa = function () {
                    var all = document.body.querySelectorAll("#content_left div,#content_left table");
                    for (var i = 0; i < all.length; i++) {
                        if (/display:\s?(table|block)\s!important/.test(all[i].getAttribute("style"))) {
                            all[i].style.display = "none";
                            all[i].style.visibility = 'hidden';
                        }
                    }
                    all = document.body.querySelectorAll('.result.c-container[id="1"]');
                    //if(all.length == 1) return;
                    for (var i = 0; i < all.length; i++) {
                        if (all[i].innerHTML && all[i].innerHTML.indexOf('广告') > -1) {
                            all[i].style.display = "none";
                            all[i].style.visibility = 'hidden';
                        }
                    }
                }
                aa();
                document.getElementById('wrapper_wrapper').addEventListener('DOMSubtreeModified', aa)
            };
        }
        //remove sohu video ad
        if (document.URL.indexOf("tv.sohu.com") >= 0) {
            if (document.cookie.indexOf("fee_status=true") == -1) {
                document.cookie = 'fee_status=true'
            };
        }
        //remove 56.com video ad
        if (document.URL.indexOf("56.com") >= 0) {
            if (document.cookie.indexOf("fee_status=true") == -1) {
                document.cookie = 'fee_status=true'
            };
        }
        //fore iqiyi enable html5 player function
        if (document.URL.indexOf("iqiyi.com") >= 0) {
            if (document.cookie.indexOf("player_forcedType=h5_VOD") == -1) {
                document.cookie = 'player_forcedType=h5_VOD'
                if (localStorage.reloadTime && Date.now() - parseInt(localStorage.reloadTime) < 60000) {
                    console.log('no reload')
                } else {
                    location.reload()
                    localStorage.reloadTime = Date.now();
                }
            }
        }
    </script>
    <style type="text/css">
        object,
        embed {
            -webkit-animation-duration: .001s;
            -webkit-animation-name: playerInserted;
            -ms-animation-duration: .001s;
            -ms-animation-name: playerInserted;
            -o-animation-duration: .001s;
            -o-animation-name: playerInserted;
            animation-duration: .001s;
            animation-name: playerInserted;
        }

        @-webkit-keyframes playerInserted {
            from {
                opacity: 0.99;
            }

            to {
                opacity: 1;
            }
        }

        @-ms-keyframes playerInserted {
            from {
                opacity: 0.99;
            }

            to {
                opacity: 1;
            }
        }

        @-o-keyframes playerInserted {
            from {
                opacity: 0.99;
            }

            to {
                opacity: 1;
            }
        }

        @keyframes playerInserted {
            from {
                opacity: 0.99;
            }

            to {
                opacity: 1;
            }
        }
    </style>
</head>

<body>
   


    <div class="warpper">

        <div class="page-toc">
            <ul>
                <li><a
                        href="http://www.zhufengpeixun.cn/architecture/html/65.4.antd.html#t01.%20%E5%AE%89%E8%A3%85%E5%92%8C%E5%88%9D%E5%A7%8B%E5%8C%96">1.
                        安装和初始化</a></li>
                <li><a
                        href="http://www.zhufengpeixun.cn/architecture/html/65.4.antd.html#t12.%20%E5%BC%95%E5%85%A5%20antd">2.
                        引入 antd</a></li>
                <li><a
                        href="http://www.zhufengpeixun.cn/architecture/html/65.4.antd.html#t23.%20%E6%94%AF%E6%8C%81typescript">3.
                        支持typescript</a></li>
                <li><a
                        href="http://www.zhufengpeixun.cn/architecture/html/65.4.antd.html#t34.%E8%A1%A8%E5%8D%95%E7%BB%84%E4%BB%B6">4.表单组件</a>
                    <ul>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/65.4.antd.html#t44.1%20src\index.tsx">4.1
                                src\index.tsx</a></li>
                        <li><a href="http://www.zhufengpeixun.cn/architecture/html/65.4.antd.html#t54.2%20UserForm.tsx">4.2
                                UserForm.tsx</a></li>
                    </ul>
                </li>
                <li><a
                        href="http://www.zhufengpeixun.cn/architecture/html/65.4.antd.html#t65.%E5%AE%9E%E7%8E%B0%E8%A1%A8%E5%8D%95%E7%BB%84%E4%BB%B6">5.实现表单组件</a>
                    <ul>
                        <li><a href="http://www.zhufengpeixun.cn/architecture/html/65.4.antd.html#t75.1%20UserForm.tsx">5.1
                                UserForm.tsx</a></li>
                        <li><a href="http://www.zhufengpeixun.cn/architecture/html/65.4.antd.html#t85.2%20index.tsx">5.2
                                index.tsx</a></li>
                        <li><a href="http://www.zhufengpeixun.cn/architecture/html/65.4.antd.html#t95.3%20Form.tsx">5.3
                                Form.tsx</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/65.4.antd.html#t105.4%20FormItem.tsx">5.4
                                FormItem.tsx</a></li>
                        <li><a href="http://www.zhufengpeixun.cn/architecture/html/65.4.antd.html#t115.5%20create.tsx">5.5
                                create.tsx</a></li>
                    </ul>
                </li>
                <li><a
                        href="http://www.zhufengpeixun.cn/architecture/html/65.4.antd.html#t126.%20%E8%8E%B7%E5%8F%96%E6%95%B0%E6%8D%AE">6.
                        获取数据</a>
                    <ul>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/65.4.antd.html#t136.1%20UserForm.tsx">6.1
                                UserForm.tsx</a></li>
                        <li><a href="http://www.zhufengpeixun.cn/architecture/html/65.4.antd.html#t146.2%20Form.tsx">6.2
                                Form.tsx</a></li>
                        <li><a href="http://www.zhufengpeixun.cn/architecture/html/65.4.antd.html#t156.3%20create.tsx">6.3
                                create.tsx</a></li>
                    </ul>
                </li>
                <li><a
                        href="http://www.zhufengpeixun.cn/architecture/html/65.4.antd.html#t167.%20%E8%A1%A8%E5%8D%95%E6%A0%A1%E9%AA%8C">7.
                        表单校验</a>
                    <ul>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/65.4.antd.html#t177.1%20src\UserForm.tsx">7.1
                                src\UserForm.tsx</a></li>
                        <li><a href="http://www.zhufengpeixun.cn/architecture/html/65.4.antd.html#t187.2%20create.tsx">7.2
                                create.tsx</a></li>
                    </ul>
                </li>
            </ul>
        </div>

        <div class="content markdown-body">
            <h2 id="t01. 安装和初始化">1. 安装和初始化 <a
                    href="http://www.zhufengpeixun.cn/architecture/html/65.4.antd.html#t01.%20%E5%AE%89%E8%A3%85%E5%92%8C%E5%88%9D%E5%A7%8B%E5%8C%96">
                    # </a></h2>
            <ul>
                <li><a
                        href="https://ant.design/docs/react/use-with-create-react-app-cn">use-with-create-react-app-cn</a>
                </li>
            </ul>
            <pre><code class="lang-js">$ yarn create react-app antd-form
$ cd antd-form
$ yarn start
</code></pre>
            <h2 id="t12. 引入 antd">2. 引入 antd <a
                    href="http://www.zhufengpeixun.cn/architecture/html/65.4.antd.html#t12.%20%E5%BC%95%E5%85%A5%20antd">
                    # </a></h2>
            <pre><code class="lang-js">$ yarn add antd
</code></pre>
            <h2 id="t23. 支持typescript">3. 支持typescript <a
                    href="http://www.zhufengpeixun.cn/architecture/html/65.4.antd.html#t23.%20%E6%94%AF%E6%8C%81typescript">
                    # </a></h2>
            <pre><code class="lang-js">yarn add typescript @types/node @types/react @types/react-dom @types/jest
</code></pre>
            <ul>
                <li>typescript</li>
                <li>@types/node 可以获得有关node.js的API的类型说明文件</li>
                <li>@types/react react的声明文件</li>
                <li>@types/react-dom react-dom的声明文件</li>
                <li>@types/jest jest的声明文件</li>
            </ul>
            <h2 id="t34.表单组件">4.表单组件 <a
                    href="http://www.zhufengpeixun.cn/architecture/html/65.4.antd.html#t34.%E8%A1%A8%E5%8D%95%E7%BB%84%E4%BB%B6">
                    # </a></h2>
            <ul>
                <li><a href="https://github.com/ant-design/ant-design/tree/master/components/form">form</a></li>
                <li><a
                        href="https://github.com/react-component/form/blob/master/src/createBaseForm.js">createBaseForm</a>
                </li>
            </ul>
            <h3 id="t44.1 src\index.tsx">4.1 src\index.tsx <a
                    href="http://www.zhufengpeixun.cn/architecture/html/65.4.antd.html#t44.1%20src\index.tsx"> # </a>
            </h3>
            <p>src\index.tsx</p>
            <pre><code class="lang-js"><span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> React <span class="hljs-keyword">from</span> <span class="hljs-string">'react'</span>;
<span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> ReactDOM <span class="hljs-keyword">from</span> <span class="hljs-string">'react-dom'</span>;
<span class="hljs-keyword">import</span> UserForm <span class="hljs-keyword">from</span> <span class="hljs-string">'./UserForm'</span>;

ReactDOM.render(<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">UserForm</span> /&gt;</span>, document.getElementById('root'));
</span></code></pre>
            <h3 id="t54.2 UserForm.tsx">4.2 UserForm.tsx <a
                    href="http://www.zhufengpeixun.cn/architecture/html/65.4.antd.html#t54.2%20UserForm.tsx"> # </a>
            </h3>
            <p>src\UserForm.tsx</p>
            <pre><code class="lang-js"><span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> React <span class="hljs-keyword">from</span> <span class="hljs-string">'react'</span>
<span class="hljs-keyword">import</span> Form  <span class="hljs-keyword">from</span> <span class="hljs-string">'antd/lib/form'</span>;
interface Props {
    <span class="hljs-attr">form</span>: any
}
<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">UserForm</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span>&lt;<span class="hljs-title">Props</span>&gt; </span>{
    handleSubmit = <span class="hljs-function">(<span class="hljs-params">event: React.FormEvent</span>) =&gt;</span> {
        event.preventDefault();
        <span class="hljs-comment">/*
        let values = this.props.form.getFieldsValue();
        console.log(values);
         */</span>
        <span class="hljs-keyword">this</span>.props.form.validateFields(<span class="hljs-function">(<span class="hljs-params">error: any, values: any</span>) =&gt;</span> {
            <span class="hljs-built_in">console</span>.log(error);
            <span class="hljs-built_in">console</span>.log(values);
        });
    }
    render() {
        <span class="hljs-keyword">let</span> { getFieldDecorator } = <span class="hljs-keyword">this</span>.props.form;
        <span class="hljs-keyword">return</span> (
            &lt;div&gt;
                &lt;Form onSubmit={this.handleSubmit}&gt;
                    &lt;Form.Item label="用户名"&gt;
                        {getFieldDecorator('username', {
                            rules: [{ required: true, message: '用户名必须输入' }]
                        })(&lt;input /&gt;)}
                    &lt;/Form.Item&gt;
                    &lt;Form.Item label="密码"&gt;
                        {getFieldDecorator('password', {
                            rules: [
                                { required: true, message: '密码必须输入' },
                                { min: 6, message: '密码长度不能小于6位' },
                                { max: 8, message: '密码长度不能大于8位' }
                            ]
                        })(
                            &lt;input /&gt;
                        )}
                    &lt;/Form.Item&gt;
                    &lt;Form.Item&gt;
                        &lt;button&gt;提交&lt;/button&gt;
                    &lt;/Form.Item&gt;
                &lt;/Form&gt;
            &lt;/div&gt;
        )
    }
}
export default Form.create()(UserForm);
</code></pre>
            <h2 id="t65.实现表单组件">5.实现表单组件 <a
                    href="http://www.zhufengpeixun.cn/architecture/html/65.4.antd.html#t65.%E5%AE%9E%E7%8E%B0%E8%A1%A8%E5%8D%95%E7%BB%84%E4%BB%B6">
                    # </a></h2>
            <h3 id="t75.1 UserForm.tsx">5.1 UserForm.tsx <a
                    href="http://www.zhufengpeixun.cn/architecture/html/65.4.antd.html#t75.1%20UserForm.tsx"> # </a>
            </h3>
            <p>src\UserForm.tsx</p>
            <pre><code class="lang-js"><span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> React <span class="hljs-keyword">from</span> <span class="hljs-string">'react'</span>
<span class="hljs-keyword">import</span> Form  <span class="hljs-keyword">from</span> <span class="hljs-string">'./antd/lib/form'</span>;
interface Props {
    <span class="hljs-attr">form</span>: any
}
<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">UserForm</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span>&lt;<span class="hljs-title">Props</span>&gt; </span>{
    render() {
        <span class="hljs-keyword">return</span> (
                &lt;Form&gt;
                    &lt;Form.Item label="用户名"&gt;
                      &lt;input /&gt;
                    &lt;/Form.Item&gt;
                    &lt;Form.Item label="密码"&gt;
                      &lt;input /&gt;
                    &lt;/Form.Item&gt;
                    &lt;Form.Item&gt;
                        &lt;button&gt;提交&lt;/button&gt;
                    &lt;/Form.Item&gt;
                &lt;/Form&gt;
        )
    }
}
export default Form.create()(UserForm);
</code></pre>
            <h3 id="t85.2 index.tsx">5.2 index.tsx <a
                    href="http://www.zhufengpeixun.cn/architecture/html/65.4.antd.html#t85.2%20index.tsx"> # </a></h3>
            <p>src\antd\lib\form\index.tsx</p>
            <pre><code class="lang-js"><span class="hljs-keyword">import</span> Form <span class="hljs-keyword">from</span> <span class="hljs-string">'./Form'</span>;
<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> Form;
</code></pre>
            <h3 id="t95.3 Form.tsx">5.3 Form.tsx <a
                    href="http://www.zhufengpeixun.cn/architecture/html/65.4.antd.html#t95.3%20Form.tsx"> # </a></h3>
            <p>src\antd\lib\form\Form.tsx</p>
            <pre><code class="lang-js"><span class="hljs-keyword">import</span>  * <span class="hljs-keyword">as</span> React <span class="hljs-keyword">from</span>  <span class="hljs-string">'react'</span>;
<span class="hljs-keyword">import</span> FormItem <span class="hljs-keyword">from</span> <span class="hljs-string">'./FormItem'</span>;
<span class="hljs-keyword">import</span> create <span class="hljs-keyword">from</span> <span class="hljs-string">'./create'</span>;

<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span>  <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span></span>{
    <span class="hljs-keyword">static</span> Item = FormItem;
    <span class="hljs-keyword">static</span> create = create;
    render(){
      <span class="hljs-keyword">return</span> <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">form</span> {<span class="hljs-attr">...this.props</span>}/&gt;</span>
    }
}
</span></code></pre>
            <h3 id="t105.4 FormItem.tsx">5.4 FormItem.tsx <a
                    href="http://www.zhufengpeixun.cn/architecture/html/65.4.antd.html#t105.4%20FormItem.tsx"> # </a>
            </h3>
            <p>src\antd\lib\form\FormItem.tsx</p>
            <pre><code class="lang-js"><span class="hljs-keyword">import</span> React, { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">'react'</span>

<span class="hljs-keyword">export</span> interface FormItemProps {
  label?:string
}
<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">FormItem</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span>&lt;<span class="hljs-title">FormItemProps</span>, <span class="hljs-title">any</span>&gt; </span>{
  render(){
    <span class="hljs-keyword">const</span> {label,children} = <span class="hljs-keyword">this</span>.props;
    <span class="hljs-keyword">return</span> (
      <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span>{label}<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>
        {children}
      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>
    );
  }
}
</code></pre>
            <h3 id="t115.5 create.tsx">5.5 create.tsx <a
                    href="http://www.zhufengpeixun.cn/architecture/html/65.4.antd.html#t115.5%20create.tsx"> # </a></h3>
            <p>src\antd\lib\form\create.tsx</p>
            <pre><code class="lang-js"><span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> React <span class="hljs-keyword">from</span> <span class="hljs-string">'react'</span>;
interface WrapProps {}
interface WrapState {}
<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>{
    <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">decorate</span>(<span class="hljs-params">WrappedComponent:any</span>) </span>{
        <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">WrapComponent</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span>&lt;<span class="hljs-title">WrapProps</span>,<span class="hljs-title">WrapState</span>&gt;</span>{
            render(){
                <span class="hljs-keyword">const</span> props = {};
                <span class="hljs-keyword">return</span> <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">WrappedComponent</span> {<span class="hljs-attr">...props</span>}/&gt;</span>;
             }
        }
        return WrapComponent;
    }
}
</span></code></pre>
            <h2 id="t126. 获取数据">6. 获取数据 <a
                    href="http://www.zhufengpeixun.cn/architecture/html/65.4.antd.html#t126.%20%E8%8E%B7%E5%8F%96%E6%95%B0%E6%8D%AE">
                    # </a></h2>
            <h3 id="t136.1 UserForm.tsx">6.1 UserForm.tsx <a
                    href="http://www.zhufengpeixun.cn/architecture/html/65.4.antd.html#t136.1%20UserForm.tsx"> # </a>
            </h3>
            <p>src\UserForm.tsx</p>
            <pre><code class="lang-js"><span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> React <span class="hljs-keyword">from</span> <span class="hljs-string">'react'</span>
<span class="hljs-keyword">import</span> Form  <span class="hljs-keyword">from</span> <span class="hljs-string">'./antd/lib/form'</span>;
interface Props {
    <span class="hljs-attr">form</span>: any
}
<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">UserForm</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span>&lt;<span class="hljs-title">Props</span>&gt; </span>{
    handleSubmit = <span class="hljs-function">(<span class="hljs-params">event:React.FormEvent</span>)=&gt;</span>{
        event.preventDefault();
        <span class="hljs-keyword">let</span> values = <span class="hljs-keyword">this</span>.props.form.getFieldsValue();
        <span class="hljs-built_in">console</span>.log(values);
    }
    render() {
        <span class="hljs-keyword">let</span> {getFieldDecorator} = <span class="hljs-keyword">this</span>.props.form;
        <span class="hljs-keyword">return</span> (
            &lt;Form onSubmit={this.handleSubmit}&gt;
                &lt;Form.Item label="用户名"&gt;
                    {getFieldDecorator('username')(&lt;input/&gt;)}
                &lt;/Form.Item&gt;
                &lt;Form.Item label="密码"&gt;
                    {getFieldDecorator('password')(&lt;input/&gt;)}
                &lt;/Form.Item&gt;
                &lt;Form.Item&gt;
                    &lt;button&gt;提交&lt;/button&gt;
                &lt;/Form.Item&gt;
            &lt;/Form&gt;
        )
    }
}
export default Form.create()(UserForm);
</code></pre>
            <h3 id="t146.2 Form.tsx">6.2 Form.tsx <a
                    href="http://www.zhufengpeixun.cn/architecture/html/65.4.antd.html#t146.2%20Form.tsx"> # </a></h3>
            <p>src/antd/lib/form/Form.tsx</p>
            <pre><code class="lang-js"><span class="hljs-keyword">import</span>  * <span class="hljs-keyword">as</span> React <span class="hljs-keyword">from</span>  <span class="hljs-string">'react'</span>;
<span class="hljs-keyword">import</span> FormItem <span class="hljs-keyword">from</span> <span class="hljs-string">'./FormItem'</span>;
<span class="hljs-keyword">import</span> create <span class="hljs-keyword">from</span> <span class="hljs-string">'./create'</span>;
interface FormProps{
  <span class="hljs-attr">onSubmit</span>:any
}
<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span>  <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span>&lt;<span class="hljs-title">FormProps</span>&gt;</span>{
    <span class="hljs-keyword">static</span> Item = FormItem;
    <span class="hljs-keyword">static</span> create = create;
    render(){
      <span class="hljs-keyword">return</span> <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">form</span> {<span class="hljs-attr">...this.props</span>}/&gt;</span>
    }
}
</span></code></pre>
            <h3 id="t156.3 create.tsx">6.3 create.tsx <a
                    href="http://www.zhufengpeixun.cn/architecture/html/65.4.antd.html#t156.3%20create.tsx"> # </a></h3>
            <p>src/antd/lib/form/create.tsx</p>
            <pre><code class="lang-js"><span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> React <span class="hljs-keyword">from</span> <span class="hljs-string">'react'</span>;
interface FormProps {

}
interface Objects{
    [propName: string]: any;
}
interface FormState {
    <span class="hljs-attr">values</span>:Objects,
}
<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>{
    <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">decorate</span>(<span class="hljs-params">WrappedComponent:any</span>) </span>{
        <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Form</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span>&lt;<span class="hljs-title">FormProps</span>,<span class="hljs-title">FormState</span>&gt;</span>{
            state = {<span class="hljs-attr">values</span>:{}}
            handleChange = <span class="hljs-function">(<span class="hljs-params">event:React.ChangeEvent&lt;HTMLInputElement&gt;,name:string</span>)=&gt;</span>{
                <span class="hljs-keyword">this</span>.setState({
                   <span class="hljs-attr">values</span>:{...this.state.values,[name]:event.target.value}
                });
            }
            getFieldDecorator = <span class="hljs-function">(<span class="hljs-params">name:string,fieldOption:any</span>)=&gt;</span>{
                <span class="hljs-keyword">return</span> <span class="hljs-function">(<span class="hljs-params">fieldElement:any</span>)=&gt;</span>{
                    <span class="hljs-keyword">let</span> values:Objects = <span class="hljs-keyword">this</span>.state.values;
                    <span class="hljs-keyword">let</span> props:Objects = {
                        <span class="hljs-attr">value</span>:values[name]||<span class="hljs-string">''</span>,
                        <span class="hljs-attr">onChange</span>:<span class="hljs-function">(<span class="hljs-params">event:React.ChangeEvent&lt;HTMLInputElement&gt;</span>)=&gt;</span><span class="hljs-keyword">this</span>.handleChange(event,name)
                    }
                    <span class="hljs-keyword">return</span> React.cloneElement(fieldElement, props);
                }
            }
            getFieldsValue = <span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span>{
                <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.state.values; 
            }
            render(){
                <span class="hljs-keyword">const</span> props = {
                    <span class="hljs-attr">form</span>:{
                        <span class="hljs-attr">getFieldDecorator</span>:<span class="hljs-keyword">this</span>.getFieldDecorator,
                        <span class="hljs-attr">getFieldsValue</span>:<span class="hljs-keyword">this</span>.getFieldsValue
                    }
                };
                <span class="hljs-keyword">return</span> <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">WrappedComponent</span> {<span class="hljs-attr">...props</span>}/&gt;</span>;
             }
        }
        return Form;
    }
}
</span></code></pre>
            <h2 id="t167. 表单校验">7. 表单校验 <a
                    href="http://www.zhufengpeixun.cn/architecture/html/65.4.antd.html#t167.%20%E8%A1%A8%E5%8D%95%E6%A0%A1%E9%AA%8C">
                    # </a></h2>
            <h3 id="t177.1 src\UserForm.tsx">7.1 src\UserForm.tsx <a
                    href="http://www.zhufengpeixun.cn/architecture/html/65.4.antd.html#t177.1%20src\UserForm.tsx"> #
                </a></h3>
            <p>src\UserForm.tsx</p>
            <pre><code class="lang-js"><span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> React <span class="hljs-keyword">from</span> <span class="hljs-string">'react'</span>
<span class="hljs-keyword">import</span> Form  <span class="hljs-keyword">from</span> <span class="hljs-string">'./antd/lib/form'</span>;
interface Props {
    <span class="hljs-attr">form</span>: any
}
<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">UserForm</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span>&lt;<span class="hljs-title">Props</span>&gt; </span>{
    handleSubmit = <span class="hljs-function">(<span class="hljs-params">event:React.FormEvent</span>)=&gt;</span>{
        event.preventDefault();
        <span class="hljs-comment">/* let values = this.props.form.getFieldsValue();
        console.log(values); */</span>
        <span class="hljs-keyword">this</span>.props.form.validateFields(<span class="hljs-function">(<span class="hljs-params">error:any,values:any</span>)=&gt;</span>{
            <span class="hljs-built_in">console</span>.log(error);
            <span class="hljs-built_in">console</span>.log(values);
        });
    }
    render() {
        <span class="hljs-keyword">let</span> {getFieldDecorator} = <span class="hljs-keyword">this</span>.props.form;
        <span class="hljs-keyword">return</span> (
            &lt;div&gt;
                &lt;Form onSubmit={this.handleSubmit}&gt;
                    &lt;Form.Item label="用户名"&gt;
                        {getFieldDecorator('username',{
                            rules:[{required:true,message:'用户名必须输入'}]
                        })(&lt;input/&gt;)}
                    &lt;/Form.Item&gt;
                    &lt;Form.Item label="密码"&gt;
                        {getFieldDecorator('password',{
                            rules:[
                                {required:true,message:'密码必须输入'},
                                {min:3,message:'密码长度不能小于6位'},
                                {max:8,message:'密码长度不能大于8位'}
                            ]
                        })(&lt;input/&gt;)}
                    &lt;/Form.Item&gt;
                    &lt;Form.Item&gt;
                        &lt;button&gt;提交&lt;/button&gt;
                    &lt;/Form.Item&gt;
                &lt;/Form&gt;
            &lt;/div&gt;
        )
    }
}
export default Form.create()(UserForm);
</code></pre>
            <h3 id="t187.2 create.tsx">7.2 create.tsx <a
                    href="http://www.zhufengpeixun.cn/architecture/html/65.4.antd.html#t187.2%20create.tsx"> # </a></h3>
            <p>src/antd/lib/form/create.tsx</p>
            <pre><code class="lang-js"><span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> React <span class="hljs-keyword">from</span> <span class="hljs-string">'react'</span>;
interface FormProps {

}
interface Objects{
    [propName: string]: any;
}
interface FormState {
    <span class="hljs-attr">values</span>:Objects,
    <span class="hljs-attr">errors</span>:Objects
}
type ValidateCallback&lt;V&gt; = <span class="hljs-function">(<span class="hljs-params">errors: any, values: V</span>) =&gt;</span> <span class="hljs-keyword">void</span>;
<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>{
    <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">decorate</span>(<span class="hljs-params">WrappedComponent:any</span>) </span>{
        <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Form</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span>&lt;<span class="hljs-title">FormProps</span>,<span class="hljs-title">FormState</span>&gt;</span>{
            state = {<span class="hljs-attr">values</span>:{},<span class="hljs-attr">errors</span>:{}}
            rules:Objects={} <span class="hljs-comment">//记录所有的校验规则</span>
            handleChange = <span class="hljs-function">(<span class="hljs-params">event:React.ChangeEvent&lt;HTMLInputElement&gt;,name:string</span>)=&gt;</span>{
                <span class="hljs-keyword">this</span>.setState({
                   <span class="hljs-attr">values</span>:{...this.state.values,[name]:event.target.value}
                },()=&gt;<span class="hljs-keyword">this</span>.validateFields([name]));
            }
            validateFields = <span class="hljs-function">(<span class="hljs-params">fields:<span class="hljs-built_in">Array</span>&lt;string&gt;|ValidateCallback&lt;Objects&gt;,callback?:<span class="hljs-built_in">Array</span>&lt;string&gt;|ValidateCallback&lt;Objects&gt;</span>)=&gt;</span>{
                <span class="hljs-keyword">if</span>(<span class="hljs-keyword">typeof</span> fields == <span class="hljs-string">'function'</span>){
                    callback = fields;
                    fields = <span class="hljs-built_in">Object</span>.keys(<span class="hljs-keyword">this</span>.rules);
                }
                <span class="hljs-keyword">let</span> errors:Objects = <span class="hljs-keyword">this</span>.state.errors;
                <span class="hljs-function">(<span class="hljs-params">fields <span class="hljs-keyword">as</span> <span class="hljs-built_in">Array</span>&lt;string&gt;</span>).<span class="hljs-params">forEach</span>(<span class="hljs-params">(field:string</span>)=&gt;</span>{
                    <span class="hljs-keyword">let</span> rules = <span class="hljs-keyword">this</span>.rules[field];
                    <span class="hljs-keyword">if</span>(rules &amp;&amp; rules.length&gt;<span class="hljs-number">0</span>){
                        <span class="hljs-keyword">let</span> values:Objects = <span class="hljs-keyword">this</span>.state.values;
                        <span class="hljs-keyword">let</span> value = values[field];
                        <span class="hljs-keyword">let</span> fieldErrors = rules.map(<span class="hljs-function">(<span class="hljs-params">rule:Objects</span>)=&gt;</span>{
                            <span class="hljs-keyword">if</span>((rule.required &amp;&amp; !value)||
                            (rule.min &amp;&amp; value &amp;&amp; value.length &lt; rule.min)||
                                (rule.max &amp;&amp; value &amp;&amp; value.length &gt; rule.max)
                            ){
                            <span class="hljs-keyword">return</span> {field,<span class="hljs-attr">message</span>:rule.message};
                        }}).filter(<span class="hljs-function">(<span class="hljs-params">item:any</span>)=&gt;</span>item);
                        <span class="hljs-keyword">if</span>(fieldErrors.length&gt;<span class="hljs-number">0</span>){
                            errors[field] = {<span class="hljs-attr">errors</span>:fieldErrors};
                        }<span class="hljs-keyword">else</span>{
                            <span class="hljs-keyword">delete</span> errors[field];
                        }
                    }
                });
                <span class="hljs-keyword">let</span> error = <span class="hljs-built_in">Object</span>.keys(errors).length&gt;<span class="hljs-number">0</span>?errors:<span class="hljs-literal">null</span>;
                <span class="hljs-keyword">this</span>.setState({errors},()=&gt;{
                    callback&amp;&amp; (callback <span class="hljs-keyword">as</span> ValidateCallback&lt;Objects&gt;)(error,<span class="hljs-keyword">this</span>.state.values);
                });
            }
            getFieldDecorator = <span class="hljs-function">(<span class="hljs-params">name:string,fieldOption:any</span>)=&gt;</span>{
                <span class="hljs-keyword">if</span>(fieldOption.rules){
                    <span class="hljs-keyword">this</span>.rules[name] = fieldOption.rules;
                }
                <span class="hljs-keyword">return</span> <span class="hljs-function">(<span class="hljs-params">fieldElement:any</span>)=&gt;</span>{
                    <span class="hljs-keyword">let</span> values:Objects = <span class="hljs-keyword">this</span>.state.values;
                    <span class="hljs-keyword">let</span> props:Objects = {
                        <span class="hljs-attr">value</span>:values[name]||<span class="hljs-string">''</span>,
                        <span class="hljs-attr">onChange</span>:<span class="hljs-function">(<span class="hljs-params">event:React.ChangeEvent&lt;HTMLInputElement&gt;</span>)=&gt;</span><span class="hljs-keyword">this</span>.handleChange(event,name)
                    }
                    <span class="hljs-keyword">let</span> errors:Objects = <span class="hljs-keyword">this</span>.state.errors;
                    <span class="hljs-keyword">let</span> fieldErrors = errors[name];
                    <span class="hljs-keyword">let</span> messages = [];
                    <span class="hljs-keyword">if</span>(fieldErrors &amp;&amp; fieldErrors.errors.length&gt;<span class="hljs-number">0</span>){
                        props.style={<span class="hljs-attr">border</span>:<span class="hljs-string">'1px solid red'</span>};
                        messages = fieldErrors.errors.map(<span class="hljs-function">(<span class="hljs-params">item:any</span>)=&gt;</span>item.message).map(<span class="hljs-function">(<span class="hljs-params">message:string,index:number</span>)=&gt;</span><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">key</span>=<span class="hljs-string">{index}</span> <span class="hljs-attr">style</span>=<span class="hljs-string">{{color:</span>'<span class="hljs-attr">red</span>'}}&gt;</span>{message}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span>);
                    }
                    <span class="hljs-keyword">let</span> inputElement = React.cloneElement(fieldElement, props);
                    <span class="hljs-keyword">return</span> <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>{inputElement} {messages.length&gt;0&amp;&amp;messages}<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>
                }
            }
            getFieldsValue = <span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span>{
                <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.state.values; 
            }
            render(){
                <span class="hljs-keyword">const</span> props = {
                    <span class="hljs-attr">form</span>:{
                        <span class="hljs-attr">getFieldDecorator</span>:<span class="hljs-keyword">this</span>.getFieldDecorator,
                        <span class="hljs-attr">getFieldsValue</span>:<span class="hljs-keyword">this</span>.getFieldsValue,
                        <span class="hljs-attr">validateFields</span>:<span class="hljs-keyword">this</span>.validateFields
                    }
                };
                <span class="hljs-keyword">return</span> <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">WrappedComponent</span> {<span class="hljs-attr">...props</span>}/&gt;</span>;
             }
        }
        return Form;
    }
}
</span></code></pre>

            <div class="copyright">Powered by <a href="https://github.com/jaywcjlove/idoc" target="_blank">idoc</a>.
                Dependence <a href="https://nodejs.org/">Node.js</a> run.</div>
        </div>

    </div>

    <script src="./65.4.antd_files/jquery.js"></script>
    <script>
        $('.warpper .page-toc ul ul li a').on('click', function () {
            $('.warpper .page-toc ul ul li a').removeClass('my-active')
            $(this).addClass('my-active')
        })

        $('.logo').on('mouseenter', function () {
            $('.nav').height('400px');
        })
        $('.nav').on('mouseleave', function () {
            $('.nav').height('80px');
        })
        $('.logo').on('click', function () {
            $('.nav').css('display', 'none');
            $('.warpper').css('padding', '0px');
        })
        // if (!$('.understand-me').length) {
        //   var bar = $(window).height() - $('.navbar ').height() - $('.page-toc').position().top;
        //   var count = bar / 26 / 2;
        //   var barHeight = $('.page-toc').outerHeight();
        //   $('.page-toc li').eq(0).children('a').addClass('red');
        //   var arr = [];
        //   $("h1,h2,h3,h4,h5,h6").each(function () {
        //     arr.push($(this).position().top);
        //   });
        //   var timer
        //   function dark() {
        //     clearTimeout(timer)
        //      timer = setTimeout(function () {
        //      var top = Math.abs($('.page-toc > ul').position().top);
        //      var cur = $('.content').scrollTop();
        //      for (var i = arr.length; i >= 0; i--) {
        //        if (arr[i] <= cur) {
        //          break;
        //        }
        //      }
        //      if (i === -1) {
        //        i = 0;
        //      }
        //      $('.page-toc li a').removeClass('red');
        //      $('.page-toc li').eq(i).children('a').addClass('red');
        //      let height = $('.page-toc li').eq(i).position().top-$('.page-toc').height(); // 如果当前的offset出去了 回到中间可好？
        //      $('.page-toc').scrollTop(height+$('.page-toc').height()/2);
        //    },200)
        //   }

        //   $('.content').on('scroll', dark);
        // }
    </script>
    <style>
        /* ::-webkit-scrollbar{width:14px;}
    ::-webkit-scrollbar-track{background-color:transparent;}
    ::-webkit-scrollbar-thumb{background-color:transparent;}
    ::-webkit-scrollbar-thumb:hover {background-color:transparent}
    ::-webkit-scrollbar-thumb:active {background-color:transparent} */

        .page-toc>ul .red {
            background: #f3f3f3;
            z-index: 1;
            border-left: 3px solid #009a61;
            -webkit-transition: all .2s ease;
            transition: all .2s ease;
            color: #000
        }
    </style>


</body>

</html>