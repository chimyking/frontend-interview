<!DOCTYPE html>
<!-- saved from url=(0066)http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html -->
<html lang="en">

<head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>珠峰架构师成长计划</title>
    <link rel="stylesheet" type="text/css" href="./65.3.typescript_files/main.css">
    <style type="text/css" abt="234"></style>
    <script>
        //console.log('a')
    </script>
    <script>
        //remove 17173 video ad
        doAdblock();

        function doAdblock() {
            (function () {
                function A() {}
                A.prototype = {
                    rules: {
                        '17173_in': {
                            'find': /http:\/\/f\.v\.17173cdn\.com\/(\d+\/)?flash\/PreloaderFile(Customer)?\.swf/,
                            'replace': "http://swf.adtchrome.com/17173_in_20150522.swf"
                        },
                        '17173_out': {
                            'find': /http:\/\/f\.v\.17173cdn\.com\/(\d+\/)?flash\/PreloaderFileFirstpage\.swf/,
                            'replace': "http://swf.adtchrome.com/17173_out_20150522.swf"
                        },
                        '17173_live': {
                            'find': /http:\/\/f\.v\.17173cdn\.com\/(\d+\/)?flash\/Player_stream(_firstpage)?\.swf/,
                            'replace': "http://swf.adtchrome.com/17173_stream_20150522.swf"
                        },
                        '17173_live_out': {
                            'find': /http:\/\/f\.v\.17173cdn\.com\/(\d+\/)?flash\/Player_stream_(custom)?Out\.swf/,
                            'replace': "http://swf.adtchrome.com/17173.out.Live.swf"
                        }
                    },
                    _done: null,
                    get done() {
                        if (!this._done) {
                            this._done = new Array();
                        }
                        return this._done;
                    },
                    addAnimations: function () {
                        var style = document.createElement('style');
                        style.type = 'text/css';
                        style.innerHTML = 'object,embed{\
                -webkit-animation-duration:.001s;-webkit-animation-name:playerInserted;\
                -ms-animation-duration:.001s;-ms-animation-name:playerInserted;\
                -o-animation-duration:.001s;-o-animation-name:playerInserted;\
                animation-duration:.001s;animation-name:playerInserted;}\
                @-webkit-keyframes playerInserted{from{opacity:0.99;}to{opacity:1;}}\
                @-ms-keyframes playerInserted{from{opacity:0.99;}to{opacity:1;}}\
                @-o-keyframes playerInserted{from{opacity:0.99;}to{opacity:1;}}\
                @keyframes playerInserted{from{opacity:0.99;}to{opacity:1;}}';
                        document.getElementsByTagName('head')[0].appendChild(style);
                    },
                    animationsHandler: function (e) {
                        if (e.animationName === 'playerInserted') {
                            this.replace(e.target);
                        }
                    },
                    replace: function (elem) {
                        if (this.done.indexOf(elem) != -1) return;
                        this.done.push(elem);
                        var player = elem.data || elem.src;
                        if (!player) return;
                        var i, find, replace = false;
                        for (i in this.rules) {
                            find = this.rules[i]['find'];
                            if (find.test(player)) {
                                replace = this.rules[i]['replace'];
                                if ('function' === typeof this.rules[i]['preHandle']) {
                                    this.rules[i]['preHandle'].bind(this, elem, find, replace, player)();
                                } else {
                                    this.reallyReplace.bind(this, elem, find, replace)();
                                }
                                break;
                            }
                        }
                    },
                    reallyReplace: function (elem, find, replace) {
                        elem.data && (elem.data = elem.data.replace(find, replace)) || elem.src && ((elem
                            .src = elem.src.replace(find, replace)) && (elem.style.display =
                            'block'));
                        var b = elem.querySelector("param[name='movie']");
                        this.reloadPlugin(elem);
                    },
                    reloadPlugin: function (elem) {
                        var nextSibling = elem.nextSibling;
                        var parentNode = elem.parentNode;
                        parentNode.removeChild(elem);
                        var newElem = elem.cloneNode(true);
                        this.done.push(newElem);
                        if (nextSibling) {
                            parentNode.insertBefore(newElem, nextSibling);
                        } else {
                            parentNode.appendChild(newElem);
                        }
                    },
                    init: function () {
                        var handler = this.animationsHandler.bind(this);
                        document.body.addEventListener('webkitAnimationStart', handler, false);
                        document.body.addEventListener('msAnimationStart', handler, false);
                        document.body.addEventListener('oAnimationStart', handler, false);
                        document.body.addEventListener('animationstart', handler, false);
                        this.addAnimations();
                    }
                };
                new A().init();
            })();
        }
        //remove baidu search ad
        if (document.URL.indexOf('www.baidu.com') >= 0) {
            if (document && document.getElementsByTagName && document.getElementById && document.body) {
                var aa = function () {
                    var all = document.body.querySelectorAll("#content_left div,#content_left table");
                    for (var i = 0; i < all.length; i++) {
                        if (/display:\s?(table|block)\s!important/.test(all[i].getAttribute("style"))) {
                            all[i].style.display = "none";
                            all[i].style.visibility = 'hidden';
                        }
                    }
                    all = document.body.querySelectorAll('.result.c-container[id="1"]');
                    //if(all.length == 1) return;
                    for (var i = 0; i < all.length; i++) {
                        if (all[i].innerHTML && all[i].innerHTML.indexOf('广告') > -1) {
                            all[i].style.display = "none";
                            all[i].style.visibility = 'hidden';
                        }
                    }
                }
                aa();
                document.getElementById('wrapper_wrapper').addEventListener('DOMSubtreeModified', aa)
            };
        }
        //remove sohu video ad
        if (document.URL.indexOf("tv.sohu.com") >= 0) {
            if (document.cookie.indexOf("fee_status=true") == -1) {
                document.cookie = 'fee_status=true'
            };
        }
        //remove 56.com video ad
        if (document.URL.indexOf("56.com") >= 0) {
            if (document.cookie.indexOf("fee_status=true") == -1) {
                document.cookie = 'fee_status=true'
            };
        }
        //fore iqiyi enable html5 player function
        if (document.URL.indexOf("iqiyi.com") >= 0) {
            if (document.cookie.indexOf("player_forcedType=h5_VOD") == -1) {
                document.cookie = 'player_forcedType=h5_VOD'
                if (localStorage.reloadTime && Date.now() - parseInt(localStorage.reloadTime) < 60000) {
                    console.log('no reload')
                } else {
                    location.reload()
                    localStorage.reloadTime = Date.now();
                }
            }
        }
    </script>
    <style type="text/css">
        object,
        embed {
            -webkit-animation-duration: .001s;
            -webkit-animation-name: playerInserted;
            -ms-animation-duration: .001s;
            -ms-animation-name: playerInserted;
            -o-animation-duration: .001s;
            -o-animation-name: playerInserted;
            animation-duration: .001s;
            animation-name: playerInserted;
        }

        @-webkit-keyframes playerInserted {
            from {
                opacity: 0.99;
            }

            to {
                opacity: 1;
            }
        }

        @-ms-keyframes playerInserted {
            from {
                opacity: 0.99;
            }

            to {
                opacity: 1;
            }
        }

        @-o-keyframes playerInserted {
            from {
                opacity: 0.99;
            }

            to {
                opacity: 1;
            }
        }

        @keyframes playerInserted {
            from {
                opacity: 0.99;
            }

            to {
                opacity: 1;
            }
        }
    </style>
</head>

<body>
    


    <div class="warpper">

        <div class="page-toc">
            <ul>
                <li><a
                        href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t01.%20%E5%88%9D%E5%A7%8B%E5%8C%96%E9%A1%B9%E7%9B%AE">1.
                        初始化项目</a></li>
                <li><a
                        href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t12.%E5%AE%89%E8%A3%85%E4%BE%9D%E8%B5%96">2.安装依赖</a>
                </li>
                <li><a
                        href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t23.%E6%94%AF%E6%8C%81typescript">3.支持typescript</a>
                </li>
                <li><a
                        href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t34.%E7%BC%96%E5%86%99webpack%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6">4.编写webpack配置文件</a>
                </li>
                <li><a
                        href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t45.%E8%AE%A1%E6%95%B0%E5%99%A8%E7%BB%84%E4%BB%B6">5.计数器组件</a>
                    <ul>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t55.1%20src/index.tsx">5.1
                                src/index.tsx</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t65.2%20components/Counter.tsx">5.2
                                components/Counter.tsx</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t75.3%20TodoInput">5.3
                                TodoInput</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t85.4%20%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BB%84%E4%BB%B6">5.4
                                函数式组件</a></li>
                    </ul>
                </li>
                <li><a
                        href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t96.%20%E4%BD%BF%E7%94%A8redux">6.
                        使用redux</a>
                    <ul>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t106.1%20src/index.tsx">6.1
                                src/index.tsx</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t116.2%20components/Counter.tsx">6.2
                                components/Counter.tsx</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t126.3%20src/store/index.tsx">6.3
                                src/store/index.tsx</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t136.4%20store/action-types.tsx">6.4
                                store/action-types.tsx</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t146.5%20reducers/index.tsx">6.5
                                reducers/index.tsx</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t156.6%20actions/index.tsx">6.6
                                actions/index.tsx</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t166.7%20types/index.tsx">6.7
                                types/index.tsx</a></li>
                    </ul>
                </li>
                <li><a
                        href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t177.%20%E5%90%88%E5%B9%B6reducers">7.
                        合并reducers</a>
                    <ul>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t187.1%20src/index.tsx">7.1
                                src/index.tsx</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t197.2%20/action-types.tsx">7.2
                                /action-types.tsx</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t207.3%20reducers/index.tsx">7.3
                                reducers/index.tsx</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t217.4%20types/index.tsx">7.4
                                types/index.tsx</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t227.5%20components/Counter1.tsx">7.5
                                components/Counter1.tsx</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t237.6%20src/components/Counter2.tsx">7.6
                                src/components/Counter2.tsx</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t247.7%20actions/counter1.tsx">7.7
                                actions/counter1.tsx</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t257.8%20actions/counter2.tsx">7.8
                                actions/counter2.tsx</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t267.9%20reducers/counter1.tsx">7.9
                                reducers/counter1.tsx</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t277.10%20reducers/counter2.tsx">7.10
                                reducers/counter2.tsx</a></li>
                    </ul>
                </li>
                <li><a
                        href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t288.%E9%85%8D%E7%BD%AE%E8%B7%AF%E7%94%B1">8.配置路由</a>
                    <ul>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t298.1%20%20src/index.tsx">8.1
                                src/index.tsx</a></li>
                    </ul>
                </li>
                <li><a
                        href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t309.%20connected-react-router">9.
                        connected-react-router</a>
                    <ul>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t319.1%20components/Counter1.tsx">9.1
                                components/Counter1.tsx</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t329.2%20src/index.tsx">9.2
                                src/index.tsx</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t339.3%20actions/counter1.tsx">9.3
                                actions/counter1.tsx</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t349.4%20src/store/index.tsx">9.4
                                src/store/index.tsx</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t359.5%20reducers/index.tsx">9.5
                                reducers/index.tsx</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t369.6%20store/history.tsx">9.6
                                store/history.tsx</a></li>
                    </ul>
                </li>
                <li><a
                        href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t3710.%20%E7%BC%96%E5%86%99%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95">10.
                        编写单元测试</a>
                    <ul>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t3810.1%20%E5%AE%89%E8%A3%85%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%E6%A8%A1%E5%9D%97">10.1
                                安装单元测试模块</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t3910.2%20%E9%85%8D%E7%BD%AEpackage.json">10.2
                                配置package.json</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t4010.3%20index.test.tsx">10.3
                                index.test.tsx</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t4110.4%20counter.spec.tsx">10.4
                                counter.spec.tsx</a></li>
                    </ul>
                </li>
            </ul>
        </div>

        <div class="content markdown-body">
            <h2 id="t01. 初始化项目">1. 初始化项目 <a
                    href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t01.%20%E5%88%9D%E5%A7%8B%E5%8C%96%E9%A1%B9%E7%9B%AE">
                    # </a></h2>
            <pre><code class="lang-js">mkdir react-typesript
cd react-typesript
cnpm init -y
touch .gitignore  <span class="hljs-comment">//mac或linux</span>
type nul &gt; .gitignore  <span class="hljs-comment">//window</span>
</code></pre>
            <h2 id="t12.安装依赖">2.安装依赖 <a
                    href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t12.%E5%AE%89%E8%A3%85%E4%BE%9D%E8%B5%96">
                    # </a></h2>
            <ul>
                <li>@types开头的包都是typeScript的声明文件，可以进入node_modules/@types/XX/index.d.ts进行查看</li>
                <li><a href="https://github.com/DefinitelyTyped/DefinitelyTyped">声明文件</a></li>
            </ul>
            <pre><code class="lang-js">cnpm i react react-dom @types/react @types/react-dom react-router-dom @types/react-router-dom react-transition-group @types/react-transition-group react-swipe @types/react-swipe  -S
cnpm i webpack webpack-cli webpack-dev-server html-webpack-plugin -D
cnpm i typescript ts-loader source-map-loader -D
cnpm i redux react-redux @types/react-redux redux-thunk  redux-logger @types/redux-logger -S
cnpm i connected-react-router -S
</code></pre>
            <table>
                <thead>
                    <tr>
                        <th style="text-align:left">包名</th>
                        <th style="text-align:left">作用</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td style="text-align:left">react @types/react</td>
                        <td style="text-align:left">react核心库</td>
                    </tr>
                    <tr>
                        <td style="text-align:left">react-dom @types/react-dom</td>
                        <td style="text-align:left">react操作DOM库</td>
                    </tr>
                    <tr>
                        <td style="text-align:left">react-router-dom @types/react-router-dom</td>
                        <td style="text-align:left">react路由库</td>
                    </tr>
                    <tr>
                        <td style="text-align:left">react-transition-group @types/react-transition-group</td>
                        <td style="text-align:left">react动画库</td>
                    </tr>
                    <tr>
                        <td style="text-align:left">react-swipe @types/react-swipe</td>
                        <td style="text-align:left">react轮播图组件库</td>
                    </tr>
                    <tr>
                        <td style="text-align:left">webpack</td>
                        <td style="text-align:left">webpack核心库</td>
                    </tr>
                    <tr>
                        <td style="text-align:left">webpack-cli</td>
                        <td style="text-align:left">webpack命令行文件</td>
                    </tr>
                    <tr>
                        <td style="text-align:left">webpack-dev-server</td>
                        <td style="text-align:left">webpack开发服务器</td>
                    </tr>
                    <tr>
                        <td style="text-align:left">html-webpack-plugin</td>
                        <td style="text-align:left">webpack用于生成html的插件</td>
                    </tr>
                    <tr>
                        <td style="text-align:left">redux</td>
                        <td style="text-align:left">全局状态管理库</td>
                    </tr>
                    <tr>
                        <td style="text-align:left">react-redux @types/react-redux</td>
                        <td style="text-align:left">连接react和redux的库</td>
                    </tr>
                    <tr>
                        <td style="text-align:left">redux-thunk</td>
                        <td style="text-align:left">可以让store派发一个函数的中间件</td>
                    </tr>
                    <tr>
                        <td style="text-align:left">redux-logger @types/redux-logger</td>
                        <td style="text-align:left">可以在状态改变前后打印状态的中间件</td>
                    </tr>
                    <tr>
                        <td style="text-align:left">typescript</td>
                        <td style="text-align:left">JavaScript语言扩展</td>
                    </tr>
                    <tr>
                        <td style="text-align:left">ts-loader</td>
                        <td style="text-align:left">
                            可以让Webpack使用TypeScript的标准配置文件<code>tsconfig.json</code>编译TypeScript代码</td>
                    </tr>
                    <tr>
                        <td style="text-align:left">source-map-loader</td>
                        <td style="text-align:left">
                            使用任意来自Typescript的sourcemap输出，以此通知webpack何时生成自己的sourcemaps,这让你在调试最终生成的文件时就好像在调试TypeScript源码一样
                        </td>
                    </tr>
                </tbody>
            </table>
            <ul>
                <li>ts-loader可以让Webpack使用TypeScript的标准配置文件tsconfig.json编译TypeScript代码。</li>
                <li>source-map-loader使用任意来自Typescript的sourcemap输出，以此通知webpack何时生成自己的sourcemaps,这让你在调试最终生成的文件时就好像在调试TypeScript源码一样。
                </li>
            </ul>
            <h2 id="t23.支持typescript">3.支持typescript <a
                    href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t23.%E6%94%AF%E6%8C%81typescript">
                    # </a></h2>
            <p>需要生成一个tsconfig.json文件来告诉ts-loader如何编译代码TypeScript代码</p>
            <pre><code class="lang-js">tsc --init
</code></pre>
            <pre><code class="lang-json">{
  <span class="hljs-attr">"compilerOptions"</span>: {
    <span class="hljs-attr">"outDir"</span>: <span class="hljs-string">"./dist"</span>,
    <span class="hljs-attr">"sourceMap"</span>: <span class="hljs-literal">true</span>,
    <span class="hljs-attr">"noImplicitAny"</span>: <span class="hljs-literal">true</span>,
    <span class="hljs-attr">"module"</span>: <span class="hljs-string">"commonjs"</span>,
    <span class="hljs-attr">"target"</span>: <span class="hljs-string">"es5"</span>,
    <span class="hljs-attr">"jsx"</span>: <span class="hljs-string">"react"</span>
  },
  <span class="hljs-attr">"include"</span>: [
    <span class="hljs-string">"./src/**/*"</span>
  ]
}
</code></pre>
            <ul>
                <li>outDir 指定输出目录</li>
                <li>sourceMap：把 ts 文件编译成 js 文件的时候，同时生成对应的sourceMap文件</li>
                <li>noImplicitAny：如果为true的话，TypeScript 编译器无法推断出类型时，它仍然会生成 JavaScript 文件，但是它也会报告一个错误</li>
                <li>module：代码规范</li>
                <li>target：转换成es5</li>
                <li>jsx：react模式会生成React.createElement，在使用前不需要再进行转换操作了，输出文件的扩展名为.js</li>
                <li>include：需要编译的目录。</li>
            </ul>
            <h2 id="t34.编写webpack配置文件">4.编写webpack配置文件 <a
                    href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t34.%E7%BC%96%E5%86%99webpack%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6">
                    # </a></h2>
            <p>webpack.config.js</p>
            <pre><code class="lang-js"><span class="hljs-keyword">const</span> webpack=<span class="hljs-built_in">require</span>(<span class="hljs-string">'webpack'</span>);
<span class="hljs-keyword">const</span> HtmlWebpackPlugin=<span class="hljs-built_in">require</span>(<span class="hljs-string">'html-webpack-plugin'</span>);
<span class="hljs-keyword">const</span> path=<span class="hljs-built_in">require</span>(<span class="hljs-string">'path'</span>);
<span class="hljs-built_in">module</span>.exports={
    <span class="hljs-attr">mode</span>: <span class="hljs-string">'development'</span>,
    <span class="hljs-attr">entry</span>: <span class="hljs-string">"./src/index.tsx"</span>,
    <span class="hljs-attr">output</span>: {
        <span class="hljs-attr">filename</span>: <span class="hljs-string">"bundle.js"</span>,
        <span class="hljs-attr">path</span>: path.join(__dirname,<span class="hljs-string">'dist'</span>)
    },
    <span class="hljs-attr">devtool</span>: <span class="hljs-string">"source-map"</span>,
    <span class="hljs-attr">devServer</span>: {
        <span class="hljs-attr">hot</span>: <span class="hljs-literal">true</span>,
        <span class="hljs-attr">contentBase</span>: path.join(__dirname,<span class="hljs-string">'dist'</span>),
        <span class="hljs-attr">historyApiFallback</span>: {
            <span class="hljs-attr">index</span>:<span class="hljs-string">'./index.html'</span>
        }
    },
    <span class="hljs-attr">resolve</span>: {
        <span class="hljs-attr">extensions</span>: [<span class="hljs-string">".ts"</span>, <span class="hljs-string">".tsx"</span>, <span class="hljs-string">".js"</span>, <span class="hljs-string">".json"</span>]
    },

    <span class="hljs-attr">module</span>: {
        <span class="hljs-attr">rules</span>: [{
                <span class="hljs-attr">test</span>: <span class="hljs-regexp">/\.tsx?$/</span>,
                <span class="hljs-attr">loader</span>: <span class="hljs-string">"ts-loader"</span>
            },
            {
                <span class="hljs-attr">enforce</span>: <span class="hljs-string">"pre"</span>,
                <span class="hljs-attr">test</span>: <span class="hljs-regexp">/\.tsx$/</span>,
                <span class="hljs-attr">loader</span>: <span class="hljs-string">"source-map-loader"</span>
            }
        ]
    },

    <span class="hljs-attr">plugins</span>: [
        <span class="hljs-keyword">new</span> HtmlWebpackPlugin({
            <span class="hljs-attr">template</span>:<span class="hljs-string">'./src/index.html'</span>
        }),
        <span class="hljs-keyword">new</span> webpack.HotModuleReplacementPlugin()
    ],
};
</code></pre>
            <h2 id="t45.计数器组件">5.计数器组件 <a
                    href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t45.%E8%AE%A1%E6%95%B0%E5%99%A8%E7%BB%84%E4%BB%B6">
                    # </a></h2>
            <h3 id="t55.1 src/index.tsx">5.1 src/index.tsx <a
                    href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t55.1%20src/index.tsx"> #
                </a></h3>
            <pre><code class="lang-js"><span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> React <span class="hljs-keyword">from</span> <span class="hljs-string">'react'</span>;
<span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> ReactDOM <span class="hljs-keyword">from</span> <span class="hljs-string">'react-dom'</span>;
<span class="hljs-keyword">import</span> Counter <span class="hljs-keyword">from</span> <span class="hljs-string">'./components/Counter'</span>;
ReactDOM.render((
    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Counter</span> <span class="hljs-attr">number</span>=<span class="hljs-string">{100}/</span>&gt;</span>
),document.getElementById('root'));
</span></code></pre>
            <h3 id="t65.2 components/Counter.tsx">5.2 components/Counter.tsx <a
                    href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t65.2%20components/Counter.tsx">
                    # </a></h3>
            <p>src/components/Counter.tsx</p>
            <pre><code class="lang-js"><span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> React <span class="hljs-keyword">from</span> <span class="hljs-string">'react'</span>;
<span class="hljs-keyword">export</span> interface Props{
    <span class="hljs-attr">number</span>: number
}
<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Counter</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span>&lt;<span class="hljs-title">Props</span>&gt;</span>{
    render() {
        <span class="hljs-keyword">const</span> {number}=<span class="hljs-keyword">this</span>.props;
        <span class="hljs-keyword">return</span> (
            <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>
                <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>{number}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>
            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>
        )
    }
}
</code></pre>
            <h3 id="t75.3 TodoInput">5.3 TodoInput <a
                    href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t75.3%20TodoInput"> # </a>
            </h3>
            <p>src\components\TodoInput.tsx</p>
            <pre><code class="lang-js"><span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> React <span class="hljs-keyword">from</span> <span class="hljs-string">'react'</span>;
<span class="hljs-keyword">export</span> interface Props{
    number?: number
}
interface State {
    <span class="hljs-attr">value</span>:string
}
<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">TodoInput</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span>&lt;<span class="hljs-title">Props</span>,<span class="hljs-title">State</span>&gt;</span>{
    public <span class="hljs-keyword">static</span> defaultProps:Props = {
        <span class="hljs-attr">number</span>:<span class="hljs-number">0</span>
    }
    public state = {<span class="hljs-attr">value</span>:<span class="hljs-string">''</span>}
    private handleChange = <span class="hljs-function">(<span class="hljs-params">event:React.ChangeEvent&lt;HTMLInputElement&gt;</span>)=&gt;</span>{
        <span class="hljs-keyword">this</span>.setState({<span class="hljs-attr">value</span>:event.target.value});
    }
    public render() {
        <span class="hljs-keyword">return</span> (
            <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">value</span>=<span class="hljs-string">{this.state.value}</span> <span class="hljs-attr">onChange</span>=<span class="hljs-string">{(event)</span>=&gt;</span>this.handleChange(event)}/&gt;
        )
    }
}
</span></code></pre>
            <h3 id="t85.4 函数式组件">5.4 函数式组件 <a
                    href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t85.4%20%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BB%84%E4%BB%B6">
                    # </a></h3>
            <p>src\components\TodoItem.tsx</p>
            <pre><code class="lang-js"><span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> React <span class="hljs-keyword">from</span> <span class="hljs-string">'react'</span>;
<span class="hljs-keyword">const</span> todoItemStyle:React.CSSProperties = {
    <span class="hljs-attr">color</span>:<span class="hljs-string">'red'</span>,
    <span class="hljs-attr">backgroundColor</span>:<span class="hljs-string">'green'</span>
}
interface Props {
    <span class="hljs-attr">content</span>:string;
}
<span class="hljs-keyword">const</span> TodoItem:React.SFC&lt;Props&gt; = <span class="hljs-function">(<span class="hljs-params">props:Props</span>)=&gt;</span>(
    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">style</span>=<span class="hljs-string">{todoItemStyle}</span>&gt;</span>{props.content}<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span>
)
TodoItem.defaultProps;

<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> TodoItem;
</code></pre>
            <h2 id="t96. 使用redux">6. 使用redux <a
                    href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t96.%20%E4%BD%BF%E7%94%A8redux">
                    # </a></h2>
            <h3 id="t106.1 src/index.tsx">6.1 src/index.tsx <a
                    href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t106.1%20src/index.tsx"> #
                </a></h3>
            <p>src/index.tsx</p>
            <pre><code class="lang-js"><span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> React <span class="hljs-keyword">from</span> <span class="hljs-string">'react'</span>;
<span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> ReactDOM <span class="hljs-keyword">from</span> <span class="hljs-string">'react-dom'</span>;
<span class="hljs-keyword">import</span> Counter <span class="hljs-keyword">from</span> <span class="hljs-string">'./components/Counter'</span>;
<span class="hljs-keyword">import</span> { Provider } <span class="hljs-keyword">from</span> <span class="hljs-string">'react-redux'</span>;
<span class="hljs-keyword">import</span> store <span class="hljs-keyword">from</span> <span class="hljs-string">'./store'</span>;
ReactDOM.render((
    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Provider</span> <span class="hljs-attr">store</span>=<span class="hljs-string">{store}</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-name">Counter</span>/&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-name">Provider</span>&gt;</span></span>
),<span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">'root'</span>));
</code></pre>
            <h3 id="t116.2 components/Counter.tsx">6.2 components/Counter.tsx <a
                    href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t116.2%20components/Counter.tsx">
                    # </a></h3>
            <p>src/components/Counter.tsx</p>
            <pre><code class="lang-js"><span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> React <span class="hljs-keyword">from</span> <span class="hljs-string">'react'</span>;
<span class="hljs-keyword">import</span> { connect } <span class="hljs-keyword">from</span> <span class="hljs-string">'react-redux'</span>;
<span class="hljs-keyword">import</span> { Store } <span class="hljs-keyword">from</span> <span class="hljs-string">'../store/types'</span>;
<span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> actions <span class="hljs-keyword">from</span> <span class="hljs-string">'../store/actions'</span>;
<span class="hljs-keyword">export</span> interface Props{
    <span class="hljs-attr">number</span>: number,
    <span class="hljs-attr">increment</span>: any,
    <span class="hljs-attr">decrement</span>: any
}
<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Counter</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span>&lt;<span class="hljs-title">Props</span>&gt;</span>{
    render() {
        <span class="hljs-keyword">const</span> {number,increment,decrement}=<span class="hljs-keyword">this</span>.props;
        <span class="hljs-keyword">return</span> (
            <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>
                <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>{number}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>
                <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">{increment}</span>&gt;</span>+<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
                <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">{decrement}</span>&gt;</span>-<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>
        )
    }
}

<span class="hljs-keyword">let</span> mapStateToProps=<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">state:Store</span>):<span class="hljs-title">Store</span> </span>{
    <span class="hljs-keyword">return</span> state;
}
<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> connect(mapStateToProps,actions)(Counter);
</code></pre>
            <h3 id="t126.3 src/store/index.tsx">6.3 src/store/index.tsx <a
                    href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t126.3%20src/store/index.tsx">
                    # </a></h3>
            <p>src/store/index.tsx</p>
            <pre><code class="lang-js"><span class="hljs-keyword">import</span> {createStore } <span class="hljs-keyword">from</span> <span class="hljs-string">'redux'</span>
<span class="hljs-keyword">import</span> reducers <span class="hljs-keyword">from</span> <span class="hljs-string">'./reducers'</span>;
<span class="hljs-keyword">let</span> store=createStore(reducers);
<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> store;
</code></pre>
            <h3 id="t136.4 store/action-types.tsx">6.4 store/action-types.tsx <a
                    href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t136.4%20store/action-types.tsx">
                    # </a></h3>
            <p>src/store/action-types.tsx</p>
            <pre><code class="lang-js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> INCREMENT=<span class="hljs-string">'INCREMENT'</span>;
<span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> DECREMENT=<span class="hljs-string">'DECREMENT'</span>;
</code></pre>
            <h3 id="t146.5 reducers/index.tsx">6.5 reducers/index.tsx <a
                    href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t146.5%20reducers/index.tsx">
                    # </a></h3>
            <p>src/store/reducers/index.tsx</p>
            <pre><code class="lang-js"><span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> types <span class="hljs-keyword">from</span> <span class="hljs-string">'../action-types'</span>;
<span class="hljs-keyword">import</span> { Store } <span class="hljs-keyword">from</span> <span class="hljs-string">'../types'</span>;
<span class="hljs-keyword">import</span> {Action} <span class="hljs-keyword">from</span> <span class="hljs-string">'../actions'</span>;
<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">state: Store={ number: <span class="hljs-number">0</span> },action: Action</span>): <span class="hljs-title">Store</span> </span>{
    <span class="hljs-keyword">switch</span> (action.type) {
        <span class="hljs-keyword">case</span> types.INCREMENT:
            <span class="hljs-keyword">return</span> {...state,<span class="hljs-attr">number</span>:state.number+<span class="hljs-number">1</span>};
        <span class="hljs-keyword">case</span> types.DECREMENT:
            <span class="hljs-keyword">return</span> {...state,<span class="hljs-attr">number</span>:state.number<span class="hljs-number">-1</span>};
        <span class="hljs-keyword">default</span>:
            <span class="hljs-keyword">return</span> state;
    }
}
</code></pre>
            <h3 id="t156.6 actions/index.tsx">6.6 actions/index.tsx <a
                    href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t156.6%20actions/index.tsx">
                    # </a></h3>
            <p>src/store/actions/index.tsx</p>
            <pre><code class="lang-js"><span class="hljs-keyword">import</span> {INCREMENT,DECREMENT} <span class="hljs-keyword">from</span> <span class="hljs-string">'../action-types'</span>;
<span class="hljs-keyword">export</span> interface Increment{
    <span class="hljs-attr">type</span>:<span class="hljs-keyword">typeof</span> INCREMENT
}
<span class="hljs-keyword">export</span> interface Decrement{
    <span class="hljs-attr">type</span>:<span class="hljs-keyword">typeof</span> DECREMENT
}
<span class="hljs-keyword">export</span> type Action=Increment|Decrement;

<span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">increment</span>(<span class="hljs-params"></span>): <span class="hljs-title">Increment</span> </span>{
    <span class="hljs-keyword">return</span> { <span class="hljs-attr">type</span>: INCREMENT };
}
<span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">decrement</span>(<span class="hljs-params"></span>):<span class="hljs-title">Decrement</span> </span>{
    <span class="hljs-keyword">return</span> { <span class="hljs-attr">type</span>: DECREMENT };
}
</code></pre>
            <h3 id="t166.7 types/index.tsx">6.7 types/index.tsx <a
                    href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t166.7%20types/index.tsx">
                    # </a></h3>
            <p>src/store/types/index.tsx</p>
            <pre><code class="lang-js"><span class="hljs-keyword">export</span> interface Store{
    <span class="hljs-attr">number</span>: number
}
</code></pre>
            <h2 id="t177. 合并reducers">7. 合并reducers <a
                    href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t177.%20%E5%90%88%E5%B9%B6reducers">
                    # </a></h2>
            <h3 id="t187.1 src/index.tsx">7.1 src/index.tsx <a
                    href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t187.1%20src/index.tsx"> #
                </a></h3>
            <pre><code class="lang-js"><span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> React <span class="hljs-keyword">from</span> <span class="hljs-string">'react'</span>;
<span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> ReactDOM <span class="hljs-keyword">from</span> <span class="hljs-string">'react-dom'</span>;
<span class="hljs-keyword">import</span> Counter1 <span class="hljs-keyword">from</span> <span class="hljs-string">'./components/Counter1'</span>;
<span class="hljs-keyword">import</span> Counter2 <span class="hljs-keyword">from</span> <span class="hljs-string">'./components/Counter2'</span>;
<span class="hljs-keyword">import</span> { Provider } <span class="hljs-keyword">from</span> <span class="hljs-string">'react-redux'</span>;
<span class="hljs-keyword">import</span> store <span class="hljs-keyword">from</span> <span class="hljs-string">'./store'</span>;
ReactDOM.render((
    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Provider</span> <span class="hljs-attr">store</span>=<span class="hljs-string">{store}</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-name">React.Fragment</span>&gt;</span>
          <span class="hljs-tag">&lt;<span class="hljs-name">Counter1</span>/&gt;</span>
          <span class="hljs-tag">&lt;<span class="hljs-name">Counter2</span>/&gt;</span>
        <span class="hljs-tag">&lt;/<span class="hljs-name">React.Fragment</span>&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-name">Provider</span>&gt;</span>
),document.getElementById('root'));
</span></code></pre>
            <h3 id="t197.2 /action-types.tsx">7.2 /action-types.tsx <a
                    href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t197.2%20/action-types.tsx">
                    # </a></h3>
            <p>src/store/action-types.tsx</p>
            <pre><code class="lang-js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> INCREMENT=<span class="hljs-string">'INCREMENT'</span>;
<span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> DECREMENT=<span class="hljs-string">'DECREMENT'</span>;

<span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> INCREMENT1=<span class="hljs-string">'INCREMENT1'</span>;
<span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> DECREMENT1=<span class="hljs-string">'DECREMENT1'</span>;

<span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> INCREMENT2=<span class="hljs-string">'INCREMENT2'</span>;
<span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> DECREMENT2=<span class="hljs-string">'DECREMENT2'</span>;
</code></pre>
            <h3 id="t207.3 reducers/index.tsx">7.3 reducers/index.tsx <a
                    href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t207.3%20reducers/index.tsx">
                    # </a></h3>
            <p>src/store/reducers/index.tsx</p>
            <pre><code class="lang-js"><span class="hljs-keyword">import</span> counter1 <span class="hljs-keyword">from</span> <span class="hljs-string">'./counter1'</span>;
<span class="hljs-keyword">import</span> counter2 <span class="hljs-keyword">from</span> <span class="hljs-string">'./counter2'</span>;
<span class="hljs-keyword">import</span> { combineReducers } <span class="hljs-keyword">from</span> <span class="hljs-string">'redux'</span>;
<span class="hljs-keyword">let</span> reducers = {
    counter1,
    counter2
};
type ReducersType = <span class="hljs-keyword">typeof</span> reducers;
type RootState = {
    [key <span class="hljs-keyword">in</span> keyof <span class="hljs-keyword">typeof</span> reducers]:ReturnType&lt;<span class="hljs-keyword">typeof</span> reducers[key]&gt;
}
<span class="hljs-keyword">export</span> {RootState}

<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> combineReducers(reducers);
</code></pre>
            <h3 id="t217.4 types/index.tsx">7.4 types/index.tsx <a
                    href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t217.4%20types/index.tsx">
                    # </a></h3>
            <p>src/store/types/index.tsx</p>
            <pre><code class="lang-js"><span class="hljs-keyword">export</span> interface Store{
    <span class="hljs-attr">counter1</span>: Counter1,
    <span class="hljs-attr">counter2</span>: Counter2
}
<span class="hljs-keyword">export</span> interface Counter1{
    <span class="hljs-attr">number</span>: number
}
<span class="hljs-keyword">export</span> interface Counter2{
    <span class="hljs-attr">number</span>: number
}
</code></pre>
            <h3 id="t227.5 components/Counter1.tsx">7.5 components/Counter1.tsx <a
                    href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t227.5%20components/Counter1.tsx">
                    # </a></h3>
            <p>src/components/Counter1.tsx</p>
            <pre><code class="lang-js"><span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> React <span class="hljs-keyword">from</span> <span class="hljs-string">'react'</span>;
<span class="hljs-keyword">import</span> { connect } <span class="hljs-keyword">from</span> <span class="hljs-string">'react-redux'</span>;
<span class="hljs-keyword">import</span> {RootState} <span class="hljs-keyword">from</span> <span class="hljs-string">'../store/reducers/index'</span>;
<span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> types <span class="hljs-keyword">from</span> <span class="hljs-string">'../store/types'</span>;
<span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> actions <span class="hljs-keyword">from</span> <span class="hljs-string">'../store/actions/counter1'</span>;
type StateProps = ReturnType&lt;<span class="hljs-keyword">typeof</span> mapStateToProps&gt;;
type DispatchProps =<span class="hljs-keyword">typeof</span> actions;
type Props = StateProps &amp; DispatchProps;

<span class="hljs-comment">/* export interface Props{
    number: number,
    increment1: any,
    decrement1: any
} */</span>
<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Counter1</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span>&lt;<span class="hljs-title">Props</span>&gt;</span>{
    render() {
        <span class="hljs-keyword">const</span> {number,increment1,decrement1}=<span class="hljs-keyword">this</span>.props;
        <span class="hljs-keyword">return</span> (
            <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>
                <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>{number}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>
                <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">{increment1}</span>&gt;</span>+<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
         <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">{()</span>=&gt;</span>incrementAmount(5)}&gt;+5<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
                <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">{decrement1}</span>&gt;</span>-<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>
        )
    }
}

<span class="hljs-keyword">let</span> mapStateToProps=<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">state:RootState</span>):<span class="hljs-title">types</span>.<span class="hljs-title">Counter1</span> </span>{
    <span class="hljs-keyword">return</span> state.counter1;
}

<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> connect(mapStateToProps,actions)(Counter1);
</code></pre>
            <h3 id="t237.6 src/components/Counter2.tsx">7.6 src/components/Counter2.tsx <a
                    href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t237.6%20src/components/Counter2.tsx">
                    # </a></h3>
            <p> src/components/Counter2.tsx</p>
            <pre><code class="lang-js"><span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> React <span class="hljs-keyword">from</span> <span class="hljs-string">'react'</span>;
<span class="hljs-keyword">import</span> { connect } <span class="hljs-keyword">from</span> <span class="hljs-string">'react-redux'</span>;
<span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> types <span class="hljs-keyword">from</span> <span class="hljs-string">'../store/types'</span>;
<span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> actions <span class="hljs-keyword">from</span> <span class="hljs-string">'../store/actions/counter2'</span>;
<span class="hljs-keyword">export</span> interface Props{
    <span class="hljs-attr">number</span>: number,
    <span class="hljs-attr">increment2</span>: any,
    <span class="hljs-attr">decrement2</span>: any
}
<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Counter2</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span>&lt;<span class="hljs-title">Props</span>&gt;</span>{
    render() {
        <span class="hljs-keyword">const</span> {number,increment2,decrement2}=<span class="hljs-keyword">this</span>.props;
        <span class="hljs-keyword">return</span> (
            <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>
                <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>{number}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>
                <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">{increment2}</span>&gt;</span>+<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
                <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">{decrement2}</span>&gt;</span>-<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>
        )
    }
}

<span class="hljs-keyword">let</span> mapStateToProps=<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">state:types.Store</span>):<span class="hljs-title">types</span>.<span class="hljs-title">Counter2</span> </span>{
    <span class="hljs-keyword">return</span> state.counter2;
}

<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> connect(mapStateToProps,actions)(Counter2);
</code></pre>
            <h3 id="t247.7 actions/counter1.tsx">7.7 actions/counter1.tsx <a
                    href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t247.7%20actions/counter1.tsx">
                    # </a></h3>
            <p>src/store/actions/counter1.tsx</p>
            <pre><code class="lang-js"><span class="hljs-keyword">import</span> {INCREMENT1,DECREMENT1} <span class="hljs-keyword">from</span> <span class="hljs-string">'../action-types'</span>;
<span class="hljs-keyword">export</span> interface Increment1{
    <span class="hljs-attr">type</span>:<span class="hljs-keyword">typeof</span> INCREMENT1
}
<span class="hljs-keyword">export</span> interface IncrementAmount{
    <span class="hljs-attr">type</span>:<span class="hljs-keyword">typeof</span> INCREMENT_AMOUNT,
    <span class="hljs-attr">payload</span>:number
}
<span class="hljs-keyword">export</span> interface Decrement1{
    <span class="hljs-attr">type</span>:<span class="hljs-keyword">typeof</span> DECREMENT1
}
<span class="hljs-keyword">export</span> type Action=Increment1|Decrement1;

<span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">increment1</span>(<span class="hljs-params"></span>): <span class="hljs-title">Increment1</span> </span>{
    <span class="hljs-keyword">return</span> { <span class="hljs-attr">type</span>: INCREMENT1 };
}
<span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">incrementAmount</span>(<span class="hljs-params">amount:number</span>):<span class="hljs-title">IncrementAmount</span> </span>{
    <span class="hljs-keyword">return</span> { <span class="hljs-attr">type</span>: INCREMENT_AMOUNT,<span class="hljs-attr">payload</span>:amount };
}
<span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">decrement1</span>(<span class="hljs-params"></span>):<span class="hljs-title">Decrement1</span> </span>{
    <span class="hljs-keyword">return</span> { <span class="hljs-attr">type</span>: DECREMENT1 };
}
</code></pre>
            <h3 id="t257.8 actions/counter2.tsx">7.8 actions/counter2.tsx <a
                    href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t257.8%20actions/counter2.tsx">
                    # </a></h3>
            <p>src/store/actions/counter2.tsx</p>
            <pre><code class="lang-js"><span class="hljs-keyword">import</span> {INCREMENT2,DECREMENT2} <span class="hljs-keyword">from</span> <span class="hljs-string">'../action-types'</span>;
<span class="hljs-keyword">export</span> interface Increment2{
    <span class="hljs-attr">type</span>:<span class="hljs-keyword">typeof</span> INCREMENT2
}
<span class="hljs-keyword">export</span> interface Decrement2{
    <span class="hljs-attr">type</span>:<span class="hljs-keyword">typeof</span> DECREMENT2
}
<span class="hljs-keyword">export</span> type Action=Increment2|Decrement2;

<span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">increment2</span>(<span class="hljs-params"></span>): <span class="hljs-title">Increment2</span> </span>{
    <span class="hljs-keyword">return</span> { <span class="hljs-attr">type</span>: INCREMENT2 };
}
<span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">decrement2</span>(<span class="hljs-params"></span>):<span class="hljs-title">Decrement2</span> </span>{
    <span class="hljs-keyword">return</span> { <span class="hljs-attr">type</span>: DECREMENT2 };
}
</code></pre>
            <h3 id="t267.9 reducers/counter1.tsx">7.9 reducers/counter1.tsx <a
                    href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t267.9%20reducers/counter1.tsx">
                    # </a></h3>
            <p>src/store/reducers/counter1.tsx</p>
            <pre><code class="lang-js"><span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> types <span class="hljs-keyword">from</span> <span class="hljs-string">'../action-types'</span>;
<span class="hljs-keyword">import</span> { Counter1 } <span class="hljs-keyword">from</span> <span class="hljs-string">'../types'</span>;
<span class="hljs-keyword">import</span> {Action} <span class="hljs-keyword">from</span> <span class="hljs-string">'../actions/counter1'</span>;
<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">state: Counter1={ number: <span class="hljs-number">0</span> },action: Action</span>): <span class="hljs-title">Counter1</span> </span>{
    <span class="hljs-keyword">switch</span> (action.type) {
        <span class="hljs-keyword">case</span> types.INCREMENT1:
            <span class="hljs-keyword">return</span> {...state,<span class="hljs-attr">number</span>:state.number+<span class="hljs-number">1</span>};
        <span class="hljs-keyword">case</span> types.DECREMENT1:
            <span class="hljs-keyword">return</span> {...state,<span class="hljs-attr">number</span>:state.number<span class="hljs-number">-1</span>};
        <span class="hljs-keyword">default</span>:
            <span class="hljs-keyword">return</span> state;
    }
}
</code></pre>
            <h3 id="t277.10 reducers/counter2.tsx">7.10 reducers/counter2.tsx <a
                    href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t277.10%20reducers/counter2.tsx">
                    # </a></h3>
            <p>src/store/reducers/counter2.tsx</p>
            <pre><code class="lang-js"><span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> types <span class="hljs-keyword">from</span> <span class="hljs-string">'../action-types'</span>;
<span class="hljs-keyword">import</span> { Counter2 } <span class="hljs-keyword">from</span> <span class="hljs-string">'../types'</span>;
<span class="hljs-keyword">import</span> {Action} <span class="hljs-keyword">from</span> <span class="hljs-string">'../actions/counter2'</span>;
<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">state: Counter2={ number: <span class="hljs-number">0</span> },action: Action</span>): <span class="hljs-title">Counter2</span> </span>{
    <span class="hljs-keyword">switch</span> (action.type) {
        <span class="hljs-keyword">case</span> types.INCREMENT2:
            <span class="hljs-keyword">return</span> {...state,<span class="hljs-attr">number</span>:state.number+<span class="hljs-number">1</span>};
        <span class="hljs-keyword">case</span> types.DECREMENT2:
            <span class="hljs-keyword">return</span> {...state,<span class="hljs-attr">number</span>:state.number<span class="hljs-number">-1</span>};
        <span class="hljs-keyword">default</span>:
            <span class="hljs-keyword">return</span> state;
    }
}
</code></pre>
            <h2 id="t288.配置路由">8.配置路由 <a
                    href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t288.%E9%85%8D%E7%BD%AE%E8%B7%AF%E7%94%B1">
                    # </a></h2>
            <h3 id="t298.1  src/index.tsx">8.1 src/index.tsx <a
                    href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t298.1%20%20src/index.tsx">
                    # </a></h3>
            <pre><code class="lang-js"><span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> React <span class="hljs-keyword">from</span> <span class="hljs-string">'react'</span>;
<span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> ReactDOM <span class="hljs-keyword">from</span> <span class="hljs-string">'react-dom'</span>;
<span class="hljs-keyword">import</span> Counter1 <span class="hljs-keyword">from</span> <span class="hljs-string">'./components/Counter1'</span>;
<span class="hljs-keyword">import</span> Counter2 <span class="hljs-keyword">from</span> <span class="hljs-string">'./components/Counter2'</span>;
<span class="hljs-keyword">import</span> { Provider } <span class="hljs-keyword">from</span> <span class="hljs-string">'react-redux'</span>;
<span class="hljs-keyword">import</span> store <span class="hljs-keyword">from</span> <span class="hljs-string">'./store'</span>;
<span class="hljs-keyword">import</span> {BrowserRouter <span class="hljs-keyword">as</span> Router, Route,Link } <span class="hljs-keyword">from</span> <span class="hljs-string">'react-router-dom'</span>;
ReactDOM.render((
    &lt;Provider store={store}&gt;
        &lt;Router &gt;
            &lt;React.Fragment&gt;
                &lt;Link to="/counter1"&gt;counter1&lt;/Link&gt;
                &lt;Link to="/counter2"&gt;counter2&lt;/Link&gt;
                &lt;Route path="/counter1" component={Counter1} /&gt;
                  &lt;Route path="/counter2" component={Counter2}/&gt;
         &lt;/React.Fragment&gt;
        &lt;/Router&gt;

    &lt;/Provider&gt;
),document.getElementById('root'));
</code></pre>
            <h2 id="t309. connected-react-router">9. connected-react-router <a
                    href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t309.%20connected-react-router">
                    # </a></h2>
            <ul>
                <li><a href="https://github.com/supasate/connected-react-router">connected-react-router</a></li>
            </ul>
            <h3 id="t319.1 components/Counter1.tsx">9.1 components/Counter1.tsx <a
                    href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t319.1%20components/Counter1.tsx">
                    # </a></h3>
            <p>src/components/Counter1.tsx</p>
            <pre><code class="lang-js"><span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> React <span class="hljs-keyword">from</span> <span class="hljs-string">'react'</span>;
<span class="hljs-keyword">import</span> { connect } <span class="hljs-keyword">from</span> <span class="hljs-string">'react-redux'</span>;
<span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> types <span class="hljs-keyword">from</span> <span class="hljs-string">'../store/types'</span>;
<span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> actions <span class="hljs-keyword">from</span> <span class="hljs-string">'../store/actions/counter1'</span>;
<span class="hljs-keyword">export</span> interface Props{
    <span class="hljs-attr">number</span>: number,
    <span class="hljs-attr">increment1</span>: any,
    <span class="hljs-attr">decrement1</span>: any,
    <span class="hljs-attr">goCounter2</span>: any
}
<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Counter1</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span>&lt;<span class="hljs-title">Props</span>&gt;</span>{
    render() {
        <span class="hljs-keyword">const</span> {number,increment1,decrement1,goCounter2}=<span class="hljs-keyword">this</span>.props;
        <span class="hljs-keyword">return</span> (
            <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>
                <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>{number}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>
                <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">{increment1}</span>&gt;</span>+<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
                <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">{decrement1}</span>&gt;</span>-<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
                <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">{goCounter2}</span>&gt;</span>goCounter2<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>
        )
    }
}

<span class="hljs-keyword">let</span> mapStateToProps=<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">state:types.Store</span>):<span class="hljs-title">types</span>.<span class="hljs-title">Counter1</span> </span>{
    <span class="hljs-keyword">return</span> state.counter1;
}

<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> connect(mapStateToProps,actions)(Counter1);
</code></pre>
            <h3 id="t329.2 src/index.tsx">9.2 src/index.tsx <a
                    href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t329.2%20src/index.tsx"> #
                </a></h3>
            <p>src/index.tsx</p>
            <pre><code class="lang-js"><span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> React <span class="hljs-keyword">from</span> <span class="hljs-string">'react'</span>;
<span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> ReactDOM <span class="hljs-keyword">from</span> <span class="hljs-string">'react-dom'</span>;
<span class="hljs-keyword">import</span> Counter1 <span class="hljs-keyword">from</span> <span class="hljs-string">'./components/Counter1'</span>;
<span class="hljs-keyword">import</span> Counter2 <span class="hljs-keyword">from</span> <span class="hljs-string">'./components/Counter2'</span>;
<span class="hljs-keyword">import</span> { Provider } <span class="hljs-keyword">from</span> <span class="hljs-string">'react-redux'</span>;
<span class="hljs-keyword">import</span> store <span class="hljs-keyword">from</span> <span class="hljs-string">'./store'</span>;
<span class="hljs-keyword">import</span> {Route,Link } <span class="hljs-keyword">from</span> <span class="hljs-string">'react-router-dom'</span>;
<span class="hljs-keyword">import</span> { ConnectedRouter } <span class="hljs-keyword">from</span> <span class="hljs-string">'connected-react-router'</span>
<span class="hljs-keyword">import</span> history <span class="hljs-keyword">from</span> <span class="hljs-string">'./store/history'</span>;
ReactDOM.render((
    &lt;Provider store={store}&gt;
        &lt;ConnectedRouter history={history}&gt;
            &lt;React.Fragment&gt;
                &lt;Link to="/counter1"&gt;counter1&lt;/Link&gt;
                &lt;Link to="/counter2"&gt;counter2&lt;/Link&gt;
            &lt;Route path="/counter1" component={Counter1} /&gt;
              &lt;Route path="/counter2" component={Counter2}/&gt;
         &lt;/React.Fragment&gt;
        &lt;/ConnectedRouter&gt;
    &lt;/Provider&gt;
),document.getElementById('root'));
</code></pre>
            <h3 id="t339.3 actions/counter1.tsx">9.3 actions/counter1.tsx <a
                    href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t339.3%20actions/counter1.tsx">
                    # </a></h3>
            <p> src/store/actions/counter1.tsx</p>
            <pre><code class="lang-js"><span class="hljs-keyword">import</span> {INCREMENT1,DECREMENT1} <span class="hljs-keyword">from</span> <span class="hljs-string">'../action-types'</span>;
<span class="hljs-keyword">import</span> { push } <span class="hljs-keyword">from</span> <span class="hljs-string">'connected-react-router'</span>;

<span class="hljs-keyword">export</span> interface Increment1{
    <span class="hljs-attr">type</span>:<span class="hljs-keyword">typeof</span> INCREMENT1
}
<span class="hljs-keyword">export</span> interface Decrement1{
    <span class="hljs-attr">type</span>:<span class="hljs-keyword">typeof</span> DECREMENT1
}
<span class="hljs-keyword">export</span> type Action=Increment1|Decrement1;

<span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">increment1</span>(<span class="hljs-params"></span>): <span class="hljs-title">any</span> </span>{
    <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">dispatch:any,getState:any</span>) </span>{
        setTimeout(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>{
            dispatch({
                <span class="hljs-attr">type</span>:INCREMENT1
            })
        },<span class="hljs-number">1000</span>);
    }
}
<span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">decrement1</span>(<span class="hljs-params"></span>):<span class="hljs-title">Decrement1</span> </span>{
    <span class="hljs-keyword">return</span> { <span class="hljs-attr">type</span>: DECREMENT1 };
}
<span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">goCounter2</span>(<span class="hljs-params"></span>):<span class="hljs-title">any</span> </span>{
    <span class="hljs-keyword">return</span> push(<span class="hljs-string">'/counter2'</span>);
}
</code></pre>
            <h3 id="t349.4 src/store/index.tsx">9.4 src/store/index.tsx <a
                    href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t349.4%20src/store/index.tsx">
                    # </a></h3>
            <p>src/store/index.tsx</p>
            <pre><code class="lang-js"><span class="hljs-keyword">import</span> {createStore,applyMiddleware} <span class="hljs-keyword">from</span> <span class="hljs-string">'redux'</span>
<span class="hljs-keyword">import</span> reducers <span class="hljs-keyword">from</span> <span class="hljs-string">'./reducers'</span>;
<span class="hljs-keyword">import</span> { routerMiddleware } <span class="hljs-keyword">from</span> <span class="hljs-string">'connected-react-router'</span>
<span class="hljs-keyword">import</span> history <span class="hljs-keyword">from</span> <span class="hljs-string">'./history'</span>;
<span class="hljs-keyword">import</span> thunk <span class="hljs-keyword">from</span> <span class="hljs-string">'redux-thunk'</span>;
<span class="hljs-keyword">import</span> logger <span class="hljs-keyword">from</span> <span class="hljs-string">'redux-logger'</span>;
<span class="hljs-keyword">let</span> router = routerMiddleware(history);
<span class="hljs-keyword">let</span> store=createStore(reducers,applyMiddleware(router,thunk,logger));
<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> store;
</code></pre>
            <h3 id="t359.5 reducers/index.tsx">9.5 reducers/index.tsx <a
                    href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t359.5%20reducers/index.tsx">
                    # </a></h3>
            <p>src/store/reducers/index.tsx</p>
            <pre><code class="lang-js"><span class="hljs-keyword">import</span> counter1 <span class="hljs-keyword">from</span> <span class="hljs-string">'./counter1'</span>;
<span class="hljs-keyword">import</span> counter2 <span class="hljs-keyword">from</span> <span class="hljs-string">'./counter2'</span>;
<span class="hljs-keyword">import</span> { combineReducers } <span class="hljs-keyword">from</span> <span class="hljs-string">'redux'</span>;
<span class="hljs-keyword">import</span> history <span class="hljs-keyword">from</span> <span class="hljs-string">'../history'</span>;
<span class="hljs-keyword">import</span> { connectRouter } <span class="hljs-keyword">from</span> <span class="hljs-string">'connected-react-router'</span>
<span class="hljs-keyword">let</span> reducers=combineReducers({
    counter1,
    counter2,
    <span class="hljs-attr">router</span>: connectRouter(history)
});
<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> reducers;
</code></pre>
            <h3 id="t369.6 store/history.tsx">9.6 store/history.tsx <a
                    href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t369.6%20store/history.tsx">
                    # </a></h3>
            <p>src/store/history.tsx</p>
            <pre><code class="lang-js"><span class="hljs-keyword">import</span> {createBrowserHistory} <span class="hljs-keyword">from</span> <span class="hljs-string">'history'</span>
<span class="hljs-keyword">const</span> history=createBrowserHistory()
<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> history;
</code></pre>
            <h2 id="t3710. 编写单元测试">10. 编写单元测试 <a
                    href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t3710.%20%E7%BC%96%E5%86%99%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95">
                    # </a></h2>
            <ul>
                <li>目前比较流行的React单测组合是Jest+Enzyme</li>
                <li><a
                        href="https://jestjs.io/">Jest</a>是Facebook开发的一个测试框架，它集成了测试执行器、断言库、spy、mock、snapshot和测试覆盖率报告等功能。React项目本身也是使用Jest进行单测的，因此它们俩的契合度相当高。
                </li>
                <li><a
                        href="https://airbnb.io/enzyme/">enzyme</a>是由airbnb开发的React单测工具。它扩展了React的TestUtils并通过支持类似jQuery的find语法可以很方便的对render出来的结果做各种断言
                </li>
            </ul>
            <h3 id="t3810.1 安装单元测试模块">10.1 安装单元测试模块 <a
                    href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t3810.1%20%E5%AE%89%E8%A3%85%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%E6%A8%A1%E5%9D%97">
                    # </a></h3>
            <pre><code class="lang-js">cnpm i jest @types/jest ts-jest enzyme @types/enzyme enzyme-adapter-react<span class="hljs-number">-16</span> @types/enzyme-adapter-react<span class="hljs-number">-16</span> -D
</code></pre>
            <h3 id="t3910.2 配置package.json">10.2 配置package.json <a
                    href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t3910.2%20%E9%85%8D%E7%BD%AEpackage.json">
                    # </a></h3>
            <pre><code class="lang-json">"scripts": {
    "dev": "webpack-dev-server",
    "test": "jest"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "ts",
      "tsx"
    ],
    "transform": {
      "^.+\\.tsx?$": "ts-jest"
    },
    "testMatch": [
      "&lt;rootDir&gt;/test/**/*.(spec|test).tsx"
    ]
  }
</code></pre>
            <h3 id="t4010.3 index.test.tsx">10.3 index.test.tsx <a
                    href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t4010.3%20index.test.tsx">
                    # </a></h3>
            <p>test\index.test.tsx</p>
            <pre><code class="lang-js">test(<span class="hljs-string">'测试运行'</span>, () =&gt; {
   expect(<span class="hljs-number">1</span>+<span class="hljs-number">1</span>).toBe(<span class="hljs-number">2</span>);
})
</code></pre>
            <h3 id="t4110.4 counter.spec.tsx">10.4 counter.spec.tsx <a
                    href="http://www.zhufengpeixun.cn/architecture/html/65.3.typescript.html#t4110.4%20counter.spec.tsx">
                    # </a></h3>
            <p>test\counter.spec.tsx</p>
            <pre><code class="lang-js"><span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> React <span class="hljs-keyword">from</span> <span class="hljs-string">'react'</span>;
<span class="hljs-keyword">import</span> { shallow, configure } <span class="hljs-keyword">from</span> <span class="hljs-string">'enzyme'</span>
<span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span>  Adapter <span class="hljs-keyword">from</span> <span class="hljs-string">'enzyme-adapter-react-16'</span>
<span class="hljs-keyword">import</span> Counter <span class="hljs-keyword">from</span> <span class="hljs-string">'../src/components/Counter'</span>;
configure({ <span class="hljs-attr">adapter</span>: <span class="hljs-keyword">new</span> Adapter() })
test(<span class="hljs-string">'Jest-React-TypeScript运行'</span>, () =&gt; {
    <span class="hljs-keyword">const</span> renderer = shallow(<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Counter</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"计数器"</span>/&gt;</span>);
　　expect(renderer.text()).toContain('计数器');
})
</span></code></pre>

            <div class="copyright">Powered by <a href="https://github.com/jaywcjlove/idoc" target="_blank">idoc</a>.
                Dependence <a href="https://nodejs.org/">Node.js</a> run.</div>
        </div>

    </div>

    <script src="./65.3.typescript_files/jquery.js"></script>
    <script>
        $('.warpper .page-toc ul ul li a').on('click', function () {
            $('.warpper .page-toc ul ul li a').removeClass('my-active')
            $(this).addClass('my-active')
        })

        $('.logo').on('mouseenter', function () {
            $('.nav').height('400px');
        })
        $('.nav').on('mouseleave', function () {
            $('.nav').height('80px');
        })
        $('.logo').on('click', function () {
            $('.nav').css('display', 'none');
            $('.warpper').css('padding', '0px');
        })
        // if (!$('.understand-me').length) {
        //   var bar = $(window).height() - $('.navbar ').height() - $('.page-toc').position().top;
        //   var count = bar / 26 / 2;
        //   var barHeight = $('.page-toc').outerHeight();
        //   $('.page-toc li').eq(0).children('a').addClass('red');
        //   var arr = [];
        //   $("h1,h2,h3,h4,h5,h6").each(function () {
        //     arr.push($(this).position().top);
        //   });
        //   var timer
        //   function dark() {
        //     clearTimeout(timer)
        //      timer = setTimeout(function () {
        //      var top = Math.abs($('.page-toc > ul').position().top);
        //      var cur = $('.content').scrollTop();
        //      for (var i = arr.length; i >= 0; i--) {
        //        if (arr[i] <= cur) {
        //          break;
        //        }
        //      }
        //      if (i === -1) {
        //        i = 0;
        //      }
        //      $('.page-toc li a').removeClass('red');
        //      $('.page-toc li').eq(i).children('a').addClass('red');
        //      let height = $('.page-toc li').eq(i).position().top-$('.page-toc').height(); // 如果当前的offset出去了 回到中间可好？
        //      $('.page-toc').scrollTop(height+$('.page-toc').height()/2);
        //    },200)
        //   }

        //   $('.content').on('scroll', dark);
        // }
    </script>
    <style>
        /* ::-webkit-scrollbar{width:14px;}
    ::-webkit-scrollbar-track{background-color:transparent;}
    ::-webkit-scrollbar-thumb{background-color:transparent;}
    ::-webkit-scrollbar-thumb:hover {background-color:transparent}
    ::-webkit-scrollbar-thumb:active {background-color:transparent} */

        .page-toc>ul .red {
            background: #f3f3f3;
            z-index: 1;
            border-left: 3px solid #009a61;
            -webkit-transition: all .2s ease;
            transition: all .2s ease;
            color: #000
        }
    </style>


</body>

</html>