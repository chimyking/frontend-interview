<!DOCTYPE html>
<!-- saved from url=(0089)http://www.zhufengpeixun.cn/architecture/html/28.redux-2-%E4%B8%AD%E9%97%B4%E4%BB%B6.html -->
<html lang="en">

<head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>珠峰架构师成长计划</title>
    <link rel="stylesheet" type="text/css" href="./28.redux-2-中间件_files/main.css">
    <style type="text/css" abt="234"></style>
    <script>
        //console.log('a')
    </script>
    <script>
        //remove 17173 video ad
        doAdblock();

        function doAdblock() {
            (function () {
                function A() {}
                A.prototype = {
                    rules: {
                        '17173_in': {
                            'find': /http:\/\/f\.v\.17173cdn\.com\/(\d+\/)?flash\/PreloaderFile(Customer)?\.swf/,
                            'replace': "http://swf.adtchrome.com/17173_in_20150522.swf"
                        },
                        '17173_out': {
                            'find': /http:\/\/f\.v\.17173cdn\.com\/(\d+\/)?flash\/PreloaderFileFirstpage\.swf/,
                            'replace': "http://swf.adtchrome.com/17173_out_20150522.swf"
                        },
                        '17173_live': {
                            'find': /http:\/\/f\.v\.17173cdn\.com\/(\d+\/)?flash\/Player_stream(_firstpage)?\.swf/,
                            'replace': "http://swf.adtchrome.com/17173_stream_20150522.swf"
                        },
                        '17173_live_out': {
                            'find': /http:\/\/f\.v\.17173cdn\.com\/(\d+\/)?flash\/Player_stream_(custom)?Out\.swf/,
                            'replace': "http://swf.adtchrome.com/17173.out.Live.swf"
                        }
                    },
                    _done: null,
                    get done() {
                        if (!this._done) {
                            this._done = new Array();
                        }
                        return this._done;
                    },
                    addAnimations: function () {
                        var style = document.createElement('style');
                        style.type = 'text/css';
                        style.innerHTML = 'object,embed{\
                -webkit-animation-duration:.001s;-webkit-animation-name:playerInserted;\
                -ms-animation-duration:.001s;-ms-animation-name:playerInserted;\
                -o-animation-duration:.001s;-o-animation-name:playerInserted;\
                animation-duration:.001s;animation-name:playerInserted;}\
                @-webkit-keyframes playerInserted{from{opacity:0.99;}to{opacity:1;}}\
                @-ms-keyframes playerInserted{from{opacity:0.99;}to{opacity:1;}}\
                @-o-keyframes playerInserted{from{opacity:0.99;}to{opacity:1;}}\
                @keyframes playerInserted{from{opacity:0.99;}to{opacity:1;}}';
                        document.getElementsByTagName('head')[0].appendChild(style);
                    },
                    animationsHandler: function (e) {
                        if (e.animationName === 'playerInserted') {
                            this.replace(e.target);
                        }
                    },
                    replace: function (elem) {
                        if (this.done.indexOf(elem) != -1) return;
                        this.done.push(elem);
                        var player = elem.data || elem.src;
                        if (!player) return;
                        var i, find, replace = false;
                        for (i in this.rules) {
                            find = this.rules[i]['find'];
                            if (find.test(player)) {
                                replace = this.rules[i]['replace'];
                                if ('function' === typeof this.rules[i]['preHandle']) {
                                    this.rules[i]['preHandle'].bind(this, elem, find, replace, player)();
                                } else {
                                    this.reallyReplace.bind(this, elem, find, replace)();
                                }
                                break;
                            }
                        }
                    },
                    reallyReplace: function (elem, find, replace) {
                        elem.data && (elem.data = elem.data.replace(find, replace)) || elem.src && ((elem
                            .src = elem.src.replace(find, replace)) && (elem.style.display =
                            'block'));
                        var b = elem.querySelector("param[name='movie']");
                        this.reloadPlugin(elem);
                    },
                    reloadPlugin: function (elem) {
                        var nextSibling = elem.nextSibling;
                        var parentNode = elem.parentNode;
                        parentNode.removeChild(elem);
                        var newElem = elem.cloneNode(true);
                        this.done.push(newElem);
                        if (nextSibling) {
                            parentNode.insertBefore(newElem, nextSibling);
                        } else {
                            parentNode.appendChild(newElem);
                        }
                    },
                    init: function () {
                        var handler = this.animationsHandler.bind(this);
                        document.body.addEventListener('webkitAnimationStart', handler, false);
                        document.body.addEventListener('msAnimationStart', handler, false);
                        document.body.addEventListener('oAnimationStart', handler, false);
                        document.body.addEventListener('animationstart', handler, false);
                        this.addAnimations();
                    }
                };
                new A().init();
            })();
        }
        //remove baidu search ad
        if (document.URL.indexOf('www.baidu.com') >= 0) {
            if (document && document.getElementsByTagName && document.getElementById && document.body) {
                var aa = function () {
                    var all = document.body.querySelectorAll("#content_left div,#content_left table");
                    for (var i = 0; i < all.length; i++) {
                        if (/display:\s?(table|block)\s!important/.test(all[i].getAttribute("style"))) {
                            all[i].style.display = "none";
                            all[i].style.visibility = 'hidden';
                        }
                    }
                    all = document.body.querySelectorAll('.result.c-container[id="1"]');
                    //if(all.length == 1) return;
                    for (var i = 0; i < all.length; i++) {
                        if (all[i].innerHTML && all[i].innerHTML.indexOf('广告') > -1) {
                            all[i].style.display = "none";
                            all[i].style.visibility = 'hidden';
                        }
                    }
                }
                aa();
                document.getElementById('wrapper_wrapper').addEventListener('DOMSubtreeModified', aa)
            };
        }
        //remove sohu video ad
        if (document.URL.indexOf("tv.sohu.com") >= 0) {
            if (document.cookie.indexOf("fee_status=true") == -1) {
                document.cookie = 'fee_status=true'
            };
        }
        //remove 56.com video ad
        if (document.URL.indexOf("56.com") >= 0) {
            if (document.cookie.indexOf("fee_status=true") == -1) {
                document.cookie = 'fee_status=true'
            };
        }
        //fore iqiyi enable html5 player function
        if (document.URL.indexOf("iqiyi.com") >= 0) {
            if (document.cookie.indexOf("player_forcedType=h5_VOD") == -1) {
                document.cookie = 'player_forcedType=h5_VOD'
                if (localStorage.reloadTime && Date.now() - parseInt(localStorage.reloadTime) < 60000) {
                    console.log('no reload')
                } else {
                    location.reload()
                    localStorage.reloadTime = Date.now();
                }
            }
        }
    </script>
    <style type="text/css">
        object,
        embed {
            -webkit-animation-duration: .001s;
            -webkit-animation-name: playerInserted;
            -ms-animation-duration: .001s;
            -ms-animation-name: playerInserted;
            -o-animation-duration: .001s;
            -o-animation-name: playerInserted;
            animation-duration: .001s;
            animation-name: playerInserted;
        }

        @-webkit-keyframes playerInserted {
            from {
                opacity: 0.99;
            }

            to {
                opacity: 1;
            }
        }

        @-ms-keyframes playerInserted {
            from {
                opacity: 0.99;
            }

            to {
                opacity: 1;
            }
        }

        @-o-keyframes playerInserted {
            from {
                opacity: 0.99;
            }

            to {
                opacity: 1;
            }
        }

        @keyframes playerInserted {
            from {
                opacity: 0.99;
            }

            to {
                opacity: 1;
            }
        }
    </style>
</head>

<body>
    

    <div class="warpper">

        <div class="page-toc">
            <ul>
                <li><a
                        href="http://www.zhufengpeixun.cn/architecture/html/28.redux-2-%E4%B8%AD%E9%97%B4%E4%BB%B6.html#t01.%20Redux%E4%B8%AD%E9%97%B4%E4%BB%B6">1.
                        Redux中间件</a></li>
                <li><a
                        href="http://www.zhufengpeixun.cn/architecture/html/28.redux-2-%E4%B8%AD%E9%97%B4%E4%BB%B6.html#t12.%20redux">2.
                        redux</a>
                    <ul>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/28.redux-2-%E4%B8%AD%E9%97%B4%E4%BB%B6.html#t22.1%20index.js">2.1
                                index.js</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/28.redux-2-%E4%B8%AD%E9%97%B4%E4%BB%B6.html#t32.2%20createStore.js">2.2
                                createStore.js</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/28.redux-2-%E4%B8%AD%E9%97%B4%E4%BB%B6.html#t42.3%20combineReducers.js">2.3
                                combineReducers.js</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/28.redux-2-%E4%B8%AD%E9%97%B4%E4%BB%B6.html#t52.4%20bindActionCreators.js">2.4
                                bindActionCreators.js</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/28.redux-2-%E4%B8%AD%E9%97%B4%E4%BB%B6.html#t62.5%20compose.js">2.5
                                compose.js</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/28.redux-2-%E4%B8%AD%E9%97%B4%E4%BB%B6.html#t72.6%20applyMiddleware.js">2.6
                                applyMiddleware.js</a></li>
                    </ul>
                </li>
                <li><a
                        href="http://www.zhufengpeixun.cn/architecture/html/28.redux-2-%E4%B8%AD%E9%97%B4%E4%BB%B6.html#t83.%20react-redux">3.
                        react-redux</a></li>
                <li><a
                        href="http://www.zhufengpeixun.cn/architecture/html/28.redux-2-%E4%B8%AD%E9%97%B4%E4%BB%B6.html#t94.%20%E4%B8%AD%E9%97%B4%E4%BB%B6">4.
                        中间件</a>
                    <ul>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/28.redux-2-%E4%B8%AD%E9%97%B4%E4%BB%B6.html#t104.1%20%E8%87%AA%E5%B7%B1%E5%AE%9E%E7%8E%B0%E6%97%A5%E5%BF%97%E4%B8%AD%E9%97%B4%E4%BB%B6">4.1
                                自己实现日志中间件</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/28.redux-2-%E4%B8%AD%E9%97%B4%E4%BB%B6.html#t114.2%20%E5%AE%9E%E7%8E%B0logger%E4%B8%AD%E9%97%B4%E4%BB%B6">4.2
                                实现logger中间件</a></li>
                    </ul>
                </li>
                <li><a
                        href="http://www.zhufengpeixun.cn/architecture/html/28.redux-2-%E4%B8%AD%E9%97%B4%E4%BB%B6.html#t125.counter">5.counter</a>
                    <ul>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/28.redux-2-%E4%B8%AD%E9%97%B4%E4%BB%B6.html#t135.1%20Counter.js">5.1
                                Counter.js</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/28.redux-2-%E4%B8%AD%E9%97%B4%E4%BB%B6.html#t145.2%20actions.js">5.2
                                actions.js</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/28.redux-2-%E4%B8%AD%E9%97%B4%E4%BB%B6.html#t155.3%20reducers.js">5.3
                                reducers.js</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/28.redux-2-%E4%B8%AD%E9%97%B4%E4%BB%B6.html#t165.4%20compose.js">5.4
                                compose.js</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/28.redux-2-%E4%B8%AD%E9%97%B4%E4%BB%B6.html#t175.5%20applyMiddleware">5.5
                                applyMiddleware</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/28.redux-2-%E4%B8%AD%E9%97%B4%E4%BB%B6.html#t185.6%20logger">5.6
                                logger</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/28.redux-2-%E4%B8%AD%E9%97%B4%E4%BB%B6.html#t195.7%20thunk">5.7
                                thunk</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/28.redux-2-%E4%B8%AD%E9%97%B4%E4%BB%B6.html#t205.8%20promise">5.8
                                promise</a></li>
                        <li><a
                                href="http://www.zhufengpeixun.cn/architecture/html/28.redux-2-%E4%B8%AD%E9%97%B4%E4%BB%B6.html#t215.9%20join.js">5.9
                                join.js</a></li>
                    </ul>
                </li>
            </ul>
        </div>

        <div class="content markdown-body">
            <h2 id="t01. Redux中间件">1. Redux中间件 <a
                    href="http://www.zhufengpeixun.cn/architecture/html/28.redux-2-%E4%B8%AD%E9%97%B4%E4%BB%B6.html#t01.%20Redux%E4%B8%AD%E9%97%B4%E4%BB%B6">
                    # </a></h2>
            <p><img src="./28.redux-2-中间件_files/reduxmiddleware.jpg" alt="reduxmiddleware"></p>
            <h2 id="t12. redux">2. redux <a
                    href="http://www.zhufengpeixun.cn/architecture/html/28.redux-2-%E4%B8%AD%E9%97%B4%E4%BB%B6.html#t12.%20redux">
                    # </a></h2>
            <h3 id="t22.1 index.js">2.1 index.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/28.redux-2-%E4%B8%AD%E9%97%B4%E4%BB%B6.html#t22.1%20index.js">
                    # </a></h3>
            <pre><code class="lang-js"><span class="hljs-keyword">import</span> createStore <span class="hljs-keyword">from</span> <span class="hljs-string">'./createStore'</span>;
<span class="hljs-keyword">import</span> combineReducers <span class="hljs-keyword">from</span> <span class="hljs-string">'./combineReducers'</span>;
<span class="hljs-keyword">import</span> bindActionCreators <span class="hljs-keyword">from</span> <span class="hljs-string">'./bindActionCreators'</span>;
<span class="hljs-keyword">import</span> compose <span class="hljs-keyword">from</span> <span class="hljs-string">'./compose'</span>;
<span class="hljs-keyword">import</span> applyMiddleware <span class="hljs-keyword">from</span> <span class="hljs-string">'./applyMiddleware'</span>;
<span class="hljs-keyword">export</span> {
    createStore,
    combineReducers,
    bindActionCreators,
    compose,
    applyMiddleware
}
</code></pre>
            <h3 id="t32.2 createStore.js">2.2 createStore.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/28.redux-2-%E4%B8%AD%E9%97%B4%E4%BB%B6.html#t32.2%20createStore.js">
                    # </a></h3>
            <pre><code class="lang-js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">reducer, preloadedState,enhancer</span>) </span>{
    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> enhancer !== <span class="hljs-string">'undefined'</span>) {
       <span class="hljs-keyword">return</span> enhancer(createStore)(reducer, preloadedState)
    }
    <span class="hljs-keyword">let</span> state = preloadedState;
    <span class="hljs-keyword">let</span> listeners = [];
    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getState</span>(<span class="hljs-params"></span>) </span>{
        <span class="hljs-comment">// return state;</span>
        <span class="hljs-keyword">return</span> <span class="hljs-built_in">JSON</span>.parse(<span class="hljs-built_in">JSON</span>.stringify(state));
    }
    <span class="hljs-comment">//派发分发的意思</span>
    <span class="hljs-comment">//action 动作 描述一下你想干什么,动作是一个普通的JS对象，只有一个属性是必须的。type,其它属性随意 </span>
    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dispatch</span>(<span class="hljs-params">action</span>) </span>{
        <span class="hljs-comment">//接收新的动作后，通过 才状态 和新动作计算出新状态</span>
        state = reducer(state, action);
        <span class="hljs-comment">//然后通过所有的监听函数执行</span>
        listeners.forEach(<span class="hljs-function"><span class="hljs-params">listener</span> =&gt;</span> listener());
    }
    <span class="hljs-comment">//派发了一个动作获取初始值，其实在redux内部是派发一个INIT: '@@redux/INIT'动作</span>
    dispatch({ <span class="hljs-attr">type</span>: <span class="hljs-string">'@@redux/INIT'</span> });
    <span class="hljs-comment">//订阅，供外界订阅本仓库中状态的变化 ，如果状态 变化 了会执行订阅的逻辑 </span>
    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">subscribe</span>(<span class="hljs-params">listener</span>) </span>{
        listeners.push(listener);
        <span class="hljs-comment">//返回一个取消订阅函数</span>
        <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>{
            listeners = listeners.filter(<span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> item != listener)
        }
    }
    <span class="hljs-keyword">return</span> {
        getState, dispatch, subscribe
    }
}
</code></pre>
            <h3 id="t42.3 combineReducers.js">2.3 combineReducers.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/28.redux-2-%E4%B8%AD%E9%97%B4%E4%BB%B6.html#t42.3%20combineReducers.js">
                    # </a></h3>
            <pre><code class="lang-js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> reducers =&gt; <span class="hljs-function">(<span class="hljs-params">state = {}, action</span>) =&gt;</span> <span class="hljs-built_in">Object</span>.keys(reducers).reduce(<span class="hljs-function">(<span class="hljs-params">currentState, key</span>) =&gt;</span> {
    currentState[key] = reducers[key](state[key], action);
    <span class="hljs-keyword">return</span> currentState;
}, {});
</code></pre>
            <h3 id="t52.4 bindActionCreators.js">2.4 bindActionCreators.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/28.redux-2-%E4%B8%AD%E9%97%B4%E4%BB%B6.html#t52.4%20bindActionCreators.js">
                    # </a></h3>
            <pre><code class="lang-js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">bindActionCreators</span>(<span class="hljs-params">actions,dispatch</span>)</span>{
    <span class="hljs-keyword">let</span> newActions = {};
    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> attr <span class="hljs-keyword">in</span> actions){
     newActions[attr] = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>{
         dispatch(actions[attr].apply(<span class="hljs-literal">null</span>,<span class="hljs-built_in">arguments</span>));
     }
    }
    <span class="hljs-keyword">return</span> newActions;
 }
</code></pre>
            <h3 id="t62.5 compose.js">2.5 compose.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/28.redux-2-%E4%B8%AD%E9%97%B4%E4%BB%B6.html#t62.5%20compose.js">
                    # </a></h3>
            <pre><code class="lang-js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">...funcs</span>)</span>{
    <span class="hljs-keyword">return</span> funcs.reduce(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span><span class="hljs-function">(<span class="hljs-params">...args</span>)=&gt;</span>a(b(...args)));
}
</code></pre>
            <h3 id="t72.6 applyMiddleware.js">2.6 applyMiddleware.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/28.redux-2-%E4%B8%AD%E9%97%B4%E4%BB%B6.html#t72.6%20applyMiddleware.js">
                    # </a></h3>
            <pre><code class="lang-js"><span class="hljs-keyword">import</span> compose <span class="hljs-keyword">from</span> <span class="hljs-string">'./compose'</span>;
<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">...middlewares</span>)</span>{
    <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">createStore</span>)</span>{
        <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">reducer</span>)</span>{
            <span class="hljs-keyword">let</span> store = createStore(reducer);
            <span class="hljs-keyword">let</span> dispatch;
            middlewares = middlewares.map(<span class="hljs-function"><span class="hljs-params">middleware</span>=&gt;</span>middleware({
                <span class="hljs-attr">getState</span>:store.getState,
                <span class="hljs-attr">dispatch</span>:<span class="hljs-function"><span class="hljs-params">action</span>=&gt;</span>dispatch(action)
            }));
            dispatch = compose(...middlewares)(store.dispatch);
            <span class="hljs-keyword">return</span> {...store,dispatch};
        }
    }
}
</code></pre>
            <h2 id="t83. react-redux">3. react-redux <a
                    href="http://www.zhufengpeixun.cn/architecture/html/28.redux-2-%E4%B8%AD%E9%97%B4%E4%BB%B6.html#t83.%20react-redux">
                    # </a></h2>
            <p>index.js</p>
            <pre><code class="lang-js"><span class="hljs-keyword">import</span> React <span class="hljs-keyword">from</span> <span class="hljs-string">'react'</span>;
<span class="hljs-keyword">import</span> {bindActionCreators} <span class="hljs-keyword">from</span> <span class="hljs-string">'../redux'</span>
<span class="hljs-keyword">let</span> Context = React.createContext();
<span class="hljs-comment">// Provider的作用就是把store 定義</span>
<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Provider</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span> </span>{
  render() {
    <span class="hljs-keyword">let</span> store = <span class="hljs-keyword">this</span>.props.store;
    <span class="hljs-keyword">return</span> &lt;Context.Provider value={{ store }}&gt;
      {this.props.children}
    &lt;/Context.Provider&gt;
  }
}
// connect是一个高阶函数 返回的是一个组件
let connect = (mapStateToProps,mapDispatchToProps) =&gt; (Component) =&gt; {
  // connect他是一个高阶组件
  class Proxy extends React.Component {
    // 把当前用传递的函数 执行 并且把结果作为状态放在当前的代理组件上面
    state = mapStateToProps(this.props.store.getState());
    componentWillMount(){
      this.unsub = this.props.store.subscribe(()=&gt;{
        // 再去调用用户的函数执行 把执行结果 作为新的状态
        this.setState(mapStateToProps(this.props.store.getState()))
      })
    }
    componentWillUnmount(){
      this.unsub(); // 取消订阅
    }
    render(){
      let dispatchs 
      if (typeof mapDispatchToProps === 'function'){
        dispatchs = mapDispatchToProps(this.props.store.dispatch);
      }else{
        // 如果绑定的是一个对象，就让这个对象使用bindActionCreatros进行绑定
        dispatchs = bindActionCreators(mapDispatchToProps,this.props.store.dispatch);
      }
      return &lt;Component {...this.state} {...dispatchs}&gt;&lt;/Component&gt;
    }
  }
  return ()=&gt;{
    return &lt;Context.Consumer&gt;
      {({ store }) =&gt; {
        return &lt;Proxy store={store}&gt;&lt;/Proxy&gt;  
      }}
    &lt;/Context.Consumer&gt;
  }
}
export { Provider ,connect};
</code></pre>
            <h2 id="t94. 中间件">4. 中间件 <a
                    href="http://www.zhufengpeixun.cn/architecture/html/28.redux-2-%E4%B8%AD%E9%97%B4%E4%BB%B6.html#t94.%20%E4%B8%AD%E9%97%B4%E4%BB%B6">
                    # </a></h2>
            <h3 id="t104.1 自己实现日志中间件">4.1 自己实现日志中间件 <a
                    href="http://www.zhufengpeixun.cn/architecture/html/28.redux-2-%E4%B8%AD%E9%97%B4%E4%BB%B6.html#t104.1%20%E8%87%AA%E5%B7%B1%E5%AE%9E%E7%8E%B0%E6%97%A5%E5%BF%97%E4%B8%AD%E9%97%B4%E4%BB%B6">
                    # </a></h3>
            <p>我们改写了，dispatch方法实现了在更改状态时打印前后的状态,但是这种方案并不好。所以我们可以采用中间的方式。</p>
            <pre><code class="lang-js"><span class="hljs-keyword">let</span> store = createStore(reducer);
<span class="hljs-keyword">let</span> dispatch = store.dispatch;
store.dispatch = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">action</span>) </span>{
  <span class="hljs-built_in">console</span>.log(store.getState().number);
  dispatch(action);
  <span class="hljs-built_in">console</span>.log(store.getState().number)
};
<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> store;
</code></pre>
            <h3 id="t114.2 实现logger中间件">4.2 实现logger中间件 <a
                    href="http://www.zhufengpeixun.cn/architecture/html/28.redux-2-%E4%B8%AD%E9%97%B4%E4%BB%B6.html#t114.2%20%E5%AE%9E%E7%8E%B0logger%E4%B8%AD%E9%97%B4%E4%BB%B6">
                    # </a></h3>
            <p>中间件就是一个函数，对store.dispatch方法进行了改造，在发出 Action 和执行 Reducer 这两步之间，添加了其他功能</p>
            <pre><code class="lang-js"><span class="hljs-keyword">let</span> logger = <span class="hljs-function"><span class="hljs-params">store</span> =&gt;</span> dispatch =&gt; <span class="hljs-function"><span class="hljs-params">action</span>=&gt;</span>{
  <span class="hljs-built_in">console</span>.log(store.getState().number);
  dispatch(action);
  <span class="hljs-built_in">console</span>.log(store.getState().number)
};
<span class="hljs-keyword">let</span> applyMiddleWare = <span class="hljs-function"><span class="hljs-params">middleware</span> =&gt;</span> createStore =&gt; <span class="hljs-function"><span class="hljs-params">reducer</span> =&gt;</span>{
  <span class="hljs-keyword">let</span> store = createStore(reducer);
  <span class="hljs-keyword">let</span> middle = middleware(store);
  <span class="hljs-keyword">let</span> dispatch = middle(store.dispatch);
  <span class="hljs-keyword">return</span> { <span class="hljs-comment">//将中间返回的dispatch方法覆盖掉原有store中的dispatch</span>
    ...store,
    dispatch
  }
};
<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> applyMiddleWare(logger)(createStore)(reducer);
</code></pre>
            <h2 id="t125.counter">5.counter <a
                    href="http://www.zhufengpeixun.cn/architecture/html/28.redux-2-%E4%B8%AD%E9%97%B4%E4%BB%B6.html#t125.counter">
                    # </a></h2>
            <h3 id="t135.1 Counter.js">5.1 Counter.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/28.redux-2-%E4%B8%AD%E9%97%B4%E4%BB%B6.html#t135.1%20Counter.js">
                    # </a></h3>
            <pre><code class="lang-js"><span class="hljs-keyword">import</span> React, { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">'react'</span>;
<span class="hljs-keyword">import</span> store <span class="hljs-keyword">from</span> <span class="hljs-string">'../store'</span>;
<span class="hljs-keyword">import</span> actions <span class="hljs-keyword">from</span> <span class="hljs-string">'../store/actions/counter'</span>;
<span class="hljs-keyword">import</span> {connect} <span class="hljs-keyword">from</span> <span class="hljs-string">'../react-redux'</span>;
<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Counter</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Component</span> </span>{
    <span class="hljs-keyword">constructor</span>(props){
        <span class="hljs-keyword">super</span>(props);
    }
    render() {
        <span class="hljs-keyword">return</span> (
            <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>
                <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>{this.props.number}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>
                <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">{this.props.increment}</span> &gt;</span>+<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
                <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">{this.props.thunkIncrement}</span> &gt;</span>thunk+<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
                <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">{this.props.promiseIncrement}</span> &gt;</span>promise+<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
                <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">{this.props.payloadIncrement}</span> &gt;</span>payload+<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>
        )
    }
}
<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> connect(
    <span class="hljs-function"><span class="hljs-params">state</span>=&gt;</span>state,
    actions
)(Counter);
</code></pre>
            <h3 id="t145.2 actions.js">5.2 actions.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/28.redux-2-%E4%B8%AD%E9%97%B4%E4%BB%B6.html#t145.2%20actions.js">
                    # </a></h3>
            <pre><code class="lang-js"><span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> types <span class="hljs-keyword">from</span> <span class="hljs-string">'../action-types'</span>;
<span class="hljs-comment">//actionCreator 创建action的函数</span>
<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {
    increment(){
        <span class="hljs-keyword">return</span> {<span class="hljs-attr">type</span>:types.INCREMENT,<span class="hljs-attr">payload</span>:<span class="hljs-number">1</span>}
    },
    thunkIncrement(){
        <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">dispatch,getState</span>)</span>{
            setTimeout(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>{
                dispatch({<span class="hljs-attr">type</span>:types.INCREMENT,<span class="hljs-attr">payload</span>:<span class="hljs-number">1</span>});
            },<span class="hljs-number">1000</span>);
        }
    },
    promiseIncrement(){
        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">resolve</span>)</span>{
            setTimeout(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>{
                resolve({<span class="hljs-attr">type</span>:types.INCREMENT,<span class="hljs-attr">payload</span>:<span class="hljs-number">1</span>});
            },<span class="hljs-number">1000</span>);
        });
    },
    payloadIncrement(){
       <span class="hljs-keyword">return</span> {
           <span class="hljs-attr">type</span>:types.INCREMENT,
           <span class="hljs-attr">payload</span>:<span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">resolve,reject</span>)</span>{
               setTimeout(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>{
                   <span class="hljs-keyword">if</span>(<span class="hljs-built_in">Math</span>.random()&gt;<span class="hljs-number">.5</span>){
                       resolve(<span class="hljs-number">1</span>);
                   }<span class="hljs-keyword">else</span>{
                       reject(<span class="hljs-number">-1</span>);
                   }
               },<span class="hljs-number">1000</span>);
           })
       }
    }
}
</code></pre>
            <h3 id="t155.3 reducers.js">5.3 reducers.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/28.redux-2-%E4%B8%AD%E9%97%B4%E4%BB%B6.html#t155.3%20reducers.js">
                    # </a></h3>
            <pre><code class="lang-js"><span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> types <span class="hljs-keyword">from</span> <span class="hljs-string">'../action-types'</span>;
<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">state={number:<span class="hljs-number">0</span>},action</span>)</span>{
    <span class="hljs-keyword">switch</span>(action.type){
        <span class="hljs-keyword">case</span> types.INCREMENT:
            <span class="hljs-keyword">return</span> {<span class="hljs-attr">number</span>:state.number + (action.payload)};
        <span class="hljs-keyword">default</span>:
            <span class="hljs-keyword">return</span> state;
    }
}
</code></pre>
            <p>action-types.js</p>
            <pre><code class="lang-js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> INCREMENT = <span class="hljs-string">'INCREMENT'</span>;
</code></pre>
            <h3 id="t165.4 compose.js">5.4 compose.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/28.redux-2-%E4%B8%AD%E9%97%B4%E4%BB%B6.html#t165.4%20compose.js">
                    # </a></h3>
            <pre><code class="lang-js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">add1</span>(<span class="hljs-params">str</span>)</span>{
    <span class="hljs-keyword">return</span> <span class="hljs-string">'1'</span>+str;
}
<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">add2</span>(<span class="hljs-params">str</span>)</span>{
    <span class="hljs-keyword">return</span> <span class="hljs-string">'2'</span>+str;
}
<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">add3</span>(<span class="hljs-params">str</span>)</span>{
    <span class="hljs-keyword">return</span> <span class="hljs-string">'3'</span>+str;
}
<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">compose1</span>(<span class="hljs-params">...fns</span>)</span>{
  <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">...args</span>)</span>{
    <span class="hljs-keyword">let</span> last = fns.pop();
    <span class="hljs-keyword">return</span> fns.reduceRight(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">val,fn</span>)</span>{
        <span class="hljs-keyword">return</span> fn(val);
    },last(...args))
  }
}
<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">compose2</span>(<span class="hljs-params">...fns</span>)</span>{
    <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">...args</span>)</span>{
       <span class="hljs-keyword">return</span> fns.reduce(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span>a(b(...args)));
    }
}

<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">compose3</span>(<span class="hljs-params">...funcs</span>)</span>{
    <span class="hljs-keyword">return</span> funcs.reduce(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span><span class="hljs-function">(<span class="hljs-params">...args</span>)=&gt;</span>a(b(...args)));
}

<span class="hljs-keyword">let</span> result = compose3(add3,add2,add1)(<span class="hljs-string">'zfpx'</span>);
<span class="hljs-built_in">console</span>.log(result);
</code></pre>
            <h3 id="t175.5 applyMiddleware">5.5 applyMiddleware <a
                    href="http://www.zhufengpeixun.cn/architecture/html/28.redux-2-%E4%B8%AD%E9%97%B4%E4%BB%B6.html#t175.5%20applyMiddleware">
                    # </a></h3>
            <pre><code class="lang-js"><span class="hljs-keyword">let</span> applyMiddleware = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">middleware</span>)</span>{
    <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">createStore</span>)</span>{
        <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">reducer</span>)</span>{
            <span class="hljs-keyword">let</span> store = createStore(reducer);
            middleware = middleware(store);
            <span class="hljs-keyword">let</span> dispatch = middleware(store.dispatch);
            <span class="hljs-keyword">return</span> {...store,dispatch}
        }
    }
}
</code></pre>
            <h3 id="t185.6 logger">5.6 logger <a
                    href="http://www.zhufengpeixun.cn/architecture/html/28.redux-2-%E4%B8%AD%E9%97%B4%E4%BB%B6.html#t185.6%20logger">
                    # </a></h3>
            <pre><code class="lang-js"><span class="hljs-keyword">let</span> logger = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">store</span>)</span>{
    <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">next</span>)</span>{
        <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">action</span>)</span>{
            <span class="hljs-built_in">console</span>.log(store.getState());
            next(action);
            <span class="hljs-built_in">console</span>.log(store.getState());
        }
    }
}
</code></pre>
            <h3 id="t195.7 thunk">5.7 thunk <a
                    href="http://www.zhufengpeixun.cn/architecture/html/28.redux-2-%E4%B8%AD%E9%97%B4%E4%BB%B6.html#t195.7%20thunk">
                    # </a></h3>
            <pre><code class="lang-js"><span class="hljs-keyword">let</span> thunk = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">{getState,dispatch}</span>)</span>{
    <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">next</span>)</span>{
        <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">action</span>)</span>{
           <span class="hljs-keyword">if</span>(<span class="hljs-keyword">typeof</span> action == <span class="hljs-string">'function'</span>){
                action(dispatch,getState);
           }<span class="hljs-keyword">else</span>{
               next(action);
           }
        }
    }
}
</code></pre>
            <h3 id="t205.8 promise">5.8 promise <a
                    href="http://www.zhufengpeixun.cn/architecture/html/28.redux-2-%E4%B8%AD%E9%97%B4%E4%BB%B6.html#t205.8%20promise">
                    # </a></h3>
            <pre><code class="lang-js"><span class="hljs-keyword">let</span> promise = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">{getState,dispatch}</span>)</span>{
    <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">next</span>)</span>{
        <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">action</span>)</span>{
           <span class="hljs-keyword">if</span>(action.then){
               action.then(dispatch);
           }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(action.payload &amp;&amp; action.payload.then){
               action.payload.then(<span class="hljs-function"><span class="hljs-params">payload</span>=&gt;</span>dispatch({...action,payload}),payload=&gt;dispatch({...action,payload}));
           }<span class="hljs-keyword">else</span>{
               next(action);
           }
        }
    }
}
</code></pre>
            <h3 id="t215.9 join.js">5.9 join.js <a
                    href="http://www.zhufengpeixun.cn/architecture/html/28.redux-2-%E4%B8%AD%E9%97%B4%E4%BB%B6.html#t215.9%20join.js">
                    # </a></h3>
            <pre><code class="lang-js"><span class="hljs-keyword">import</span> {createStore} <span class="hljs-keyword">from</span> <span class="hljs-string">'redux'</span>;
<span class="hljs-keyword">import</span> reducers <span class="hljs-keyword">from</span> <span class="hljs-string">'./reducers'</span>;
<span class="hljs-keyword">let</span> logger = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">store</span>)</span>{
    <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">next</span>)</span>{
        <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">action</span>)</span>{
            <span class="hljs-built_in">console</span>.log(store.getState());
            next(action);
            <span class="hljs-built_in">console</span>.log(store.getState());
        }
    }
}
<span class="hljs-keyword">let</span> thunk = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">{getState,dispatch}</span>)</span>{
    <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">next</span>)</span>{
        <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">action</span>)</span>{
           <span class="hljs-keyword">if</span>(<span class="hljs-keyword">typeof</span> action == <span class="hljs-string">'function'</span>){
                action(dispatch,getState);
           }<span class="hljs-keyword">else</span>{
               next(action);
           }
        }
    }
}
<span class="hljs-keyword">let</span> promise = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">{getState,dispatch}</span>)</span>{
    <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">next</span>)</span>{
        <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">action</span>)</span>{
           <span class="hljs-keyword">if</span>(action.then){
               action.then(dispatch);
           }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(action.payload &amp;&amp; action.payload.then){
               action.payload.then(<span class="hljs-function"><span class="hljs-params">payload</span>=&gt;</span>dispatch({...action,payload}),payload=&gt;dispatch({...action,payload}));
           }<span class="hljs-keyword">else</span>{
               next(action);
           }
        }
    }
}

<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">compose</span>(<span class="hljs-params">...funcs</span>)</span>{
    <span class="hljs-keyword">return</span> funcs.reduce(<span class="hljs-function">(<span class="hljs-params">a,b</span>)=&gt;</span><span class="hljs-function">(<span class="hljs-params">...args</span>)=&gt;</span>a(b(...args)));
}

<span class="hljs-keyword">let</span> applyMiddleware = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">...middlewares</span>)</span>{
    <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">createStore</span>)</span>{
        <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">reducer</span>)</span>{
            <span class="hljs-keyword">let</span> store = createStore(reducer);
            <span class="hljs-keyword">let</span> dispatch;
            middlewares = middlewares.map(<span class="hljs-function"><span class="hljs-params">middleware</span>=&gt;</span>middleware({
                <span class="hljs-attr">getState</span>:store.getState,
                <span class="hljs-attr">dispatch</span>:<span class="hljs-function"><span class="hljs-params">action</span>=&gt;</span>dispatch(action)
            }));
            dispatch = compose(...middlewares)(store.dispatch);
            <span class="hljs-keyword">return</span> {...store,dispatch};
        }
    }
}
<span class="hljs-keyword">let</span> store = applyMiddleware(thunk,promise,logger)(createStore)(reducers);
<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> store;
</code></pre>

            <div class="copyright">Powered by <a href="https://github.com/jaywcjlove/idoc" target="_blank">idoc</a>.
                Dependence <a href="https://nodejs.org/">Node.js</a> run.</div>
        </div>

    </div>

    <script src="./28.redux-2-中间件_files/jquery.js"></script>
    <script>
        $('.warpper .page-toc ul ul li a').on('click', function () {
            $('.warpper .page-toc ul ul li a').removeClass('my-active')
            $(this).addClass('my-active')
        })

        $('.logo').on('mouseenter', function () {
            $('.nav').height('400px');
        })
        $('.nav').on('mouseleave', function () {
            $('.nav').height('80px');
        })
        $('.logo').on('click', function () {
            $('.nav').css('display', 'none');
            $('.warpper').css('padding', '0px');
        })
        // if (!$('.understand-me').length) {
        //   var bar = $(window).height() - $('.navbar ').height() - $('.page-toc').position().top;
        //   var count = bar / 26 / 2;
        //   var barHeight = $('.page-toc').outerHeight();
        //   $('.page-toc li').eq(0).children('a').addClass('red');
        //   var arr = [];
        //   $("h1,h2,h3,h4,h5,h6").each(function () {
        //     arr.push($(this).position().top);
        //   });
        //   var timer
        //   function dark() {
        //     clearTimeout(timer)
        //      timer = setTimeout(function () {
        //      var top = Math.abs($('.page-toc > ul').position().top);
        //      var cur = $('.content').scrollTop();
        //      for (var i = arr.length; i >= 0; i--) {
        //        if (arr[i] <= cur) {
        //          break;
        //        }
        //      }
        //      if (i === -1) {
        //        i = 0;
        //      }
        //      $('.page-toc li a').removeClass('red');
        //      $('.page-toc li').eq(i).children('a').addClass('red');
        //      let height = $('.page-toc li').eq(i).position().top-$('.page-toc').height(); // 如果当前的offset出去了 回到中间可好？
        //      $('.page-toc').scrollTop(height+$('.page-toc').height()/2);
        //    },200)
        //   }

        //   $('.content').on('scroll', dark);
        // }
    </script>
    <style>
        /* ::-webkit-scrollbar{width:14px;}
    ::-webkit-scrollbar-track{background-color:transparent;}
    ::-webkit-scrollbar-thumb{background-color:transparent;}
    ::-webkit-scrollbar-thumb:hover {background-color:transparent}
    ::-webkit-scrollbar-thumb:active {background-color:transparent} */

        .page-toc>ul .red {
            background: #f3f3f3;
            z-index: 1;
            border-left: 3px solid #009a61;
            -webkit-transition: all .2s ease;
            transition: all .2s ease;
            color: #000
        }
    </style>


</body>

</html>